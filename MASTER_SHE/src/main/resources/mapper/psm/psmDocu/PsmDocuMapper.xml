<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.psm.PsmDocu.mapper.PsmDocuMapper">

    <!-- Country&Site 목록 조회 -->
    <select id= "getPsmDocuments" resultType= "com.she.psm.model.PsmDocu">
        /*  PsmDocuMapper.getPsmDocuments [PsmDocu.xml] */
        with A as (
            select docu_id
                , max(convert(numeric, psm_docu_no)) as psm_docu_no
            from saf_psm_docu
            where 1 = 1
              and del_yn != 'Y'
            group by docu_id
        ), -- 개정이력
        B as (
            select task_key
                , count(*) as file_cnt
            from saf_attach_file saf
            where 1 = 1
            --and saf.task_class_nm = 'PLANT_MENUAL'
            and saf.use_yn is null
            and saf.task_key != 'TEMP'
            group by task_key
        ) -- 첨부파일 개수
        SELECT spd.psm_docu_no -- PSM문서번호
              , spd.category_cd -- 카테고리코드
              , spd.plant_cd       -- 사업장 코드
              , dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_PLANT_CD', spd.plant_cd) as plant_nm       -- 사업장 코드
              , spd.docu_id     -- 문서ID
              , spd.docu_grp_no -- 문서그룹번호
              , spd.docu_title -- 문서제목
              , step.code_nm as step_nm -- 상태명
              , spd.dept_cd -- 관리부서
              , spd.step_cd -- 문서진행상태코드
              , spd.rev_num -- 개정번호
              , spd.doc_write_dt -- 문서작성일
              , spd.last_check_dt -- 최근검토일
              , spd.next_check_dt -- 차기검토일
              , dept.dept_nm -- 담당부서명
              , category.code_nm as category_nm -- 카테고리 명
              , sub_category.code_nm as sub_category_nm -- 서브카테고리명
              , CASE WHEN apr.code = 'BAPSA' THEN apr.code_nm
                     WHEN apr.code = 'BAPSG' THEN apr.code_nm
                     ELSE '결재요청전' END AS bizApprStepNm -- 결재진행상태 명
              , case
                 when dbo.GET_USER_NM(spd.update_user_id) = '' then dbo.GET_USER_NM(spd.create_user_id)
                 else dbo.GET_USER_NM(spd.update_user_id) end    as writer_user_nm
            , case when spd.update_dt is null then convert(date, spd.create_dt) else convert(date, spd.update_dt) end   as writer_dt
            , B.file_cnt -- 첨부파일 개수
            , B.task_key -- 첨부파일 ID
            , spd.appr_rqst_no
        FROM saf_psm_docu spd
        left join com_dept dept
        on dept.dept_cd = spd.dept_cd
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PROCESS_STEP') step
        on step.code = spd.step_cd
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_PSM_CAT_CLS') category
        on category.code = spd.category_cd
        left join com_appr_rqst car
        ON car.appr_rqst_no = spd.appr_rqst_no
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') apr
        ON car.biz_appr_step_cd = apr.code
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_PSM_SUB_CAT_CLS') sub_category
        on sub_category.code = spd.sub_category_cd
        inner join A on spd.psm_docu_no = A.psm_docu_no
        left join B  on  cast(spd.psm_docu_no as varchar) = B.task_key
        where 1=1
        <if test= "plantCd != null and !plantCd.equals('')">
            and spd.plant_cd = #{plantCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(startYmd) and @org.apache.commons.lang3.StringUtils@isNotBlank(endYmd)">
        and (spd.doc_write_dt between #{startYmd} and #{endYmd})
        </if>
        <if test= "categoryCd != null and !categoryCd.equals('')">
        and spd.category_cd = #{categoryCd}
        </if>
        <if test= "subCategoryCd != null and !subCategoryCd.equals('')">
        and spd.sub_category_cd = #{subCategoryCd}
        </if>
        <if test= "useYn != null and !useYn.equals('')">
        and isnull(spd.use_yn, 'N') = #{useYn} /* 사용여부 */
        </if>
        <if test= 'checkEffectYn != null and !checkEffectYn.equals("")'>
        and isnull(spd.effective_yn, 'N') = #{checkEffectYn}
        </if>
        <if test= "deptCd != null and !deptCd.equals('')">
        AND EXISTS (
            SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
            UNION ALL
            SELECT 1 WHERE #{deptSubYn} = 'Y' AND  spd.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
            UNION ALL
            SELECT 1 WHERE #{deptSubYn} = 'N' AND spd.dept_cd = #{deptCd}
        )
        </if>
        <if test= "docuTitle != null and !docuTitle.equals('')">
        and spd.docu_title like '%' +  trim(#{docuTitle}) + '%'
        </if>
        and spd.del_yn != 'Y'
        order by spd.create_dt desc, category_cd, spd.sub_category_cd desc ,plant_cd ,docu_id ,docu_grp_no
    </select>
    
        <select id= "getPsmDocumentsFileList" resultType= "com.she.common.model.AttachFile">
              /*  PsmDocuMapper.getPsmDocumentsFileList [PsmDocu.xml] */
        select
        file_no
        from saf_attach_file
        where 
        task_key =  #{taskKey}
        </select>

    <!-- PSM Portlet 목록 조회 -->
    <select id= "getPsmPortletList" resultType= "com.she.psm.model.PsmDocu">
        /*  PsmDocuMapper.getPsmPortletList [PsmDocu.xml] */
        with A as (
            select docu_id
                , max(convert(numeric, rev_num)) as rev_num
            from saf_psm_docu
            where 1 = 1
            group by docu_id
        ) -- 개정이력
        SELECT  top 20
                spd.psm_docu_no -- PSM문서번호
              ,'[' + category.code_nm  + '] ' + spd.docu_title  category_docu_title -- 문서제목
              , spd.category_cd -- 카테고리코드
              , spd.plant_cd       -- 사업장 코드
              , dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_PLANT_CD', spd.plant_cd) as plant_nm       -- 사업장 코드
              , spd.docu_id     -- 문서ID
              , spd.docu_grp_no -- 문서그룹번호
              , spd.docu_title -- 문서제목
              , category.code_nm + spd.docu_title -- 문서제목
              , step.code_nm as step_nm -- 상태명
              , spd.dept_cd -- 관리부서
              , spd.step_cd -- 문서진행상태코드
              , spd.rev_num -- 개정번호
              , spd.doc_write_dt -- 문서작성일
              , spd.last_check_dt -- 최근검토일
              , spd.next_check_dt -- 차기검토일
              , dept.dept_nm -- 담당부서명
              , category.code_nm as category_nm -- 카테고리 명
              , sub_category.code_nm as sub_category_nm -- 서브카테고리명
              , CASE WHEN apr.code = 'BAPSA' THEN apr.code_nm
                     WHEN apr.code = 'BAPSG' THEN apr.code_nm
                     ELSE '결재요청전' END AS bizApprStepNm -- 결재진행상태 명
              , case
                 when dbo.GET_USER_NM(spd.update_user_id) = '' then dbo.GET_USER_NM(spd.create_user_id)
                 else dbo.GET_USER_NM(spd.update_user_id) end    as writer_user_nm
            , case when spd.update_dt is null then convert(date, spd.create_dt) else convert(date, spd.update_dt) end   as writer_dt
            , spd.appr_rqst_no
        FROM saf_psm_docu spd
        left join com_dept dept
        on dept.dept_cd = spd.dept_cd
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PROCESS_STEP') step
        on step.code = spd.step_cd
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_PSM_CAT_CLS') category
        on category.code = spd.category_cd
        left join com_appr_rqst car
        ON car.appr_rqst_no = spd.appr_rqst_no
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') apr
        ON car.biz_appr_step_cd = apr.code
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_PSM_SUB_CAT_CLS') sub_category
        on sub_category.code = spd.sub_category_cd
        inner join A
        on spd.docu_id = A.docu_id
        and spd.rev_num = A.rev_num
        where 1=1
        and spd.category_cd != 'PCC61' -- 교육자료 제외
        and spd.step_cd = 'PSEND' -- 문서진행상태코드 (완료)
        and spd.del_yn != 'Y'
        and spd.use_yn = 'Y'
        order by case when spd.update_dt is null then convert(date, spd.create_dt) else convert(date, spd.update_dt) end desc
    </select>

    <select id= "getPsmDocument" resultType= "com.she.psm.model.PsmDocu">
        /* PsmDocuMapper.getPsmDocument [PsmDocu.xml] */
        select  psm_docu_no, -- PSM 문서번호
                category_cd, -- 카페고리 코드
                sub_category_cd, -- sub 카테고리 코드
                doc_write_dt, -- 문서작성일
                last_check_dt, -- 최근 검토일
                next_check_dt, -- 차기 검토일
                spd.plant_cd, -- 사업장 코드
                spd.dept_cd, -- 관리부서
                process_cd, -- 공정코드
                enf_ymd, -- 시행일자
                docu_id, -- 문서ID
                docu_grp_no, -- 문서그룹번호
                docu_title, -- 문서제목
                docu_contents, -- 문서내용
                rev_num, -- 개정번호
                rev_ymd, -- 개정일자
                rev_contents, -- 개정내용
                ref_table_id, -- 참조테이블id
                del_yn, -- 삭제여부
                spd.use_yn, -- 사용여부
                step_cd, -- 문서진행상태코드
                spd.appr_rqst_no, -- 결재번호
                effective_yn, -- 유효성 여부
                act_mgr_id, -- 조치담당자 ID
                cu.user_nm as act_mgr_nm, -- 조치담당자 ID
                act_email, -- 조치담당자 이메일
                act_email_send_yn, -- 조치이메일 전송여부
                spd.create_user_id, -- 등록자ID
                spd.create_dt, -- 등록일
                spd.update_user_id, -- 최종수정자ID
                spd.update_dt, -- 최종수정일
                create_dept_cd, -- 등록자 부서코드
                update_dept_cd, -- 수정자 부서코드
                step.code_nm as step_nm ,-- 문서진행상태코드명
                isnull(apprStep.code_nm, '결재요청전') as appr_step,-- 결재진행상태명
                apprStep.code as biz_appr_step_cd, -- 결재진행상태코드
                cd.dept_nm, --부서명
                dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_PLANT_CD', spd.plant_cd) as plant_nm -- 사업장
        from saf_psm_docu spd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PROCESS_STEP') step
        on step.code = spd.step_cd
        left outer join com_appr_rqst car
        on car.appr_rqst_no = spd.appr_rqst_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') apprStep
        on car.biz_appr_step_cd = apprStep.code
        left outer join com_dept cd
        on cd.dept_cd = spd.dept_cd
        left outer join com_user cu
        on cu.user_id = spd.act_mgr_id
        where psm_docu_no = #{psmDocuNo}
    </select>

    <select id= "getRevisionPsmDocument" resultType= "com.she.psm.model.PsmDocu">
        /*   PsmDocuMapper.getRevisionPsmDocument [PsmDocu.xml] */
        select  spd.psm_docu_no, -- PSM 문서번호
                spd.category_cd, -- 카테고리코드
                spd.plant_cd, -- 사업장 코드
                spd.docu_id, -- 문서ID
                spd.docu_grp_no, -- 문서그룹번호
                spd.docu_title, -- 문서제목
                spd.dept_cd, -- 관리부서코드
                spd.create_user_id, -- 등록자ID
                dept.dept_nm, -- 관리부서명
                cu.user_nm, -- 등록자명
                spd.rev_num, -- 개정번호
                isnull(apprStep.code_nm, '결재요청전') as step_nm, -- 결재진행상태명
                sub_category.code_nm as sub_category_nm -- 서브카테고리 코드명
        from saf_psm_docu spd
        left outer join com_dept dept
        on dept.dept_cd = spd.dept_cd
        left outer join com_user cu
        on cu.user_id = spd.create_user_id
        left outer join com_appr_rqst car
        on car.appr_rqst_no = spd.appr_rqst_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') apprStep
        on car.biz_appr_step_cd = apprStep.code
        left join dbo.LANG_CODE_MASTER('kr', 'SAF_PSM_SUB_CAT_CLS') sub_category
        on sub_category.code = spd.sub_category_cd
        where 1=1
        and spd.docu_id = #{docuId}
        and spd.del_yn != 'Y'
        order by convert(numeric, spd.rev_num) desc
    </select>

    <select id= "getSubCategory" resultType= "com.she.manage.model.CodeMaster">
        /* PsmDocuMapper.getSubCategory [PsmDocu.xml] */
        select code, code_nm
        from com_code_master
        where 1=1
        and code_group_cd = 'SAF_PSM_SUB_CAT_CLS'
        and attr1 = #{code}
    </select>

    <!-- Country&Site 목록 조회 -->
    <select id= "getDocuGrpNoList" resultType= "com.she.psm.model.DocuGrpNo">
         /* PsmDocuMapper.getDocuGrpNoList [PsmDocu.xml] */
         select distinct docu_grp_no
         from saf_psm_docu
    </select>

    <insert id= "createPsmDocument" parameterType= "com.she.psm.model.PsmDocu">
        /* PsmDocuMapper.createPsmDocument [PsmDocu.xml] */
        <selectKey keyProperty= "psmDocuNo" resultType= "int" order= "BEFORE">
            select next value for seq_saf_psm_docu
        </selectKey>
        insert into saf_psm_docu (
            plant_cd
            ,psm_docu_no -- PSM 문서번호
            ,category_cd -- 카테고리코드
            ,sub_category_cd -- 서브카테고리코드
            ,doc_write_dt -- 문서작성일
            ,last_check_dt -- 최근검토일
            ,next_check_dt -- 차기검토일
            ,dept_cd -- 관리부서
            ,docu_id     -- 문서ID
            ,docu_grp_no -- 문서그룹번호
            ,docu_title -- 문서제목
            ,rev_num -- 개정번호
            ,docu_contents -- 문서내용
            ,step_cd -- 문서진행상태코드
            ,effective_yn -- 유효성여부
            ,act_mgr_id -- 조치담당자id
            ,act_email -- 조치담당자 email
            ,create_user_id -- 등록자ID
            ,create_dt -- 등록일
            ,create_dept_cd -- 등록자 부서코드
            ,del_yn -- 삭제유무
            ,use_yn -- 사용여부
        )
        values (
            #{plantCd}
            ,#{psmDocuNo}
            ,#{categoryCd}
            ,#{subCategoryCd}
            ,#{docWriteDt}
            ,#{lastCheckDt}
            ,#{nextCheckDt}
            ,#{deptCd}
            ,(select isnull(max(docu_id), 0) + 1  from saf_psm_docu)
            ,#{docuGrpNo}
            ,#{docuTitle}
            ,#{revNum}
            ,#{docuContents}
            ,#{stepCd}
            ,#{effectiveYn}
            ,#{actMgrId}
            ,#{actEmail}
            ,#{createUserId}
            ,getdate()
            ,#{createDeptCd}
            ,#{delYn}
            ,#{useYn}
        )
    </insert>

    <insert id= "revisionPsmDocument" parameterType= "com.she.psm.model.PsmDocu" >
        /* PsmDocuMapper.revisionPsmDocument [PsmDocu.xml] */
        <selectKey keyProperty= "psmDocuNo" resultType= "int" order= "BEFORE">
            select next value for seq_saf_psm_docu
        </selectKey>
        insert into saf_psm_docu (
            plant_cd -- 사업장코드
            ,psm_docu_no -- PSM 문서번호
            ,category_cd -- 카테고리코드
            ,sub_category_cd -- 서브카테고리코드
            ,doc_write_dt -- 문서작성일
            ,last_check_dt -- 최근검토일
            ,next_check_dt -- 차기검토일
            ,dept_cd -- 관리부서
            ,docu_id -- 문서ID
            ,docu_grp_no -- 문서그룹번호
            ,docu_title -- 문서제목
            ,rev_num -- 개정번호
            ,docu_contents -- 문서내용
            ,step_cd -- 문서진행상태코드
            ,effective_yn -- 유효성여부
            ,act_mgr_id -- 조치담당자id
            ,act_email -- 조치담당자 email
            ,create_user_id -- 등록자ID
            ,create_dt -- 등록일
            ,create_dept_cd -- 등록자 부서코드
            ,rev_contents -- 개정내용
            ,del_yn -- 삭제 유무
            ,use_yn -- 사용여부
        )
        values (
            #{plantCd}
            ,#{psmDocuNo}
            ,#{categoryCd}
            ,#{subCategoryCd}
            ,#{docWriteDt}
            ,#{lastCheckDt}
            ,#{nextCheckDt}
            ,#{deptCd}
            ,#{docuId}
            ,#{docuGrpNo}
            ,#{docuTitle}
            ,#{revNum}
            ,#{docuContents}
            ,#{stepCd}
            ,#{effectiveYn}
            ,#{actMgrId}
            ,#{actEmail}
            ,#{createUserId}
            ,getdate()
            ,#{createDeptCd}
            ,#{revContents}
            ,#{delYn}
            ,#{useYn}
        )
    </insert>

    <update id= "updatePsmDocument" parameterType= "com.she.psm.model.PsmDocu">
        /* PsmDocuMapper.updatePsmDocument [PsmDocu.xml] */
        update saf_psm_docu
        set sub_category_cd = #{subCategoryCd}, -- 서브카테고리
            plant_cd = #{plantCd}, -- 사업장 코드
            dept_cd = #{deptCd}, -- 관리부서
            docu_grp_no = #{docuGrpNo}, -- 문서그룹번호(문서번호)
            doc_write_dt = #{docWriteDt}, -- 문서작성일(최근작성일)
            last_check_dt = #{lastCheckDt}, -- 최근검토일
            next_check_dt = #{nextCheckDt}, -- 차기검토일
            docu_title = #{docuTitle}, -- 문서제목
            effective_yn = #{effectiveYn}, -- 유효성여부(문서개정상태)
            act_mgr_id = #{actMgrId}, -- 조치담당자ID
            act_email = #{actEmail}, -- 조치담당자 이메일
            docu_contents = #{docuContents}, -- 문서내용
            use_yn        = #{useYn},         /* 사용여부 */
            <if test= "updateUserId != null and !updateUserId.equals('')">
            update_user_id = #{updateUserId}, -- 최종수정자 ID
            update_dt = getDate(), -- 최종수정일
            </if>
            update_dept_cd = #{updateDeptCd} -- 수정자 부서코드
      where psm_docu_no = #{psmDocuNo}
    </update>

    <update id= "renewalPsmDocument" parameterType= "com.she.psm.model.PsmDocu">
        /* PsmDocuMapper.renewalPsmDocument [PsmDocu.xml] */
        update saf_psm_docu
        set sub_category_cd = #{subCategoryCd}, -- 서브카테고리
            plant_cd = #{plantCd}, -- 사업장 코드
            dept_cd = #{deptCd}, -- 관리부서
            docu_grp_no = #{docuGrpNo}, -- 문서그룹번호(문서번호)
            doc_write_dt = #{docWriteDt}, -- 문서작성일(최근작성일)
            last_check_dt = #{lastCheckDt}, -- 최근검토일
            next_check_dt = #{nextCheckDt}, -- 차기검토일
            docu_title = #{docuTitle}, -- 문서제목
            effective_yn = #{effectiveYn}, -- 유효성여부(문서개정상태)
            act_mgr_id = #{actMgrId}, -- 조치담당자ID
            act_email = #{actEmail}, -- 조치담당자 이메일
            docu_contents = #{docuContents}, -- 문서내용
            update_user_id = #{updateUserId}, -- 최종수정자 ID
            update_dept_cd = #{updateDeptCd}, -- 수정자 부서코드
            rev_contents = #{revContents}, -- 개정사유
            rev_num = #{revNum}, -- 개정번호
            update_dt = getdate(),
        where psm_docu_no = #{psmDocuNo}
    </update>

    <update id= "updatePsmDocumentForAppr" parameterType= "com.she.psm.model.PsmDocu">
        /* PsmDocuMapper.updatePsmDocumentForAppr [PsmDocu.xml] */
        update saf_psm_docu
        set appr_rqst_no = #{apprRqstNo}, -- 결재요청번호
        step_cd = #{stepCd}
        where psm_docu_no = #{psmDocuNo}
    </update>
    

    <update id= "deletePsmDocument" parameterType= "com.she.psm.model.PsmDocu">
        /* PsmDocuMapper.deletePsmDocument [PsmDocu.xml] */
        update saf_psm_docu
        set del_yn = #{delYn} -- 삭제여부
        where psm_docu_no = #{psmDocuNo}
    </update>

    <select id= "getDeptHierarchyList" resultType= "HashMap">
        /*  PsmDocuMapper.getDeptHierarchyList [PsmDocu.xml] */
        -- 정전개
        WITH DOWN_DEPT (dept_cd , dept_nm, dept_lvl , p_dept_cd )
        AS (
            SELECT  dc.dept_cd, dept_nm, dc.dept_lvl, dc.p_dept_cd
            FROM com_dept dc
            WHERE dc.dept_cd = #{deptCd}   /* 부서코드(자신의 부서) */
            UNION ALL
            SELECT  PD.dept_cd, PD.dept_nm, PD.dept_lvl, PD.p_dept_cd
            FROM com_dept  PD
            JOIN DOWN_DEPT DC
            ON PD.p_dept_cd = DC.dept_cd
        ),
        UP_DEPT (dept_cd, dept_nm, dept_lvl ,p_dept_cd)
        AS(
            --찾고자하는 기준이 되는 부서의 정보를 select
            SELECT dept_cd, dept_nm, dept_lvl , p_dept_cd
            FROM com_dept
            WHERE dept_cd = #{deptCd}   /* 부서코드(자신의 부서) */
            UNION ALL
            --위에서 찾은 기준을 가지고 부서의 정보를 가지고 옴
            SELECT A.dept_cd, A.dept_nm, A.dept_lvl , A.p_dept_cd
            FROM com_dept A, UP_DEPT B
            WHERE A.dept_cd = B.p_dept_cd
        )
        SELECT dept_cd, dept_nm, dept_lvl ,p_dept_cd
        FROM com_dept
        WHERE dept_cd IN ( SELECT dept_cd  FROM DOWN_DEPT )
        UNION
        SELECT dept_cd, dept_nm, dept_lvl , p_dept_cd
        FROM UP_DEPT
        WHERE dept_lvl IN ('3','4','5','6')   -- 1:사업장, 2:Division, 3:Cluster, 4:Team, 5:Sub Team, 6:Part/Shift
    </select>
</mapper>