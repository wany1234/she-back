<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.psm.buildingFacilitiesLayout.mapper.LocalVentilationMapper">
    
    <select id= "getLocalVentilationLists" resultType= "com.she.psm.model.LocalVentilation">
        select slv.local_ventilation_no
            , slv.plant_cd
            , ccm.code_nm as plant_nm
            , slv.source
            , slv.process_nm
            , slv.inout_flag
            , slv.harmful_type
            , slv.hood_form
            , slv.hood_velocity
            , slv.reaction_velocity
            <!-- , slv.air_vol -->
            , slv.ex_air_vol
            , slv.pr_air_vol
            , slv.motor_vol
            , slv.motor_ep_form
            , slv.air_exhaust_order
            , slv.remark
            , slv.use_yn
            , case when slv.use_yn = 'Y' then '사용'
              else '미사용' end as use_yn_nm
            , slv.rev_num
            , slv.rev_contents
            , slv.creater_id
            , convert(char(19), slv.create_dt, 23) as create_dt
            , slv.updater_id
            , convert(char(19), slv.update_dt, 23) as update_dt
            , case
                 when dbo.GET_USER_NM(slv.updater_id) = '' then dbo.GET_USER_NM(slv.creater_id)
                 else dbo.GET_USER_NM(slv.updater_id) end    as writer_user_nm
            , case when slv.update_dt is null then convert(date, slv.create_dt) else convert(date, slv.update_dt) end   as writer_dt
        from saf_local_ventilation slv
        left outer join com_code_master ccm
        on slv.plant_cd = ccm.code
        and ccm.code_group_cd = 'COM_PLANT_CD'
        where 1=1
        <if test= "plantCd != null and !plantCd.equals('')">
        and slv.plant_cd = #{plantCd}
        </if>
        <if test= "source != null and !source.equals('')">
        and slv.source like '%' + #{source} + '%'
        </if>
        <if test= "processNm != null and !processNm.equals('')">
        and slv.process_nm like '%' + #{processNm} + '%'
        </if>
        <if test= "inoutFlag != null and !inoutFlag.equals('')">
        and slv.inout_flag like '%' + #{inoutFlag} + '%'
        </if>
        <if test= "harmfulType != null and !harmfulType.equals('')">
        and slv.harmful_type like '%' + #{harmfulType} + '%'
        </if>
        order by writer_dt desc, slv.plant_cd, slv.local_ventilation_no desc
    </select>

    <select id= "getLocalVentilation" resultType= "com.she.psm.model.LocalVentilation">
        select slv.local_ventilation_no
              , slv.plant_cd
              , ccm.code_nm as plant_nm
              , slv.source
              , slv.process_nm
              , slv.inout_flag
              , slv.harmful_type
              , slv.hood_form
              , slv.hood_velocity
              , slv.reaction_velocity
              <!-- , slv.air_vol -->
              , slv.ex_air_vol
              , slv.pr_air_vol
              , slv.motor_vol
              , slv.motor_ep_form
              , slv.air_exhaust_order
              , slv.remark
              , slv.use_yn
              , case when slv.use_yn = 'Y' then '사용'
                else '미사용' end as use_yn_nm
              , slv.rev_num
              , slv.rev_contents
              , slv.creater_id
              , convert(char(19), slv.create_dt, 23) as create_dt
              , slv.updater_id
              , convert(char(19), slv.update_dt, 23) as update_dt
			  , slv.chng_num
          FROM saf_local_ventilation slv
          LEFT OUTER JOIN com_code_master ccm
            ON slv.plant_cd = ccm.code
           AND ccm.code_group_cd = 'COM_PLANT_CD'
          LEFT OUTER JOIN saf_chng_ref_work scrw
            ON scrw.ref_table_nm = 'saf_local_ventilation'
           AND scrw.ref_table_id = slv.local_ventilation_no
        where 1=1
        and slv.local_ventilation_no = #{localVentilationNo}
    </select>
    
    <insert id= "createLocalVentilation" parameterType= "com.she.psm.model.LocalVentilation">
           <selectKey keyProperty= "localVentilationNo" resultType= "com.she.psm.model.LocalVentilation" order= "BEFORE">
            select (next value for seq_local_ventilation) as localVentilationNo
          </selectKey>
          insert into saf_local_ventilation
          (
          local_ventilation_no
        ,plant_cd
        ,source
        ,process_nm
        ,inout_flag
        ,harmful_type
        ,hood_form
        ,hood_velocity
        ,reaction_velocity
        <!-- ,air_vol -->
        ,ex_air_vol
        ,pr_air_vol
        ,motor_vol
        ,motor_ep_form
        ,air_exhaust_order
        ,remark
        ,use_yn
        ,rev_num
        ,rev_contents
        ,creater_id
        ,create_dt
        ,chng_num
          )
          values
          (
          #{localVentilationNo}
        ,#{plantCd}
        ,#{source}
        ,#{processNm}
        ,#{inoutFlag}
        ,#{harmfulType}
        ,#{hoodForm}
        ,#{hoodVelocity}
        ,#{reactionVelocity}
        <!-- ,#{airVol} -->
        ,#{exairVol}
        ,#{prairVol}
        ,#{motorVol}
        ,#{motorEpForm}
        ,#{airExhaustOrder}
        ,#{remark}
        ,#{useYn}
        ,#{revNum}
        ,#{revContents}
        ,#{createrId}
        ,getDate()
        ,#{chngNum}
          )
    </insert>
    
    <update id= "updateLocalVentilation" parameterType= "com.she.psm.model.LocalVentilation">
        update saf_local_ventilation 
        set plant_cd = #{plantCd}
            ,source = #{source}
            ,process_nm = #{processNm}
            ,inout_flag = #{inoutFlag}
            ,harmful_type = #{harmfulType}
            ,hood_form = #{hoodForm}
            ,hood_velocity = #{hoodVelocity}
            ,reaction_velocity = #{reactionVelocity}
            <!-- ,air_vol = #{airVol} -->
            ,ex_air_vol = #{exairVol}
            ,pr_air_vol = #{prairVol}
            ,motor_vol = #{motorVol}
            ,motor_ep_form = #{motorEpForm}
            ,air_exhaust_order = #{airExhaustOrder}
            ,remark = #{remark}
            ,use_yn = #{useYn}
            ,rev_num = #{revNum}
            ,rev_contents = #{revContents}
            ,updater_id = #{updaterId}
            ,update_dt = getdate()
            ,chng_num = #{chngNum}
        where local_ventilation_no = #{localVentilationNo}
    </update>
    
    <delete id= "deleteLocalVentilation" parameterType= "com.she.psm.model.LocalVentilation">
        delete saf_local_ventilation
        where local_ventilation_no = #{localVentilationNo}
    </delete>
</mapper>