<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.env.water.baseInfo.mapper.TestItemMapper">
    <select id= "getTestItems" resultType= "com.she.env.water.model.TestItem">
        select
             t.plant_cd as plantCd
            ,b.code_nm as plantNm
            ,t.ewtr_test_item_cd
            ,t.ewtr_test_item_nm
            ,t.env_unit_cd
            ,c.code_nm as env_unit_nm
            ,t.input_type_cd
            ,t.remark
            ,t.sort_order
            ,t.use_yn
            ,case when t.use_yn = 'Y' 
                        then '사용'else '미사용'
                        end as use_yn_nm
            ,t.create_user_id
            ,t.create_dt
            ,t.update_user_id
            ,t.update_dt
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm
            , case
                 when dbo.GET_USER_NM(t.update_user_id) = '' then dbo.GET_USER_NM(t.create_user_id)
                 else dbo.GET_USER_NM(t.update_user_id) end    as writer_user_nm
            , case when t.update_dt is null then convert(date, t.create_dt) else convert(date, t.update_dt) end   as writer_dt
        from ewtr_test_item t
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'ENV_UNIT') c on t.env_unit_cd = c.code
        left outer join com_user cu on t.create_user_id = cu.user_id
        left outer join com_user uu on t.update_user_id = uu.user_id
        left outer join ( select code , code_nm from dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') ) b on  t.plant_cd = b.code
        where 1=1
        <if test='useYn != null and useYn != ""'>
        and t.use_yn = #{useYn}
        </if>
        <if test= "plantCd != null and !plantCd.equals('')">
        and t.plant_cd     = #{plantCd}
        </if>
        <if test= "ewtrTestItemNm != null and !ewtrTestItemNm.equals('')">
            and t.ewtr_test_item_nm     like '%' + #{ewtrTestItemNm} + '%'
        </if>
        order by writer_dt desc, t.plant_cd
    </select>

    <select id= "getTestItem" parameterType= "String" resultType= "com.she.env.water.model.TestItem">
        select
             t.plant_cd as plantCd
            ,t.ewtr_test_item_cd
            ,t.ewtr_test_item_nm
            ,t.env_unit_cd
            ,t.input_type_cd
            ,t.remark
            ,t.sort_order
            ,t.use_yn
            ,t.create_user_id
            ,t.create_dt
            ,t.update_user_id
            ,t.update_dt
        from ewtr_test_item t
        where t.ewtr_test_item_cd = #{ewtrTestItemCd}
    </select>

    <insert id= "createTestItem" parameterType= "com.she.env.water.model.TestItem">
        <selectKey keyProperty= "ewtrTestItemCd" resultType= "String" order= "BEFORE">
            select replicate('0',5 - len(convert(varchar(5), next value for seq_ewtr_test_item))) 
                + convert(varchar(5), (select current_value from sys.sequences where lower(name)='seq_ewtr_test_item')) as ewtr_test_item_cd
        </selectKey>
        insert into ewtr_test_item
        ( 
            ewtr_test_item_cd
            ,plant_cd
            ,ewtr_test_item_nm
            ,env_unit_cd
            ,remark
            ,sort_order
            ,use_yn
            ,input_type_cd
            ,create_user_id
            ,create_dt
        )
        VALUES
        ( 
            #{ewtrTestItemCd}
            ,#{plantCd}
            ,#{ewtrTestItemNm}
            ,#{envUnitCd}
            ,#{remark}
            ,#{sortOrder}
            ,#{useYn}
            ,#{inputTypeCd}
            ,#{createUserId}
            ,getDate()
        )
    </insert>

    <update id= "updateTestItem" parameterType= "com.she.env.water.model.TestItem">
        update ewtr_test_item
        SET ewtr_test_item_nm = #{ewtrTestItemNm}
            ,plant_cd = #{plantCd}
            ,env_unit_cd = #{envUnitCd}
            ,remark = #{remark}
            ,sort_order = #{sortOrder}
            ,input_type_cd = #{inputTypeCd}
            ,use_yn = #{useYn}
            ,update_user_id = #{updateUserId}
            ,update_dt = getDate()
        where ewtr_test_item_cd = #{ewtrTestItemCd}
    </update>

    <select id="getTestItemCheck" resultType="int">
        select count(*) as cnt
        from ewtr_test_item
        where
          ewtr_test_item_nm = #{ewtrTestItemNm}
          and plant_cd = #{plantCd}
        <if test= "ewtrTestItemCd != null and ewtrTestItemCd > 0">
          and ewtr_test_item_cd != #{ewtrTestItemCd}
        </if>
    </select>
    
</mapper>