<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.education.mapper.EduMasterMapper">
    
    <select id = "getSafEduMstNo" resultType = "int">
        Select Max(saf_edu_mst_no)
        From saf_edu_mst
        Where saf_edu_course_no =  #{safEduCourseNo}
        
    </select>
    
    <insert id = "insertSafEduCourseMat">
            Insert Into saf_edu_course_mat (
                saf_edu_mst_no
                , edu_mat_no
                , mat_grp_no
                , saf_edu_course_no
                , title
                , rev_num
                , rev_ymd
                , enf_ymd
                , contents
                , rev_contents
                , create_user_id
                , create_dt
                , plant_cd )
            Select #{safEduMstNo}, edu_mat_no, mat_grp_no, saf_edu_course_no, title, rev_num, rev_ymd, enf_ymd, contents, rev_contents, create_user_id, create_dt, plant_cd
            From saf_edu_mat
            Where saf_edu_course_no = #{safEduCourseNo}

    </insert>

    <select id= "getEduMaster" resultType= "com.she.safety.model.EduMaster">
        select m.year 
              ,m.plant_cd
              ,co.is_type_cd as is_type_cd
              ,cc4.code_nm as is_type_nm 
              ,cm.code as p_biz_appr_step_cd
              ,cmr.code as r_biz_appr_step_cd
              ,co.edu_type_cd as edu_class_cd
              ,cc2.code_nm as edu_class_nm
              ,plant.code_nm as plant_nm 
              ,m.main_dept_cd
              ,m.target_dept_cd
              ,m.exec_dept_cd
              ,d.dept_nm as main_dept_nm
              ,d2.dept_nm as target_dept_nm
              ,d3.dept_nm as exec_dept_nm
              ,m.saf_edu_mst_no
              ,m.question_use_yn            
              ,m.saf_edu_course_no
              ,co.edu_course_nm
              ,co.edu_att_cd
              ,c1.code_nm as edu_att_nm
              ,m.edu_type_cd
              ,c2.code_nm as edu_type_nm
              ,m.edu_cost
              ,m.edu_nm
              ,m.edu_s_ymd
              ,m.edu_e_ymd
              ,m.edu_time
              ,m.p_appr_rqst_no
              ,m.r_appr_rqst_no
              ,m.edu_time_plan
              ,m.edu_place
              ,m.edu_teacher
              ,m.edu_content
              ,m.edu_result_summary
              ,m.user_id
              ,mcu.user_nm
              ,m.dept_cd
              ,d.dept_nm
              ,m.edu_s_hour
              ,m.edu_e_hour
              ,m.edu_eval_opin
              ,m.create_user_id
              ,m.create_dt
              ,m.update_user_id
              ,m.update_dt
              ,cu.user_nm as create_user_nm
              ,uu.user_nm as update_user_nm
              ,m.re_edu_exc_yn    
              ,m.re_edu_s_ymd 
              ,m.re_edu_e_ymd 
              ,m.re_edu_time  
              ,m.re_edu_place 
              ,m.re_edu_teacher
              ,m.re_edu_end_yn       
              ,m.dis_yn
              <!-- 변경관리 연동 X
              ,sc.saf_chng_no
              ,sc.chng_num -->
              ,m.chng_num
              ,m.edu_method_cd
              ,c5.code_nm as edu_method_nm
              , m.edu_plan_state 
              , m.ori_saf_edu_mst_no
              , (select edu_nm from saf_edu_mst where saf_edu_mst_no = m.ori_saf_edu_mst_no) as ori_edu_nm
              , rm.edu_nm as re_edu_nm
              , rm.saf_edu_mst_no as re_saf_edu_mst_no
              , m.re_edu_yn
              , m.subconn_score
          FROM saf_edu_mst m
         INNER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code
          LEFT OUTER JOIN saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on co.edu_type_cd = cc2.code
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_TYPE') c2 on m.edu_type_cd = c2.code
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_STEP') c3 on m.process_step_cd = c3.code
          LEFT OUTER JOIN com_appr_rqst ar on ar.appr_rqst_no = m.p_appr_rqst_no
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm on cm.code = ar.biz_appr_step_cd
          LEFT OUTER JOIN com_appr_rqst arr on arr.appr_rqst_no = m.r_appr_rqst_no
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cmr on cmr.code = arr.biz_appr_step_cd
          LEFT OUTER JOIN com_dept d on m.main_dept_cd = d.dept_cd
          LEFT OUTER JOIN com_dept d2 on m.target_dept_cd = d2.dept_cd
          LEFT OUTER JOIN com_dept d3 on m.exec_dept_cd = d3.dept_cd
          LEFT OUTER JOIN com_user mcu on m.user_id = mcu.user_id
          LEFT OUTER JOIN com_user cu on m.create_user_id = cu.user_id
          LEFT OUTER JOIN com_user uu on m.update_user_id = uu.user_id
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'MGT_LAW_CLASS') cc4 on co.is_type_cd = cc4.code
          LEFT OUTER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'MGT_LAW_CLASS') c5 on co.is_type_cd = c5.code
          LEFT OUTER JOIN saf_edu_mst rm on m.saf_edu_mst_no = rm.ori_saf_edu_mst_no
        <!-- 변경관리 연동 X
          LEFT OUTER JOIN saf_chng_ref_work scrw
            ON scrw.ref_table_nm = 'saf_edu_mst'
           AND scrw.ref_table_id = m.saf_edu_mst_no
          LEFT OUTER JOIN saf_chng sc
            ON scrw.saf_chng_no = sc.saf_chng_no -->
        where 1=1
        and m.saf_edu_mst_no = #{safEduMstNo}
    </select>

    <insert id= "createEduMaster" parameterType= "com.she.safety.model.EduMaster">
        <selectKey keyProperty= "safEduMstNo" resultType= "int" order= "BEFORE">
            select next value for seq_saf_edu_mst
        </selectKey>
        insert into saf_edu_mst
        ( 
            saf_edu_mst_no
            ,year
            ,question_use_yn
            ,plant_cd            
            ,saf_edu_course_no
            ,edu_type_cd
            ,edu_nm
            ,edu_s_ymd
            ,edu_e_ymd
            ,edu_time_plan
            ,edu_place
            ,edu_teacher
            ,edu_content
            ,edu_result_summary
            ,dept_cd
            ,edu_s_hour
            ,edu_e_hour
            ,edu_eval_opin
            ,user_id
            ,main_dept_cd
            ,target_dept_cd
            ,exec_dept_cd            
            ,create_user_id
            ,create_dt
            ,chng_num
            ,p_step_cd
            ,p_proc_step_cd
            ,p_state_cd
            ,edu_method_cd
            ,re_edu_yn
            ,ori_saf_edu_mst_no 
            ,subconn_score
        )
        VALUES
        ( 
            #{safEduMstNo}
            ,#{year}
            ,#{questionUseYn}
            ,#{plantCd}
            ,#{safEduCourseNo}
            ,#{eduTypeCd}
            ,#{eduNm}
            ,#{eduSYmd}
            ,#{eduEYmd}
            ,#{eduTimePlan}
            ,#{eduPlace}
            ,#{eduTeacher}
            ,#{eduContent}
            ,#{eduResultSummary}
            ,#{deptCd}
            ,#{eduSHour}
            ,#{eduEHour}
            ,#{eduEvalOpin}
            ,#{userId}
            ,#{mainDeptCd}
            ,#{targetDeptCd}
            ,#{execDeptCd}
            ,#{createUserId}
            ,getDate()
            ,#{chngNum}
            ,'BAPSB'
            ,'CS001'
            <if test="pStateNm != null and !pStateNm.equals('')">
            ,#{pStateNm}  
            </if>     
            <if test="pStateNm == null or pStateNm.equals('')">
            ,'STATE2'  
            </if>  
            ,#{eduMethodCd}
            ,#{reEduYn}
            ,#{oriSafEduMstNo}
            ,#{subconnScore}
        )
    </insert>

    <update id= "updateEduMaster" parameterType= "com.she.safety.model.EduMaster">
        update saf_edu_mst
        SET saf_edu_course_no = #{safEduCourseNo}
            ,year= #{year}
            ,r_state_cd= 'STATE2'
            ,plant_cd = #{plantCd}           
            ,edu_time = #{eduTime}
            ,edu_type_cd = #{eduTypeCd}
            ,edu_nm = #{eduNm}
            ,edu_cost = #{eduCost}
            ,edu_s_ymd = #{eduSYmd}
            ,question_use_yn = #{questionUseYn}
            ,edu_e_ymd = #{eduEYmd}
            ,edu_time_plan = #{eduTimePlan}
            ,edu_place = #{eduPlace}
            ,edu_teacher = #{eduTeacher}
            ,edu_content = #{eduContent}
            ,edu_result_summary = #{eduResultSummary}
            ,dept_cd = #{deptCd}
            ,user_id = #{userId}
            ,edu_s_hour = #{eduSHour}
            ,edu_e_hour = #{eduEHour}
            ,main_dept_cd =#{mainDeptCd}
            ,target_dept_cd =#{targetDeptCd}
            ,exec_dept_cd =#{execDeptCd}
            ,edu_eval_opin = #{eduEvalOpin}
            ,update_user_id = #{updateUserId}
            ,update_dt = getDate()
            ,chng_num = #{chngNum}
            ,edu_method_cd = #{eduMethodCd}
            ,edu_plan_state = #{eduPlanState}
            ,subconn_score = #{subconnScore}
        where saf_edu_mst_no = #{safEduMstNo}
    </update>
    
    <delete id= "deleteEduMaster">
        delete from saf_edu_mst
        where saf_edu_mst_no = #{safEduMstNo}
        
        delete from saf_edu_dtl_psn
        where saf_edu_mst_no = #{safEduMstNo}
        
        delete from saf_edu_course_mat
        where saf_edu_mst_no = #{safEduMstNo} And edu_mat_no in(
            select edu_mat_no
            from saf_edu_mat
            where saf_edu_course_no = #{safEduCourseNo})
    </delete>
    
    <select id= "getEduMasterUser" resultType= "com.she.manage.model.User">
        select u.user_id, u.user_nm, d.dept_cd, d.dept_nm,u.plant_cd
            ,dbo.GET_CODE_NM_LANG('kr','COM_PLANT_CD', u.plant_cd) as plant_nm
            , u.com_sex_type_cd, case when u.com_sex_type_cd = '1' then '남자' else '여자' end as com_sex_type_nm
            , u.office_tel, u.phone_no, u.email, u.birth_ymd, u.entry_ymd
            , u.use_yn
            , u.create_user_id, cu.user_nm as create_user_nm, u.create_dt
            , u.update_user_id, uu.user_nm as update_user_nm, u.update_dt
        from com_user u
        inner join com_dept d on u.dept_cd = d.dept_cd
        inner join com_user cu on u.create_user_id = cu.user_id
        left outer join com_user uu on u.update_user_id = uu.user_id
        inner join saf_edu_dtl_psn edu on u.user_id = edu.user_id
        where edu.saf_edu_mst_no = #{safEduMstNo}
    </select>
    
    <insert id= "createEduMasterUser">
        insert into saf_edu_dtl_psn
        (    
            saf_edu_mst_no
            ,user_id
            ,dept_cd
            ,complet_yn
            ,re_edu_not_yn
            ,re_complet_yn
        )
        values
        (    
            #{safEduMstNo}
            ,#{userId}
            ,#{deptCd}
            ,'N'
            ,'N'
            ,'N'
        )
    </insert>
    
    <delete id= "deleteEduMasterUser">
        delete from saf_edu_dtl_psn
        where saf_edu_mst_no = #{safEduMstNo}
    </delete>
    
    <select id= "getEduDetailPersons" resultType= "com.she.safety.model.EduDetailPerson">
        select 
             p.saf_edu_mst_no
            ,p.user_id
            ,u.user_nm
            ,p.dept_cd
            ,d.dept_nm
            ,p.complet_yn
            ,p.complet_ymd
            ,p.remark
            ,p.re_edu_not_yn
            --,round(p.edu_eval_pnt,0) as edu_eval_pnt
            ,p.edu_eval_pnt
            ,p.edu_eval_contents
            --,round(p.edu_eval_pnt_sec,0) as edu_eval_pnt_sec
            ,p.edu_eval_pnt_sec
            --,p.edu_eval_time
            ,convert(varchar, p.edu_eval_time, 120) as edu_eval_time
            ,p.re_complet_yn
            ,p.re_remark
            ,p.re_edu_time
            ,p.re_edu_not_yn
        from saf_edu_dtl_psn p
        left outer join com_dept d on p.dept_cd = d.dept_cd
        left outer join com_user u on p.user_id = u.user_id
        where 1=1
        <if test='safEduMstNo != null and safEduMstNo != 0'>
        and p.saf_edu_mst_no = #{safEduMstNo}
        </if>
        <if test='completYn != null and completYn != ""'>
        and p.complet_yn = #{completYn}
        </if>        
        <if test='reEduNotYn != null and reEduNotYn != ""'>
        and p.re_edu_not_yn = #{reEduNotYn}
        </if>           
        order by u.user_nm
    </select>
    
    <update id= "updateEduDetailPerson" parameterType= "com.she.safety.model.EduDetailPerson">
        update saf_edu_dtl_psn
        SET complet_yn = #{completYn}
            ,complet_ymd = case when #{completYn}='Y' then #{completYmd} else null end
            ,remark = #{remark}            
            ,edu_eval_pnt = #{eduEvalPnt}
            ,edu_eval_contents = #{eduEvalContents}
            ,re_edu_not_yn = #{reEduNotYn}
            ,edu_eval_pnt_sec = #{eduEvalPntSec}
        where saf_edu_mst_no = #{safEduMstNo}
        and user_id = #{userId}
    </update>

    <select id= "getPlanQuestion" resultType= "String">
        select  edu_question_lst_no 
        from saf_edu_mst_question
        where saf_edu_mst_no = #{safEduMstNo}    
    </select>
    
   <insert id = "createPlanQuestion" parameterType="String">
      insert into saf_edu_mst_question (saf_edu_mst_no, edu_question_lst_no) 
      values(#{safEduMstNo}, #{eduQuestionLstNo}) 
   </insert>
    
    <delete id= "deletePlanQuestion">
        delete from saf_edu_mst_question
        where saf_edu_mst_no = #{safEduMstNo}
    </delete>
    
    <select id= "getPlanData" resultType= "String">
        select edu_mat_no
        from saf_edu_mst_mat
        where saf_edu_mst_no = #{safEduMstNo}
    </select>
        
   <insert id = "createPlanData" parameterType="String">
      insert into saf_edu_mst_mat (saf_edu_mst_no, edu_mat_no) 
      values(#{safEduMstNo}, #{eduMatNo}) 
   </insert>
       
    <delete id = "deletePlanData">
            delete from saf_edu_mst_mat
        where saf_edu_mst_no = #{safEduMstNo}
    </delete>
    
    <update id="updateAppr" >
        UPDATE saf_edu_mst
        SET  p_appr_rqst_no = #{apprRqstNo}       
        <if test="apprStepCd!=null and !apprStepCd.equals('')"> 
        ,p_step_cd = #{apprStepCd}
        </if>
        <if test='apprStepCd.equals("BAPSA")'>
        ,p_state_cd = 'STATE3'
        </if>
        <if test='apprStepCd.equals("BAPSG")'>
        ,p_state_cd = 'STATE4'
        ,r_proc_step_cd='CS002'
        ,r_state_cd='STATE1'
        ,r_step_cd='BAPSB'
        </if> 
        where saf_edu_mst_no = #{safEduMstNo}
    </update>    
    
    
    <update id="updateApprResult" >
        UPDATE saf_edu_mst
        SET  r_appr_rqst_no = #{apprRqstNo}
        <if test="apprStepCd!=null and !apprStepCd.equals('')">
        ,r_step_cd = #{apprStepCd}
        </if>
        <if test='apprStepCd.equals("BAPSA")'>
        ,r_state_cd = 'STATE3' 
        </if>       
        <if test='apprStepCd.equals("BAPSG")'>
        ,r_state_cd = 'STATE4'
        </if>                
        where saf_edu_mst_no = #{safEduMstNo}
    </update>    
        
        
      <!-- 외부 이수자 crud -->
    <select id= "getEduOutSideUsers" resultType= "com.she.safety.model.EduOutsideUser">
        select 
             a.subconn_psn_no
            ,a.saf_edu_mst_no
            ,cvm.vendor_nm
            ,a.vendor_cd
            ,a.worker_nm
            ,a.birth_ymd
            ,a.gender_cd
            ,m.code_nm as gender_nm
        from  saf_edu_dtl_subconn_psn a
        left outer join com_vendor_mst cvm 
        on a.vendor_cd = cvm.vendor_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_SEX_TYPE') m
        on m.code = a.gender_cd
        where saf_edu_mst_no = #{safEduMstNo}        
    </select>
    
    <insert id= "createEduOutSideUser" parameterType= "com.she.safety.model.EduOutsideUser">
        <selectKey keyProperty= "subconnPsnNo" resultType= "int" order= "BEFORE">
            select next value for seq_saf_edu_dtl_subconn_psn as subconnPsnNo
        </selectKey>    
        insert into saf_edu_dtl_subconn_psn( 
            subconn_psn_no
            ,saf_edu_mst_no
            ,vendor_nm
            ,vendor_cd
            ,worker_nm
            ,birth_ymd
            ,gender_cd
            ,complet_yn
        ) values (
             #{subconnPsnNo}
            ,#{safEduMstNo}
            ,#{vendorNm}
            ,#{vendorCd}
            ,#{workerNm}
            ,#{birthYmd}
            ,#{genderCd}
            ,'Y'
        )

    </insert>
    
    <delete id= "deleteEduOutSideUser">
        delete from saf_edu_dtl_subconn_psn 
        where saf_edu_mst_no = #{safEduMstNo}
    </delete>
    
    
    <!-- 불참자 재교육  -->    
    <update id= "updateReEduMaster" parameterType= "com.she.safety.model.EduMaster">
        update saf_edu_mst set
             re_edu_exc_yn    = 'Y'
            ,re_edu_s_ymd = #{reEduSYmd}
            ,re_edu_e_ymd = #{reEduEYmd}
            ,re_edu_time = #{reEduTime}
            ,re_edu_place = #{reEduPlace}
            ,re_edu_teacher = #{reEduTeacher}
            ,re_edu_end_yn = #{reEduEndYn}
        where saf_edu_mst_no = #{safEduMstNo}
    </update>
    
    <update id= "updateReEduMasterUser" parameterType= "com.she.safety.model.EduDetailPerson">
        update saf_edu_dtl_psn set
             re_complet_yn = #{reCompletYn}
            ,complet_ymd = #{completYmd}
            ,re_remark    = #{reRemark}
            ,re_edu_time = getDate()
        where saf_edu_mst_no = #{safEduMstNo}
        and user_id = #{userId}
    </update>
    
    <update id= "updateReEduMasterComplet">
        update saf_edu_mst set
                re_edu_end_yn = 'Y'
        where saf_edu_mst_no = #{safEduMstNo}
    </update>
        
    <select id= "getReEduMasterCompletCheck" resultType="String">
        select re_edu_end_yn 
        from saf_edu_mst
        where saf_edu_mst_no = #{safEduMstNo}
    </select>        
    
    
    
    
    <!--  교육결과 엑셀 다운로드  -->
    
    <!-- 교육과정 -->
    <select id = "getEduCourseExcel" resultType = "java.util.LinkedHashMap">
         select 
            'PSC' as cmp -- 회사
            ,isnull(m.plant_cd,'') as plant_cd -- 사업장 
            ,'(주)열린'as edcFcl  -- 교육기관
            ,isnull(case when datalength(m.dept_cd) > 5 then right(m.dept_cd, 5) + '_' + m.plant_cd  else m.dept_cd + '_' + m.plant_cd end ,'') as dept_cd -- 부서코드
            ,isnull(co.edu_course_nm,'') as edu_course_nm -- 교육과정
            ,'1' as trnTyp-- 교육형태
            ,'A069' as trnTpc -- 교육주제
            ,'03019' as cpcCls -- 역량분류
            ,'-'as targets -- 교육대상 1061 
            ,'N' as useYn -- 필수여부
            ,''as esnLvl -- 필수직급
            ,'' as process1 -- 선수과정1
            ,'' as process2 -- 선수과정2
            ,'' as process3 -- 선수과정3
            ,'1' as schooling -- 교육기간
            ,'N' as aplSys -- 신청방식
            ,'N' as empInsCvr-- 고용보험대상
            ,isnull(DATEDIFF(dd,m.edu_s_ymd,m.edu_e_ymd) + 1 ,0)as ymd -- 교육일수 
            ,'N' as ovrEdc -- 해외교육여부
            ,isnull(REPLACE(CONVERT(VARCHAR, CAST(m.edu_cost AS MONEY),1),'.00',''),0) as edu_cost -- 총교육비
            ,isnull(m.edu_time,0) as edu_time  -- 교육시간
            ,'N' as aprSlfDtrJy  -- 승인자결재여부
            ,'Y' as prcCnd  -- 과정상태
            ,'N' as beChnOwn-- 차주변경가능
            ,'N' as blYn-- BL과정여부
            ,'N' as othBsnEstPbl -- 타사업장공개여부
            ,'' as trnLvl -- 교육레벨
            ,100 as atn-- 출석(%)
            ,0 as asg -- 과제물(%)
            ,80 as ttlScr-- 총점
            ,0 as prgStn-- 진도기준
            ,'N' as edcExp -- 교육만족도(설문)
            ,'N' as jobApl-- 현업적용도 여부
            ,'' as jobApl2-- 현업적용도 여부2
            ,'' as evlRflStt -- 현업적용도 평가반영여부
            ,'N' as pblSch -- 일정공개여부 
            ,isnull(co.study_tgt,'') as study_tgt  -- 학습목표
            ,isnull(co.study_contents,'')  as study_contents-- 주요학습내용
            ,'' as remark -- 비고
        from saf_edu_mst m
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code  
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        inner join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id     
        where 1=1
        and m.saf_edu_mst_no = #{safEduMstNo}
    </select>
    
    
    <!-- 교육차수 -->
    <select id = "getEduDisparitysExcel" resultType = "java.util.LinkedHashMap">
         select 
            co.edu_course_nm as keyCdPrc -- 대표과정코드 
            ,isnull(year(m.edu_s_ymd),'') as yyyy -- 년도
            ,isnull(m.edu_place ,'') as edu_place-- 교육장소
            ,isnull(DATEDIFF(dd,m.edu_s_ymd,m.edu_e_ymd) + 1,0) as ymd -- 교육일수 
            ,isnull( m.edu_time, 0) as edu_time  -- 교육시간
            ,'999' as cmp -- 정원
            ,'2' as cmpType -- 정원외신청구분
            ,isnull(replace(m.edu_s_ymd,'-', ''), '') as edu_s_ymd-- 수강신청시작일
            ,isnull(replace(m.edu_e_ymd, '-',''), '') as edu_e_ymd -- 수강신청종료일
            ,isnull(replace(m.edu_s_ymd, '-',''), '') as end_s_ymd2 -- 교육시작일
            ,isnull(replace(m.edu_e_ymd, '-',''), '') as end_e_ymd2 -- 교육종료일 
            ,'N' as crsRvc --수강취소가능여부
            ,'' as dtWhnIdr -- 수강취소시작일
            ,'' as  endDtIdr -- 수강취소종료일
            ,'N' as assmn -- 평가여부
            ,'' as prfChr -- 담임교수
            ,50 as sttDgr -- 차수상태
            ,isnull(REPLACE(CONVERT(VARCHAR, CAST(m.edu_cost AS MONEY),1),'.00',''),0) as edu_cost -- 총교육비
            ,0 as cost -- 인당교육비
            ,isnull( m.user_id , '') as user_id -- 담당자
            ,isnull(mcu.phone_no,'') as phone_no   -- 담당자연락처
            ,'N' as empInsCvr -- 고용보험대상
            ,'' as rfnChn -- 환급총금액
            ,'' as cstRmb -- 인당 환급비
            ,'' as remark -- 비고
        from saf_edu_mst m
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code  
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join com_user mcu on m.user_id = mcu.user_id
        inner join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id      
        where 1=1
        and m.saf_edu_mst_no = #{safEduMstNo}
    </select>
    
    
    <!-- 교육대상자 -->
    <select id = "getEduResultTargetsExcel" resultType = "java.util.LinkedHashMap">
         select 
            ROW_NUMBER() OVER(ORDER BY (SELECT 1)) as no
            ,isnull(year(m.edu_s_ymd),'') as yyyy -- 년도
            , EC.edu_course_nm as keyCdPrc -- 대표과정코드 
            ,'1' as sttDgr -- 차수상태
            ,'PSC' as companyCd -- 회사코드
            ,isnull(p.user_id,'') as userId -- 사번
        from saf_edu_dtl_psn p
        left outer join saf_edu_mst m on m.saf_edu_mst_no = p.saf_edu_mst_no
        Left Join saf_edu_course EC ON EC.saf_edu_course_no = m.saf_edu_course_no
        left outer join com_dept d on p.dept_cd = d.dept_cd
        left outer join com_user u on p.user_id = u.user_id
        where 1=1
        and p.saf_edu_mst_no = #{safEduMstNo}
        order by u.user_nm

    </select>
    
    <!-- 교육학습결과 -->
    <select id = "getEduResultsExcel" resultType = "java.util.LinkedHashMap">
        select
             ROW_NUMBER() OVER(ORDER BY (SELECT 1)) as no -- 순번
             ,isnull(year(m.edu_s_ymd),'') as yyyy -- 년도
             --,'' as crsCds-- 과정코드
             , EC.edu_course_nm
             ,'1' as nmbDmn -- 차수 
             ,isnull(u.user_nm, '') as user_nm -- 사용자명
             ,isnull(p.user_id, '') as user_id -- 사번 
             ,'(주)열린' as company -- 소속사 
             ,'PSC' as companyCd -- 소속사코드
             --,'' as cdCls -- 수강코드
             , m.edu_nm
             ,isnull((case when p.edu_eval_pnt is not null then 'Y' else 'N' end), 'N') as exm -- 시험
             ,isnull((case when p.edu_eval_pnt is not null then 'Y' else 'N' end), 'N') as atn  -- 출석
             ,'N' as tsk  -- 과제
             ,100 as remark-- 기타
             ,isnull(isnull( round(p.edu_eval_pnt_sec,0), round(p.edu_eval_pnt,0)),0) as pnt -- 총점
             ,isnull((case when p.complet_yn = 'Y' then 'Y' else 'N' end),'N') as cmp -- 수료여부
             ,isnull(m.edu_time,0) as edu_time -- 수료시간               
             
        from saf_edu_dtl_psn p
        left outer join saf_edu_mst m on m.saf_edu_mst_no = p.saf_edu_mst_no
        Left Join saf_edu_course EC ON EC.saf_edu_course_no = m.saf_edu_course_no
        left outer join com_dept d on p.dept_cd = d.dept_cd
        left outer join com_user u on p.user_id = u.user_id
        where 1=1
        and p.saf_edu_mst_no = #{safEduMstNo}
        order by u.user_nm
    </select>
    
    <!-- 교육이력 -->
    <select id = "getEduResultHistorysExcel" resultType = "java.util.LinkedHashMap">
           select
             isnull(p.user_id,'') as userId -- 사번
            ,isnull(replace(m.edu_s_ymd, '-' ,'' ) , '') as edu_s_ymd -- 교육시작일
            ,isnull(replace(m.edu_e_ymd, '-' , '') ,'') as edu_e_ymd -- 교육종료일 
            ,'PSC' as companyCd -- 소속사코드
            ,isnull(m.plant_cd,'') as plant_cd -- 교육주관사업장
            ,'(주)열린'as edcFcl  -- 교육기관
            ,isnull(case when datalength(m.dept_cd) > 5 then right(m.dept_cd, 5) + '_' + m.plant_cd  else m.dept_cd + '_' + m.plant_cd end ,'') as dept_cd -- 부서코드
            ,isnull(co.edu_course_nm ,'') as edu_course_nm-- 교육과정
            ,'1' as trnTyp-- 교육형태 
            ,'A069'as trnTpc -- 교육주제
            ,'03019' as cpcCls -- 역량분류
            ,'-'as targets -- 교육대상 1054 
            ,'N' as useYn -- 필수여부
            ,'1' as schooling -- 교육기간
            ,'N' as aplSys-- 신청방식
            ,'N' as empInsCvr-- 고용보험대상 
            ,isnull(DATEDIFF(dd,m.edu_s_ymd,m.edu_e_ymd) + 1,0) as ymd -- 교육일수 
            ,'N' as ovrEdc -- 해외교육여부
            ,isnull(REPLACE(CONVERT(VARCHAR, CAST(m.edu_cost AS MONEY),1),'.00',''),0) as edu_cost -- 총교육비
            ,isnull(m.edu_time,0) as edu_time -- 교육시간
            ,'N' as aprSlfDtrJy  -- 승인자결재여부
            ,'Y' as prcCnd  -- 과정상태
            ,'N' as beChnOwn-- 차주변경가능
            ,'N' as blYn-- BL과정여부
            ,'N' as othBsnEstPbl -- 타사업장공개여부
            ,'N' as edcExp-- 교육만족도
            ,'N' as jobApl-- 현업적용도 여부
            ,'' as jobApl2-- 현업적용도 여부2
            ,'N' as pblSch -- 일정공개여부
            ,isnull(co.study_tgt,'') as study_tgt-- 학습목표
            ,isnull(co.study_contents,'') as study_contents-- 주요학습내용
            ,isnull(m.edu_place,'') as edu_place-- 교육장소
            ,'999' as cmp -- 정원
            ,'2' as cmps -- 정원외신청구분
            ,isnull(replace( m.edu_s_ymd , '-', '') , '') as edu_s_ymd2 -- 수강신청시작일
            ,isnull(replace( m.edu_e_ymd, '-', '' ) , '') as edu_e_ymd2 -- 수강신청종료일            
            ,50 as sttDgr -- 차수상태
            ,isnull(p.user_id,'') as userId2 -- 담당자
            ,isnull(u.phone_no,'') as phone_no -- 담당자연락처
            ,isnull((case when p.complet_yn = 'Y' then 'Y' else 'N' end),'N') as cmp2 -- 수료여부
            ,isnull(isnull( round(p.edu_eval_pnt_sec,0), round(p.edu_eval_pnt,0)),0) as pnt -- 총점
            ,'' as empInsCvr2-- 고용보험대상
            ,'' as avg -- 평점
            ,isnull(m.edu_time, 0) as edu_time2 -- 이수시간
        from saf_edu_dtl_psn p
        left outer join saf_edu_mst m on m.saf_edu_mst_no = p.saf_edu_mst_no
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join com_dept d on p.dept_cd = d.dept_cd
        left outer join com_user u on p.user_id = u.user_id
        where 1=1
        and p.saf_edu_mst_no = #{safEduMstNo}
        order by u.user_nm
    </select>
    
    <select id="checkUserId" resultType="int">
        /* EduMasterMapper.checkUserId [EduMaster.xml] */
        select count(*) as cnt
          from com_user
         where user_id = #{userId}
    </select>

    <!--  교육과정의 교육대상자에 해당하는 사용자 목록 조회  -->
    <select id="getEduCoursePsn" resultType="com.she.safety.model.EduDetailPerson">
        select  segu.user_id
                ,dbo.GET_USER_NM(segu.user_id) as user_nm
                ,u.dept_cd
                ,dbo.GET_DEPT_NM(u.dept_cd) as dept_nm
                ,u.plant_cd
                ,dbo.GET_CODE_NM(u.plant_cd, 'COM_PLANT_CD') as plant_nm
        from saf_edu_grp seg
        inner join saf_edu_grp_user segu on segu.edu_grp_no = seg.edu_grp_no
        inner join com_user u on u.user_id = segu.user_id
        inner join com_dept d on u.dept_cd = d.dept_cd
        where seg.edu_grp_no = (select edu_grp_no
                                from saf_edu_course sec
                                inner join saf_edu_course_grp secg on sec.saf_edu_course_no = secg.saf_edu_course_no
                                where sec.saf_edu_course_no = #{safEduCourseNo}
                                and sec.plant_cd = #{plantCd})
        union
        select  distinct seh.user_id
                ,dbo.GET_USER_NM(seh.user_id) as user_nm
                ,u.dept_cd
                ,dbo.GET_DEPT_NM(u.dept_cd) as dept_nm
                ,u.plant_cd
                ,dbo.GET_CODE_NM(u.plant_cd, 'COM_PLANT_CD') as plant_nm
        from saf_elect_his seh
        inner join com_user u on u.user_id = seh.user_id
        inner join com_dept d on u.dept_cd = d.dept_cd
        where seh.saf_elect_titl_no = (select saf_elect_titl_no from saf_edu_course sec
                                    inner join saf_edu_course_grp secg on sec.saf_edu_course_no = secg.saf_edu_course_no
                                    where sec.saf_edu_course_no = #{safEduCourseNo}
                                    and sec.plant_cd = #{plantCd})
    </select>
    
    
    <insert id= "createEduVideo" parameterType= "com.she.safety.model.EduVideo">
        <selectKey keyProperty= "eduVideoNo" resultType= "int" order= "BEFORE">
             SELECT ISNULL(MAX(edu_video_no),0)+1 AS edu_video_no
              FROM saf_edu_video
        </selectKey>
     
        insert into saf_edu_video
        ( 
            saf_edu_mst_no
            ,saf_edu_course_no
            ,edu_video_no
            ,plant_cd            
            ,video_url
            ,video_total_time
            ,video_comp_time
            ,use_yn
            ,create_user_id
            ,create_dt
        )
        VALUES
        ( 
            #{safEduMstNo}
            ,#{safEduCourseNo}
            ,#{eduVideoNo}
            ,#{plantCd}
            ,#{videoUrl}
            ,#{videoTotalTime}
            ,#{videoCompTime}
            ,'Y'
            ,#{createUserId}
            ,getDate()
        )
    </insert>
    
    <update id= "updateEduVideo" parameterType= "com.she.safety.model.EduVideo">
        update saf_edu_video
        SET video_url = #{videoUrl}
            ,video_total_time= #{videoTotalTime}
            ,video_comp_time= #{videoCompTime}
            , update_user_id = #{updateUserId}
            , update_dt = getdate()
        where edu_video_no = #{eduVideoNo}
    </update>
    
    <delete id= "deleteEduVideo">
        delete from saf_edu_video
        where edu_video_no = #{eduVideoNo}
    </delete>
    
    <select id= "getEduVideo" resultType= "com.she.safety.model.EduVideo">
        select TOP 1
             saf_edu_mst_no
            ,saf_edu_course_no
            ,edu_video_no
            ,plant_cd            
            ,video_url
            ,video_total_time
            ,video_comp_time
            ,use_yn
            ,sort_order
            ,create_user_id
            ,create_dt
            ,update_user_id
            ,update_dt
        FROM saf_edu_video
        where 1=1
            and saf_edu_mst_no = #{safEduMstNo}
            and saf_edu_course_no = #{safEduCourseNo}
        order by edu_video_no desc
    </select>
    
    <select id= "getEduNotCompletUser" resultType= "com.she.manage.model.User">
        select u.user_id, u.user_nm, d.dept_cd, d.dept_nm,u.plant_cd
            ,dbo.GET_CODE_NM_LANG('kr','COM_PLANT_CD', u.plant_cd) as plant_nm
            , u.com_sex_type_cd, case when u.com_sex_type_cd = '1' then '남자' else '여자' end as com_sex_type_nm
            , u.office_tel, u.phone_no, u.email, u.birth_ymd, u.entry_ymd
            , u.use_yn
            , u.create_user_id, cu.user_nm as create_user_nm, u.create_dt
            , u.update_user_id, uu.user_nm as update_user_nm, u.update_dt
        from com_user u
        inner join com_dept d on u.dept_cd = d.dept_cd
        inner join com_user cu on u.create_user_id = cu.user_id
        left outer join com_user uu on u.update_user_id = uu.user_id
        inner join saf_edu_dtl_psn edu on u.user_id = edu.user_id
        where 1 = 1
            and edu.saf_edu_mst_no = #{safEduMstNo}
            and edu.complet_yn = 'N'
    </select>
    
    <select id ="getSubconnScore" resultType="int">
        select 
            subconn_score
        from saf_edu_mst 
        where saf_edu_mst_no = #{safEduMstNo}
    </select>         
    
</mapper>