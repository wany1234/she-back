<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.education.mapper.EduStatusMapper">
    <!-- 교육 계획 목록 조회 -->
    <select id= "getEduStatuss" resultType= "com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduStatuss [EduStatus.xml] */
         select 
             m.year
             ,m.p_proc_step_cd
             ,m.p_state_cd
             ,m.p_step_cd
             ,m.r_step_cd
             ,concat(dbo.GET_CODE_NM(m.p_proc_step_cd, 'COM_STEP'),' (', case when m.p_step_cd = 'BAPSD' then cm.code_nm else dbo.GET_CODE_NM(m.p_state_cd, 'COM_STATE') end , ')') as p_state_nm
            ,m.process_step_cd 
            ,m.main_dept_cd as main_dept_cd
            ,cd1.dept_nm as main_dept_nm
            ,m.target_dept_cd as target_dept_cd
            ,cd2.dept_nm as target_dept_nm
            ,m.exec_dept_cd as exec_dept_cd
            ,cd3.dept_nm as exec_dept_nm
            ,m.plant_cd
            ,co.is_type_cd 
            ,c6.code_nm as is_type_nm 
            ,co.edu_type_cd as edu_class_cd
            ,cc2.code_nm as edu_class_nm
            ,c4.code_nm as plant_nm
            ,m.saf_edu_mst_no
            ,m.saf_edu_course_no
            ,co.edu_course_nm
            ,co.edu_att_cd
            ,c1.code_nm as edu_att_nm
            ,m.edu_type_cd
            ,c2.code_nm as edu_type_nm
            ,m.edu_nm
            ,m.p_proc_step_cd
            ,c3.code_nm as p_proc_step_nm
            ,m.edu_s_ymd
            ,m.edu_e_ymd
            ,m.edu_s_ymd +' ~ '+ m.edu_e_ymd as eduYmd
            ,m.edu_time
            ,m.edu_place
            ,m.edu_teacher
            ,m.edu_content
            ,m.edu_result_summary
            ,m.dept_cd
            ,m.edu_s_hour
            ,m.edu_e_hour
            ,m.edu_eval_opin
            ,m.create_user_id
            ,m.create_dt
            ,m.update_user_id
            ,m.update_dt
            , case
                 when dbo.GET_USER_NM(m.update_user_id) = '' then dbo.GET_USER_NM(m.create_user_id)
                 else dbo.GET_USER_NM(m.update_user_id) end    as writer_user_nm
            , case when m.update_dt is null then convert(date, m.create_dt) else convert(date, m.update_dt) end   as writer_dt
            <!-- 
            ,case when m.process_step_cd != 'SES01' 
                  then case when (select count(*) from saf_edu_mst_question where saf_edu_mst_no = m.saf_edu_mst_no) > 0 then '보기'
                            else null
                        end
                  else null end as qr_code -->
            -- 20200602 김봉석 부장님 요청으로 무조건 '보기' 보이도록 설정
            , '보기' as qr_code
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm        
            ,case when m.process_step_cd = 'SES01' then ar.biz_appr_step_cd else arr.biz_appr_step_cd end as biz_appr_step_cd
            ,case when m.process_step_cd = 'SES01' then isnull(cm.code_nm, '결재요청전') else isnull(cmr.code_nm, '결재요청전') end as biz_appr_step_nm
            ,m.edu_place
            ,a.user_nm
            ,c5.dept_nm
            -- 대상 인원 
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no ) as totalUserNum
            -- 이수인원 
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no and p.complet_yn = 'Y' ) as passUserNum
            -- 불참인원
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no and p.complet_yn = 'N' ) as failUserNum
            , (select count(*) from saf_edu_dtl_psn a where a.saf_edu_mst_no = m.saf_edu_mst_no and a.re_edu_not_yn = 'Y' and complet_yn = 'N' )  as exceptUserNum
            -- 이수인원 외부
            ,(select count(*) from saf_edu_dtl_subconn_psn a where a.saf_edu_mst_no = m.saf_edu_mst_no) as passOutUserNum
            -- 이수인원 (총합)
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no and p.complet_yn = 'Y' ) + 
             (select count(*) from saf_edu_dtl_subconn_psn a where a.saf_edu_mst_no = m.saf_edu_mst_no) as totPassUserNum
             ,isnull(edu_time,0) as edu_time
            ,case when process_step_cd = 'SES03' then (select isnull(sum(case when b.re_complet_yn = 'Y'  then 1 else 0 end),0) 
            from saf_edu_mst a
            left outer join saf_edu_dtl_psn b
            on a.saf_edu_mst_no = b.saf_edu_mst_no
            where a.saf_edu_mst_no = m.saf_edu_mst_no
            and a.re_edu_exc_yn = 'Y' ) else 0 end as reEduPerson



            ,case when process_step_cd = 'SES03' then (select isnull(sum(case when b.re_complet_yn != 'Y'  then 1 else 0 end),0)
            from saf_edu_mst a
            left outer join saf_edu_dtl_psn b
            on a.saf_edu_mst_no = b.saf_edu_mst_no
            where a.saf_edu_mst_no = m.saf_edu_mst_no
            and a.re_edu_exc_yn = 'Y' ) else 0 end as reEduAbsentPerson
           --  , count(*) as totalUserNum
            -- , sum(case when p.complet_yn='Y' then 1 else 0 end ) as passUserNum
            -- , sum(case when isnull(p.complet_yn,'N')='N' and isnull(p.re_edu_exc_yn,'N')='N' then 1 else 0 end ) as failUserNum
            -- , sum(case when isnull(p.complet_yn,'N')='N' and isnull(p.re_edu_exc_yn,'N')='Y' then 1 else 0 end ) as exceptUserNum
            ,ar.appr_rqst_no as rapprRqstNo
            ,m.re_edu_yn
            ,m.edu_method_cd
            ,c8.code_nm as edu_method_nm
        from saf_edu_mst m
       left outer join com_dept cd1 on m.main_dept_cd = cd1.dept_cd
        left outer join com_dept cd2 on m.target_dept_cd = cd2.dept_cd
        left outer join com_dept cd3 on m.exec_dept_cd = cd3.dept_cd
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on co.edu_type_cd = cc2.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_TYPE') c2 on m.edu_type_cd = c2.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_STEP') c3 on m.p_proc_step_cd = c3.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c4 on m.plant_cd = c4.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'MGT_LAW_CLASS') c6 on co.is_type_cd = c6.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP')c7 on m.process_step_cd=c7.code  
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_METHOD')c8 on m.edu_method_cd=c8.code 
        left outer join com_dept c5 on c5.dept_cd = m.dept_cd
        left outer join com_appr_rqst ar on ar.appr_rqst_no = m.p_appr_rqst_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm on cm.code = ar.biz_appr_step_cd
        left outer join com_appr_rqst arr on arr.appr_rqst_no = m.r_appr_rqst_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cmr on cmr.code = arr.biz_appr_step_cd     
        left outer join com_user a  on a.user_id = m.user_id
        left outer join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id
        where 1=1
        and isnull(m.dis_yn, 'N') = 'Y'
        <if test='fromYmd != null and fromYmd != "" and toYmd != null and toYmd != ""'>
        and  m.edu_e_ymd <![CDATA[>=]]>  #{fromYmd} 
        and  m.edu_s_ymd <![CDATA[<=]]> #{toYmd}
        </if>
        <if test='safEduCourseNo != null and safEduCourseNo != 0'>
        and m.saf_edu_course_no = #{safEduCourseNo}
        </if>
        <if test='mainDeptCd != null and mainDeptCd != ""'>
        <!-- 주관부서 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{mainDeptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{mainDeptSubYn} = 'Y' AND m.main_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{mainDeptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{mainDeptSubYn} = 'N' AND m.main_dept_cd = #{mainDeptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
         <if test='targetDeptCd != null and targetDeptCd != ""'>
        <!-- 대상부서 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{targetDeptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{targetDeptSubYn} = 'Y' AND m.target_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{targetDeptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{targetDeptSubYn} = 'N' AND m.target_dept_cd = #{targetDeptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
         <if test='execDeptCd != null and execDeptCd != ""'>
        <!-- 실행부서 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{execDeptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{execDeptSubYn} = 'Y' AND m.exec_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{execDeptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{execDeptSubYn} = 'N' AND m.exec_dept_cd = #{execDeptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>

        <if test='tgtDeptCd != null and tgtDeptCd != ""'>
        and p.dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
        </if>
        <if test='eduTypeCd != null and eduTypeCd != ""'>
        and m.edu_type_cd = #{eduTypeCd}
        </if>
        <if test='eduAttCd != null and eduAttCd != ""'>
        and co.edu_att_cd = #{eduAttCd}
        </if>
        <if test='eduClassCd != null and eduClassCd != ""'>
        and co.edu_type_cd = #{eduClassCd}
        </if>        
        <if test='eduNm != null and eduNm != ""'>
        and m.edu_nm like '%'+#{eduNm}+'%'
        </if>
        <if test='plantCd != null and plantCd != ""'>
        and m.plant_cd = #{plantCd}
        </if>
        <if test='pProcStepNm != "Y" and pProcStepNm != ""'>
        and c3.code = #{pProcStepNm}
        </if>
        <if test='pYear != null and pYear != ""'>
        and year(m.edu_s_ymd ) =  #{pYear}
        </if>        
        <if test='pMonth != null and pMonth != "" '>
        and month(m.edu_s_ymd) = #{pMonth}
        </if>
        <if test='year != null and year != "" '>
        and m.year = #{year}
        </if>
        <if test='pStateCd != null and pStateCd != "" '>
        and m.p_state_cd = #{pStateCd}
        </if>
        <if test='isTypeCd != null and isTypeCd != "" '>
        and co.is_type_cd = #{isTypeCd}
        </if>
        <if test='reEduYn != null and reEduYn != "" '>
        and m.re_edu_yn = #{reEduYn}
        </if>
        <if test='eduMethodCd != null and eduMethodCd != "" '>
        and m.edu_method_cd = #{eduMethodCd}
        </if>

        order by writer_dt desc, m.edu_s_ymd desc
    </select>
    
    <!-- 교육 결과 관리 조회 -->
    <select id="getEduResults" resultType= "com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduResults [EduStatus.xml] */
         select 
             m.year
             ,m.r_proc_step_cd
             ,c3.code_nm as r_proc_step_nm
             ,m.r_state_cd
             ,m.p_step_cd
             ,m.r_step_cd
             ,concat(dbo.GET_CODE_NM(m.r_proc_step_cd, 'COM_STEP'),' (', case when m.r_step_cd = 'BAPSD' then cmr.code_nm else dbo.GET_CODE_NM(m.r_state_cd, 'COM_STATE') end , ')') as r_state_nm
            ,m.main_dept_cd as main_dept_cd
            ,cd1.dept_nm as main_dept_nm
            ,m.target_dept_cd as target_dept_cd
            ,cd2.dept_nm as target_dept_nm
            ,m.exec_dept_cd as exec_dept_cd
            ,cd3.dept_nm as exec_dept_nm
            ,m.plant_cd
            ,co.is_type_cd 
            ,c6.code_nm as is_type_nm 
            ,co.edu_type_cd as edu_class_cd
            ,cc2.code_nm as edu_class_nm
            ,c4.code_nm as plant_nm
            ,m.saf_edu_mst_no
            ,m.saf_edu_course_no
            ,co.edu_course_nm
            ,co.edu_att_cd
            ,c1.code_nm as edu_att_nm
            ,m.edu_type_cd
            ,c2.code_nm as edu_type_nm
            ,m.edu_nm
            ,m.edu_s_ymd
            ,m.edu_e_ymd
            ,m.edu_s_ymd +' ~ '+ m.edu_e_ymd as eduYmd
            ,m.edu_time
            ,m.edu_place
            ,m.edu_teacher
            ,m.edu_content
            ,m.edu_result_summary
            ,m.dept_cd
            ,m.edu_s_hour
            ,m.edu_e_hour
            ,m.edu_eval_opin
            ,m.create_user_id
            ,m.create_dt
            ,m.update_user_id
            ,m.update_dt
            , case
                 when dbo.GET_USER_NM(m.update_user_id) = '' then dbo.GET_USER_NM(m.create_user_id)
                 else dbo.GET_USER_NM(m.update_user_id) end    as writer_user_nm
            , case when m.update_dt is null then convert(date, m.create_dt) else convert(date, m.update_dt) end   as writer_dt
            <!-- 
            ,case when m.process_step_cd != 'SES01' 
                  then case when (select count(*) from saf_edu_mst_question where saf_edu_mst_no = m.saf_edu_mst_no) > 0 then '보기'
                            else null
                        end
                  else null end as qr_code -->
            -- 20200602 김봉석 부장님 요청으로 무조건 '보기' 보이도록 설정
            , '보기' as qr_code
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm        
            ,case when m.process_step_cd = 'SES01' then ar.biz_appr_step_cd else arr.biz_appr_step_cd end as biz_appr_step_cd
            ,case when m.process_step_cd = 'SES01' then isnull(cm.code_nm, '결재요청전') else isnull(cmr.code_nm, '결재요청전') end as biz_appr_step_nm
            ,m.edu_place
            ,a.user_nm
            ,c5.dept_nm
            -- 대상 인원 
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no ) as totalUserNum
            -- 이수인원 
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no and p.complet_yn = 'Y' ) as passUserNum
            -- 불참인원
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no and p.complet_yn = 'N' ) as failUserNum
            , (select count(*) from saf_edu_dtl_psn a where a.saf_edu_mst_no = m.saf_edu_mst_no and a.re_edu_not_yn = 'Y' and complet_yn = 'N' )  as exceptUserNum
            -- 이수인원 외부
            ,(select count(*) from saf_edu_dtl_subconn_psn a where a.saf_edu_mst_no = m.saf_edu_mst_no) as passOutUserNum
            -- 이수인원 (총합)
            ,(select  count(*) from saf_edu_dtl_psn p where p.saf_edu_mst_no = m.saf_edu_mst_no and p.complet_yn = 'Y' ) + 
             (select count(*) from saf_edu_dtl_subconn_psn a where a.saf_edu_mst_no = m.saf_edu_mst_no) as totPassUserNum
             ,isnull(edu_time,0) as edu_time
            ,case when process_step_cd = 'SES03' then (select isnull(sum(case when b.re_complet_yn = 'Y'  then 1 else 0 end),0) 
            from saf_edu_mst a
            left outer join saf_edu_dtl_psn b
            on a.saf_edu_mst_no = b.saf_edu_mst_no
            where a.saf_edu_mst_no = m.saf_edu_mst_no
            and a.re_edu_exc_yn = 'Y' ) else 0 end as reEduPerson



            ,case when process_step_cd = 'SES03' then (select isnull(sum(case when b.re_complet_yn != 'Y'  then 1 else 0 end),0)
            from saf_edu_mst a
            left outer join saf_edu_dtl_psn b
            on a.saf_edu_mst_no = b.saf_edu_mst_no
            where a.saf_edu_mst_no = m.saf_edu_mst_no
            and a.re_edu_exc_yn = 'Y' ) else 0 end as reEduAbsentPerson
           --  , count(*) as totalUserNum
            -- , sum(case when p.complet_yn='Y' then 1 else 0 end ) as passUserNum
            -- , sum(case when isnull(p.complet_yn,'N')='N' and isnull(p.re_edu_exc_yn,'N')='N' then 1 else 0 end ) as failUserNum
            -- , sum(case when isnull(p.complet_yn,'N')='N' and isnull(p.re_edu_exc_yn,'N')='Y' then 1 else 0 end ) as exceptUserNum
            ,ar.appr_rqst_no as papprRqstNo
            ,arr.appr_rqst_no as rapprRqstNo
            ,m.re_edu_yn
            ,m.edu_method_cd
            ,c7.code_nm as edu_method_nm
        from saf_edu_mst m
      left outer join com_dept cd1 on m.main_dept_cd = cd1.dept_cd
            left outer join com_dept cd2 on m.target_dept_cd = cd2.dept_cd
            left outer join com_dept cd3 on m.exec_dept_cd = cd3.dept_cd
            left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on co.edu_type_cd = cc2.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_TYPE') c2 on m.edu_type_cd = c2.code
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'EDU_PLAN_STATE') c3 on m.edu_plan_state = c3.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c4 on m.plant_cd = c4.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'MGT_LAW_CLASS') c6 on co.is_type_cd = c6.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_METHOD')c7 on m.edu_method_cd=c7.code 
            left outer join com_dept c5 on c5.dept_cd = m.dept_cd
            left outer join com_appr_rqst ar on ar.appr_rqst_no = m.p_appr_rqst_no
            left outer join com_appr_rqst arr on arr.appr_rqst_no = m.r_appr_rqst_no
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm on cm.code = ar.biz_appr_step_cd
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cmr on cmr.code = arr.biz_appr_step_cd     
            left outer join com_user a  on a.user_id = m.user_id
            left outer join com_user cu on m.create_user_id = cu.user_id
            left outer join com_user uu on m.update_user_id = uu.user_id
        where 1=1
        and isnull(m.dis_yn, 'N') = 'Y'
        and ( m.edu_plan_state = 'EPS02' OR m.edu_plan_state = 'EPS03')
        <if test='fromYmd != null and fromYmd != "" and toYmd != null and toYmd != ""'>
        and  m.edu_e_ymd <![CDATA[>=]]>  #{fromYmd} 
        and  m.edu_s_ymd <![CDATA[<=]]> #{toYmd}
        </if>
        <if test='safEduCourseNo != null and safEduCourseNo != 0'>
        and m.saf_edu_course_no = #{safEduCourseNo}
        </if>
         <if test='mainDeptCd != null and mainDeptCd != ""'>
        <!-- 주관부서 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{mainDeptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{mainDeptSubYn} = 'Y' AND m.main_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{mainDeptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{mainDeptSubYn} = 'N' AND m.main_dept_cd = #{mainDeptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
         <if test='targetDeptCd != null and targetDeptCd != ""'>
        <!-- 대상부서 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{targetDeptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{targetDeptSubYn} = 'Y' AND m.target_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{targetDeptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{targetDeptSubYn} = 'N' AND m.target_dept_cd = #{targetDeptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
         <if test='execDeptCd != null and execDeptCd != ""'>
        <!-- 실행부서 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{execDeptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{execDeptSubYn} = 'Y' AND m.exec_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{execDeptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{execDeptSubYn} = 'N' AND m.exec_dept_cd = #{execDeptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test='tgtDeptCd != null and tgtDeptCd != ""'>
        and p.dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
        </if>
        <if test='eduTypeCd != null and eduTypeCd != ""'>
        and m.edu_type_cd = #{eduTypeCd}
        </if>
        <if test='eduAttCd != null and eduAttCd != ""'>
        and co.edu_att_cd = #{eduAttCd}
        </if>
        <if test='eduClassCd != null and eduClassCd != ""'>
        and co.edu_type_cd = #{eduClassCd}
        </if>        
        <if test='eduNm != null and eduNm != ""'>
        and m.edu_nm like '%'+#{eduNm}+'%'
        </if>
        <if test='plantCd != null and plantCd != ""'>
        and m.plant_cd = #{plantCd}
        </if>
        <if test='rProcStepNm != "Y" and rProcStepNm != ""'>
        and c3.code = #{rProcStepNm}
        </if>
        <if test='pYear != null and pYear != ""'>
        and year(m.edu_s_ymd ) =  #{pYear}
        </if>        
        <if test='pMonth != null and pMonth != "" '>
        and month(m.edu_s_ymd) = #{pMonth}
        </if>
        <if test='year != null and year != "" '>
        and m.year = #{year}
        </if>
        <if test='rStateCd != null and rStateCd != "" '>
        and m.r_state_cd = #{rStateCd}
        </if>
        <if test='isTypeCd != null and isTypeCd != "" '>
        and co.is_type_cd = #{isTypeCd}
        </if>
        <if test='reEduYn != null and reEduYn != "" '>
        and m.re_edu_yn = #{reEduYn}
        </if>
        <if test='eduMethodCd != null and eduMethodCd != "" '>
        and m.edu_method_cd = #{eduMethodCd}
        </if>

        order by writer_dt desc, m.edu_s_ymd desc
    </select>
    
 <select id= "getMobileEduStatuss" resultType= "com.she.safety.model.EduMaster">
 /* EduStatusMapper.getMobileEduStatuss [EduStatus.xml] */
        select 
             m.plant_cd 
            ,c4.code_nm as plant_nm
            ,m.saf_edu_mst_no
            ,m.saf_edu_course_no
            ,co.edu_course_nm
            ,co.edu_att_cd
            ,c1.code_nm as edu_att_nm
            ,m.edu_type_cd
            ,c2.code_nm as edu_type_nm
            ,m.edu_nm
            ,m.edu_s_ymd
            ,m.edu_e_ymd
            ,m.edu_s_ymd +' ~ '+ m.edu_e_ymd as eduYmd
            ,m.edu_time
            ,m.edu_place
            ,m.edu_teacher
            ,m.edu_content
            ,m.edu_result_summary
            ,m.process_step_cd
            ,c3.code_nm as process_step_nm
            ,m.dept_cd
            ,m.process_step_cd
            ,m.edu_s_hour
            ,m.edu_e_hour
            ,m.edu_eval_opin
            ,m.create_user_id
            ,m.create_dt
            ,m.update_user_id
            ,m.update_dt
            ,case when m.process_step_cd != 'SES01' then '보기' else null end as qr_code
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm        
            ,ar.biz_appr_step_cd                 
            ,isnull(cm.code_nm, '결재요청전' ) as biz_appr_step_nm                  
        from saf_edu_mst m
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_TYPE') c2 on m.edu_type_cd = c2.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_STEP') c3 on m.process_step_cd = c3.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c4 on m.plant_cd = c4.code
        left outer join com_appr_rqst ar on ar.appr_rqst_no = m.p_appr_rqst_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm on cm.code = ar.biz_appr_step_cd            
        left outer join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id
        left outer join saf_edu_dtl_psn psn on psn.saf_edu_mst_no = m.saf_edu_mst_no
        where 1=1
        and m.plant_cd = #{plantCd}
        and m.process_step_cd != 'SES01'
        and  psn.user_id = #{userId}
        and m.saf_edu_mst_no in (select distinct saf_edu_mst_no from saf_edu_mst_question)
    </select>
        
    
    <select id= "getEduDeptStatuss" resultType= "com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduDeptStatuss [EduStatus.xml] */
        with depttree as (
            select cd.dept_cd
                ,cd.dept_nm
                ,cd.p_dept_cd
                ,cd.plant_cd
            from com_dept cd
            where 1=1
            <choose>
                <when test= "deptCd != null and !deptCd.equals('')">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'Y' AND cd.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'N' AND cd.dept_cd = #{deptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                </when>
                <otherwise>
                    and isnull(cd.p_dept_cd, '') = ''
                </otherwise>
            </choose>
            union all
            select cdd.dept_cd
                ,cdd.dept_nm
                ,cdd.p_dept_cd
                ,cdd.plant_cd
            from com_dept cdd
            inner join depttree
            on cdd.p_dept_cd = depttree.dept_cd
        )
        select t.*
            , case when t.law_edu_tm = '-' then '-' when  t.dft_edu_tm >= t.n_law_edu_tm then 'Y' else 'N' end as complet_yn
        from (
            select #{year} as year
                , p.code_nm as plant_nm, d.plant_cd, d.dept_nm, d.dept_cd, u.user_nm, u.user_id
                --교육대분류
                , c1.code_nm as edu_att_nm, c1.code as edu_att_cd
                --교육분류
                , c2.code_nm as edu_class_nm, c2.code as edu_class_cd
                , ec.edu_course_nm, ec.saf_edu_course_no                
                 -- 법정교육시간
                , case ec.law_yn when 'Y' then convert(varchar, ec.law_edu_tm) else '-' end as law_edu_tm
                , case ec.law_yn when 'Y' then ec.law_edu_tm else 0 end as n_law_edu_tm
                 -- 이수교육시간
                , sum(case when year(em.edu_s_ymd) = #{year} and ep.complet_yn = 'Y' then em.edu_time else 0 end) as dft_edu_tm
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='1' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_1_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='2' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_2_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='3' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_3_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='4' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_4_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='5' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_5_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='6' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_6_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='7' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_7_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='8' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_8_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='9' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_9_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='10' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_10_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='11' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_11_num
                , sum(case when year(em.edu_s_ymd) = #{year} and month(em.edu_s_ymd)='12' and ep.complet_yn = 'Y' then em.edu_time else 0 end) as month_12_num
            from com_user u
            inner join com_dept d
            on u.dept_cd = d.dept_cd
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') p
            on d.plant_cd = p.code
            inner join depttree td
            on d.dept_cd = td.dept_cd
            inner join saf_edu_dtl_psn ep
            on u.user_id = ep.user_id
            inner join saf_edu_mst em
            on ep.saf_edu_mst_no = em.saf_edu_mst_no
            <if test='year != null and !year.equals("")'>
            and year(em.edu_s_ymd) = #{year}
            </if>
            inner join saf_edu_course ec
            on em.saf_edu_course_no = ec.saf_edu_course_no  
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 
            on ec.edu_att_cd = c1.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') c2 
            on ec.edu_type_cd = c2.code
            <if test='userId != null and !userId.equals("")'>
             and ep.user_id = #{userId}
            </if>
            group by p.code_nm, d.plant_cd, d.dept_nm, d.dept_cd, u.user_nm, u.user_id
                --교육대분류
                , c1.code_nm, c1.code
                --교육분류
                , c2.code_nm, c2.code
                , ec.edu_course_nm, ec.saf_edu_course_no
                , ec.law_yn, ec.law_edu_tm
        ) t
        where 1 = 1
        <if test='plantCd != null and !plantCd.equals("")'>
        and t.plant_cd = #{plantCd}
        </if>                 
        <if test='userId != null and userId != ""'>
        and t.user_id = #{userId}
        </if>
        <if test='eduAttCd != null and eduAttCd != ""'>
        and t.edu_att_cd = #{eduAttCd}
        </if>        
        <if test='eduClassCd != null and eduClassCd != ""'>
        and t.edu_class_cd = #{eduClassCd} -- 교육 분류 코드
        </if>        
        <if test='safEduCourseNo != null and safEduCourseNo != 0'>
        and t.saf_edu_course_no = #{safEduCourseNo}
        </if>
        <if test='completYn != null and completYn != ""'>      
        and (case when t.law_edu_tm = '-' then '-' when  t.dft_edu_tm >= t.n_law_edu_tm then 'Y' else 'N' end) = #{completYn}
        </if>
        order by t.plant_nm, t.dept_nm, t.user_nm
    </select>
    
    <select id= "getEduPersonStatuss" resultType= "com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduPersonStatuss [EduStatus.xml] */
        select 
              c2.code_nm as plant_nm -- 사업장
             ,c2.code  as plant_cd -- 사업장 코드 
             ,c1.code_nm as edu_att_nm -- 교육 대분류
             ,c1.code as edu_att_cd -- 교육 대분류 코드
             ,cc2.code_nm as edu_class_nm -- 교육 분류 
             ,cc2.code as edu_class_cd
             ,co.edu_course_nm -- 교육 과정 
             ,co.saf_edu_course_no

            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='1' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_1_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='2' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_2_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='3' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_3_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='4' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_4_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='5' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_5_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='6' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_6_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='7' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_7_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='8' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_8_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='9' and m.process_step_cd ='SES03'  then 1 else 0 end) as month_9_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='10' and m.process_step_cd ='SES03' then 1 else 0 end) as month_10_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='11' and m.process_step_cd ='SES03' then 1 else 0 end) as month_11_num
            ,sum(case when year(m.edu_s_ymd) = #{year} and month(m.edu_s_ymd)='12' and m.process_step_cd ='SES03' then 1 else 0 end) as month_12_num
        from saf_edu_mst m
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no 
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on co.edu_type_cd = cc2.code  
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c2 on m.plant_cd = c2.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_CYCLE') c3 on co.law_perd_cd = c3.code
        left outer join com_dept d3 on m.dept_cd = d3.dept_cd
        where 1=1
        <if test='year != null and year != ""'>
        and year(m.edu_s_ymd) = #{year}
        </if>        
        group by
             c2.code -- 사업장코드
            ,c2.code_nm 
            ,c1.code 
            ,c1.code_nm 
            ,cc2.code_nm
            ,cc2.code
            ,co.edu_course_nm -- 교육 과정 
            ,co.saf_edu_course_no
        having 1=1 
        <if test='plantCd != null and plantCd != ""'>
        and c2.code = #{plantCd}
        </if>          
        <if test='safEduCourseNo != null and safEduCourseNo != 0'>
        and co.saf_edu_course_no = #{safEduCourseNo}
        </if>        
        <if test='eduAttCd != null and eduAttCd != ""'>
        and c1.code = #{eduAttCd}
        </if>        
        <if test='eduClassCd != null and eduClassCd != ""'>
        and cc2.code = #{eduClassCd}
        </if>                       
    </select>
    
    <!-- 교육 대상자 여부 조회 -->
    <select id="getEduDtlPsnCnt" resultType="int">
    /* EduStatusMapper.getEduDtlPsnCnt [EduStatus.xml] */
        select count(*) as cnt
          from saf_edu_dtl_psn
         where user_id = #{userId}
           and saf_edu_mst_no = #{safEduMstNo}
    </select>
    
    <select id="getUserEduSchedules" resultType="com.she.safety.model.EduCourseGrpSchedule">
    /* EduStatusMapper.getUserEduSchedules [EduStatus.xml] */
        select t.*
            , case when convert(datetime, t.edu_schedule_ymd) &lt; getdate() then 'Y' else 'N' end as edu_schedule_yn
        from (
            select u.user_id, u.user_nm, d.dept_cd, d.dept_nm, d.plant_cd, p.code_nm as plant_nm
                , t.edu_att_cd, c1.code_nm as edu_att_nm, t.edu_type_cd as edu_class_cd, c2.code_nm as edu_class_nm, t.saf_edu_course_no, t.edu_course_nm, cg.pre_edu_cd, pt.edu_course_nm as pre_edu_nm
                , g.edu_grp_no, g.grp_nm, cg.edu_com_yn, cg.edu_com_std, cgc.code_nm as edu_com_std_nm, cg.edu_com_per, cg.edu_com_time, cg.edu_repeat_yn, cg.doc_keep_per, cg.law_desk
                , m.complet_ymd, pm.complet_ymd as pre_complet_ymd, u.entry_ymd, g.apply_ymd
                , [dbo].[SAF_EDU_SCHEDULE] (cg.edu_com_std, m.complet_ymd, pm.complet_ymd, u.entry_ymd, g.apply_ymd, cg.edu_com_per, cg.edu_repeat_yn) as edu_schedule_ymd
            from saf_edu_course t
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 
            on t.edu_att_cd = c1.code
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') c2 
            on t.edu_type_cd = c2.code
            inner join saf_edu_course_grp cg
            on t.saf_edu_course_no = cg.saf_edu_course_no
            left join saf_edu_course pt
            on cg.pre_edu_cd = pt.saf_edu_course_no
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'EDU_COM_STD') cgc
            on cg.edu_com_std = cgc.code
            inner join (
                select null as saf_elect_titl_no, g.edu_grp_no, g.grp_nm, null as apply_ymd, gu.user_id
                from saf_edu_grp g
                inner join saf_edu_grp_user gu
                on g.edu_grp_no = gu.edu_grp_no
                union all
                select t.saf_elect_titl_no, null as edu_grp_no, t.elect_titl_nm, tu.elect_dt, tu.user_id
                from saf_elect_titl t
                inner join saf_elect_his tu
                on t.saf_elect_titl_no = tu.saf_elect_titl_no
                and getdate() between convert(datetime, tu.elect_dt) and convert(datetime, case when isnull(elect_end_dt, '') = '' then '9999-12-31' else elect_end_dt end)+0.99999
                and tu.use_yn = 'Y'
            ) g
            on (cg.edu_grp_no = g.edu_grp_no or cg.saf_elect_titl_no = g.saf_elect_titl_no)            
            inner join com_user u
            on g.user_id = u.user_id
            inner join com_dept d
            on u.dept_cd = d.dept_cd
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'com_plant_cd') p
            on d.plant_cd = p.code
            left join (
                select m.saf_edu_mst_no, m.saf_edu_course_no, p.user_id, p.complet_ymd, rank() over (partition by m.saf_edu_course_no, p.user_id order by p.complet_ymd desc, p.saf_edu_mst_no desc) as rn
                from saf_edu_mst m
                inner join saf_edu_dtl_psn p
                on m.saf_edu_mst_no = p.saf_edu_mst_no
                where m.process_step_cd = 'SES03'
                and (p.complet_yn = 'Y' or p.re_complet_yn = 'Y')
            ) m
            on t.saf_edu_course_no = m.saf_edu_course_no
            and u.user_id = m.user_id
            and m.rn = 1
            left join (
                select m.saf_edu_mst_no, m.saf_edu_course_no, p.user_id, p.complet_ymd, rank() over (partition by m.saf_edu_course_no, p.user_id order by p.complet_ymd desc, p.saf_edu_mst_no desc) as rn
                from saf_edu_mst m
                inner join saf_edu_dtl_psn p
                on m.saf_edu_mst_no = p.saf_edu_mst_no
                where m.process_step_cd = 'SES03'
                and (p.complet_yn = 'Y' or p.re_complet_yn = 'Y')
            ) pm
            on cg.pre_edu_cd = pm.saf_edu_course_no
            and u.user_id = pm.user_id
            and pm.rn = 1
            where 1=1
            <if test='plantCd != null and plantCd != ""'>
            and p.code = #{plantCd}
            </if>
            <if test='deptCd != null and deptCd != ""'>
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
            AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                        UNION ALL
                        SELECT 1 WHERE #{deptSubYn} = 'Y' AND d.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                        UNION ALL
                        SELECT 1 WHERE #{deptSubYn} = 'N' AND d.dept_cd = #{deptCd}
                        )
            <!-- 하위부서 포함여부 관련 쿼리 끝 -->
            </if>                     
            <if test='userId != null and userId != ""'>
            and u.user_id = #{userId}
            </if>
            <if test='eduAttCd != null and eduAttCd != ""'>
            and c1.code = #{eduAttCd}
            </if>        
            <if test='eduClassCd != null and eduClassCd != ""'>
            and c2.code = #{eduClassCd}
            </if>        
            <if test='safEduCourseNo != null and safEduCourseNo != 0'>
            and t.saf_edu_course_no = #{safEduCourseNo}
            </if>
           
        ) t
        order by t.plant_nm, t.dept_nm, t.user_nm, t.edu_att_nm, t.edu_class_nm, t.edu_course_nm, t.edu_schedule_ymd desc
    </select>

    <select id= "getEduProblemss" resultType= "com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduProblemss [EduStatus.xml] */
        select 
           m.plant_cd 
           ,co.edu_type_cd as edu_class_cd
           ,cc2.code_nm as edu_class_nm
           ,c4.code_nm as plant_nm
           ,m.saf_edu_course_no
           ,co.edu_course_nm
           ,co.edu_att_cd
           ,c1.code_nm as edu_att_nm
           ,m.edu_type_cd
           ,c2.code_nm as edu_type_nm
           ,m.edu_nm
           ,m.edu_s_ymd
           ,m.edu_e_ymd
           ,m.edu_s_ymd +' ~ '+ m.edu_e_ymd as eduYmd
           ,m.edu_place
           ,m.dept_cd
           ,m.user_id
           ,m.saf_edu_mst_no
           ,a.user_nm
           ,c5.dept_nm
           , case
                when dbo.GET_USER_NM(m.update_user_id) = '' then dbo.GET_USER_NM(m.create_user_id)
                else dbo.GET_USER_NM(m.update_user_id) end    as writer_user_nm
           , case when m.update_dt is null then convert(date, m.create_dt) else convert(date, m.update_dt) end   as writer_dt
           ,(select count(*) from saf_edu_dtl_psn_ans ans
             where ans.saf_edu_mst_no = psn.saf_edu_mst_no
             and ans.user_id = psn.user_id) as processStepCnt
           , '' as processStepYn
           ,isnull(psn.edu_eval_pnt, '0') as edu_eval_pnt
           ,isnull(psn.edu_eval_pnt_sec, '0') as edu_eval_pnt_sec
           , psn.user_id as sub_ject_id
           , dbo.GET_USER_NM(psn.user_id) as sub_ject_nm
        from saf_edu_mst m
           left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on co.edu_type_cd = cc2.code
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_TYPE') c2 on m.edu_type_cd = c2.code
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_STEP') c3 on m.process_step_cd = c3.code
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c4 on m.plant_cd = c4.code
           left outer join com_appr_rqst ar on ar.appr_rqst_no = m.p_appr_rqst_no
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm on cm.code = ar.biz_appr_step_cd            
           left outer join com_dept c5 on c5.dept_cd = m.dept_cd
           left outer join com_user a  on a.user_id = m.user_id
           left outer join saf_edu_dtl_psn psn on psn.saf_edu_mst_no = m.saf_edu_mst_no
        where 1 = 1
        <if test='fromYmd != null and fromYmd != "" and toYmd != null and toYmd != ""'>
        and  m.edu_e_ymd <![CDATA[>=]]>  #{fromYmd} 
        and  m.edu_s_ymd <![CDATA[<=]]> #{toYmd}
        </if>
        <if test='safEduCourseNo != null and safEduCourseNo != 0'>
        and m.saf_edu_course_no = #{safEduCourseNo}
        </if>
        <if test='eduAttCd != null and eduAttCd != ""'>
        and co.edu_att_cd = #{eduAttCd}
        </if>
        <if test='eduTypeCd != null and eduTypeCd != ""'>
        and m.edu_type_cd = #{eduTypeCd}
        </if>
        <if test='eduClassCd != null and eduClassCd != ""'>
        and co.edu_type_cd = #{eduClassCd}
        </if>        
        <if test='eduNm != null and eduNm != ""'>
        and m.edu_nm like '%'+#{eduNm}+'%'
        </if>
        <if test='plantCd != null and plantCd != ""'>
        and m.plant_cd = #{plantCd}
        </if>
        <if test='pYear != null and pYear != ""'>
        and year(m.edu_s_ymd ) =  #{pYear}
        </if>        
        <if test='pMonth != null and pMonth != "" '>
        and month(m.edu_s_ymd) = #{pMonth}
        </if>
        <if test='userId != null and userId != "" '>
        and psn.user_id = #{userId}
        </if>
        <if test='processStepNm == "Y"'>
        and exists (
                      select 1 from saf_edu_dtl_psn_ans ans
                      where ans.saf_edu_mst_no = psn.saf_edu_mst_no
                      and ans.user_id = psn.user_id
                   )
        </if>
        <if test='processStepNm == "N"'>
        and not exists (
                      select 1 from saf_edu_dtl_psn_ans ans
                      where ans.saf_edu_mst_no = psn.saf_edu_mst_no
                      and ans.user_id = psn.user_id
                   )
        </if>
       <!--  and m.process_step_cd != 'SES01' -->
        and m.saf_edu_mst_no in (select distinct saf_edu_mst_no from saf_edu_mst_question)
        order by writer_dt desc
    </select>
    
    <!-- 내부인원 상세 조회 -->
    <select id="getEduUserList" resultType= "com.she.safety.model.EduMaster">  
    /* EduStatusMapper.getEduUserList [EduStatus.xml] */  
        select distinct
            ec.edu_course_nm
            ,em.edu_s_ymd +' ~ '+ em.edu_e_ymd as eduYmd
            ,ec.plant_cd
            ,c1.code_nm as plantNm
            ,dp.dept_cd
            ,cd.dept_nm as deptNm
            ,dp.user_id
            ,cu.user_nm as userNm
            ,dp.complet_yn
            ,case when sp.subconn_psn_no is null then 'N' else 'Y' end sub_conn_yn
            ,dp.re_complet_yn
            ,case when dp.complet_yn = 'Y' then dp.complet_ymd else '' end complet_ymd
            ,dp.edu_eval_pnt
            ,dp.edu_eval_pnt_sec
            ,case when dp.edu_eval_pnt_sec is null then dp.edu_eval_pnt else dp.edu_eval_pnt_sec end edu_eval_end
        from saf_edu_mst em
            inner join saf_edu_dtl_psn dp on em.saf_edu_mst_no= dp.saf_edu_mst_no
            left outer join saf_edu_course ec on em.saf_edu_course_no = ec.saf_edu_course_no
            left outer join saf_edu_dtl_subconn_psn sp on sp.saf_edu_mst_no= dp.saf_edu_mst_no
            left outer join com_dept cd on cd.dept_cd = dp.dept_cd
            left outer join com_user cu on cu.user_id = dp.user_id
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c1 on ec.plant_cd = c1.code
        where em.saf_edu_mst_no = dp.saf_edu_mst_no
             and em.saf_edu_mst_no = #{safEduMstNo}
        <if test='completYn != null and completYn!=""'>
             and dp.complet_yn= #{completYn}
        </if>
        <if test='reEduNotYn != null and reEduNotYn!=""'>
            and dp.re_edu_not_yn =#{reEduNotYn}
        </if>
           
    </select>
    
    <!-- 외부인원 상세조회 -->
    <select id="getEduOutUserList" resultType= "com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduOutUserList [EduStatus.xml] */  
        select
           ec.edu_course_nm
           ,em.edu_s_ymd +' ~ '+ em.edu_e_ymd as eduYmd
           ,c1.code_nm as plantNm
           ,sp.vendor_nm
           ,sp.worker_nm
           ,sp.complet_yn
           ,case when sp.subconn_psn_no is null then 'N' else 'Y' end sub_conn_yn
        from saf_edu_mst em
          inner join saf_edu_dtl_subconn_psn sp on em.saf_edu_mst_no=sp.saf_edu_mst_no
          left outer join saf_edu_course ec on em.saf_edu_course_no = ec.saf_edu_course_no
          left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') c1 on ec.plant_cd = c1.code
        where em.saf_edu_mst_no = sp.saf_edu_mst_no
          and em.saf_edu_mst_no =#{safEduMstNo}
    </select>
    <!-- 이수인원 총합 상세 조회 -->
    <select id="getEduComYList" resultType="com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduComYList [EduStatus.xml] */  
     select distinct
            em.saf_edu_mst_no
            ,ec.edu_course_nm
            ,em.edu_s_ymd +' ~ '+ em.edu_e_ymd as edu_ymd
            ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'com_plant_cd',em.plant_cd) as plant_nm            
            ,dbo.GET_USER_NM(dp.user_id) as user_nm    
            ,dbo.GET_DEPT_NM(dp.dept_cd) as dept_nm                         
            ,dp.complet_yn
            ,'N' as sub_conn_yn
            ,dp.re_complet_yn
            ,dp.complet_ymd
            ,case when dp.edu_eval_pnt_sec is null then dp.edu_eval_pnt else dp.edu_eval_pnt_sec end edu_eval_end
        from saf_edu_mst em
            inner join saf_edu_dtl_psn dp on em.saf_edu_mst_no= dp.saf_edu_mst_no
            left outer join saf_edu_course ec on em.saf_edu_course_no=ec.saf_edu_course_no        
        where
        em.saf_edu_mst_no=dp.saf_edu_mst_no
        and em.saf_edu_mst_no = #{safEduMstNo}
        <if test='completYn != null and completYn!=""'>
             and dp.complet_yn= #{completYn}
        </if>
        union all
        select 
                em.saf_edu_mst_no
                ,ec.edu_course_nm
                ,em.edu_s_ymd +' ~ '+ em.edu_e_ymd as edu_ymd
                ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'com_plant_cd',em.plant_cd) as plant_nm    
                ,sp.worker_nm as user_nm                  
                ,sp.vendor_nm  as dept_nm
                ,sp.complet_yn
                ,'Y' as sub_conn_yn
                ,'N' as re_complet_yn
                ,'' as complet_ymd
                ,'' as edu_eval_end
            from saf_edu_mst em            
            inner join saf_edu_dtl_subconn_psn sp on em.saf_edu_mst_no= sp.saf_edu_mst_no 
            left outer join saf_edu_course ec on em.saf_edu_course_no=ec.saf_edu_course_no
        where
            em.saf_edu_mst_no=sp.saf_edu_mst_no            
             and em.saf_edu_mst_no = #{safEduMstNo}
        <if test='completYn != null and completYn!=""'>
             and sp.complet_yn= #{completYn}
        </if>
    </select> 
    
    <!-- 교육결과 현황 조회 -->
    <select id="getEduResultStatusList" resultType="hashMap">
    /* EduStatusMapper.getEduResultStatusList [EduStatus.xml] */  
         with plant as(
            select code as plantCd
            from com_code_master
            where code_group_cd='COM_PLANT_CD'
            and code !='0000'
    ),
    istype as(
            select code as isTypeCd
            from com_code_master
            where code_group_cd='MGT_LAW_CLASS'
    ),
    gubunList as(
          select p.plantCd
                     ,g.gubun_type
                     ,g.gubun
                     ,g.sort_order
             from plant p
             inner join (
                 select 'edu' as gubun_type
                         ,'교육 대상자(명)' as gubun
                         ,1 as sort_order
                 union
                 select 'edu' as gubun_type
                         ,'교육 이수자(명)' as gubun
                         ,2 as sort_order
                 union
                 select 'edu' as gubun_type
                         ,'교육 이수율(%)' as gubun
                         ,3 as sort_order
            ) g on 1=1
        ),
        eduList as (
              select 
                     ec.plant_cd as plantCd 
                     ,dbo.GET_CODE_NM(ec.plant_cd, 'COM_PLANT_CD') as plant_nm
                     ,ec.is_type_cd
                     ,dbo.GET_CODE_NM(ec.is_type_cd, 'MGT_LAW_CLASS') as is_type_nm
                     ,case when em.r_step_cd = 'BAPSG' then 
                        case when dp.complet_yn ='Y' then '교육 이수자(명)' else '교육 대상자(명)' end
                        else '교육 대상자(명)' end as gubun
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) &lt; #{year}  then 1  else 0 end)) as oldCnt
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 1 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1  else 0 end)) as mon1
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 2 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon2
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 3 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon3
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 4 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon4
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 5 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon5
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 6 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year} then 1 else 0 end)) as mon6
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 7 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon7
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 8 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon8
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 9 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon9
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 10 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon10
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 11 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon11
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = 12 and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1 else 0 end)) as mon12
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}  then 1  else 0 end)) as total     
                     ,convert(numeric(10),sum(case when substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) &lt;= #{year}  then 1  else 0 end)) as allCnt          
             from saf_edu_course ec
             inner join saf_edu_mst em 
             on ec.saf_edu_course_no = em.saf_edu_course_no
             inner join saf_edu_dtl_psn dp
             on dp.saf_edu_mst_no = em.saf_edu_mst_no
             where 1=1
               and em.p_step_cd = 'BAPSG'
               and ec.is_type_cd is not null
               <if test="isTypeCd !=null and !isTypeCd.equals('')">
                    and ec.is_type_cd = #{isTypeCd}
               </if>
             group by ec.plant_cd,ec.is_type_cd, case when em.r_step_cd = 'BAPSG' then 
                case when dp.complet_yn ='Y' then '교육 이수자(명)' else '교육 대상자(명)' end
                else '교육 대상자(명)' end
            ), result as(
            select  g.plantCd 
                 ,dbo.GET_CODE_NM_LANG('kr', 'COM_PLANT_CD', g.plantCd) as plant_nm
                 ,e.is_type_cd
                 ,dbo.GET_CODE_NM_LANG('kr', 'MGT_LAW_CLASS', e.is_type_cd) as is_type_nm          
                 ,g.gubun
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.oldCnt else iif(g.gubun = e.gubun, e.oldCnt, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.oldCnt, 0)), sum(e.oldCnt)) * 100, 2), '0.00')) end as oldCnt
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon1 else iif(g.gubun = e.gubun, e.mon1, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon1, 0)), sum(e.mon1)) * 100, 2), '0.00')) end as mon1
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon2 else iif(g.gubun = e.gubun, e.mon2, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon2, 0)), sum(e.mon2)) * 100, 2), '0.00')) end as mon2
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon3 else iif(g.gubun = e.gubun, e.mon3, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon3, 0)), sum(e.mon3)) * 100, 2), '0.00')) end as mon3
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon4 else iif(g.gubun = e.gubun, e.mon4, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon4, 0)), sum(e.mon4)) * 100, 2), '0.00')) end as mon4
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon5 else iif(g.gubun = e.gubun, e.mon5, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon5, 0)), sum(e.mon5)) * 100, 2), '0.00')) end as mon5
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon6 else iif(g.gubun = e.gubun, e.mon6, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon6, 0)), sum(e.mon6)) * 100, 2), '0.00')) end as mon6
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon7 else iif(g.gubun = e.gubun, e.mon7, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon7, 0)), sum(e.mon7)) * 100, 2), '0.00')) end as mon7
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon8 else iif(g.gubun = e.gubun, e.mon8, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon8, 0)), sum(e.mon8)) * 100, 2), '0.00')) end as mon8
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon9 else iif(g.gubun = e.gubun, e.mon9, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon9, 0)), sum(e.mon9)) * 100, 2), '0.00')) end as mon9
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon10 else iif(g.gubun = e.gubun, e.mon10, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon10, 0)), sum(e.mon10)) * 100, 2), '0.00')) end as mon10
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon11 else iif(g.gubun = e.gubun, e.mon11, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon11, 0)), sum(e.mon11)) * 100, 2), '0.00')) end as mon11
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.mon12 else iif(g.gubun = e.gubun, e.mon12, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.mon12, 0)), sum(e.mon12)) * 100, 2), '0.00')) end as mon12
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.total else iif(g.gubun = e.gubun, e.total, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.total, 0)), sum(e.total)) * 100, 2), '0.00')) end as total
                 ,case when g.gubun != '교육 이수율(%)' then convert(varchar, isnull(sum(case when g.gubun = '교육 대상자(명)' then e.allCnt else iif(g.gubun = e.gubun, e.allCnt, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(e.gubun = '교육 이수자(명)', e.allCnt, 0)), sum(e.allCnt)) * 100, 2), '0.00')) end as allCnt
                 ,max(g.sort_order) as sortOrder
         from gubunList g
         left outer join eduList e on e.plantCd = g.plantCd
         where 1=1
         and g.gubun_type = 'edu'
         <if test= "plantCd != null and !plantCd.equals('')">
           and g.plantCd = #{plantCd}
         </if>
         and e.is_type_cd is not null
         group by g.plantCd, g.gubun, g.sort_order ,e.is_type_cd
         )
         select * from result
        <if test='!totalFlag != null and totalFlag.equals("Y")'>
         union all
         select
               '합계'  as plantCd
               ,'합계' as is_type_cd
               ,'합계'
               ,'합계'
               ,'교육 이수율(%)'
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,oldCnt) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,oldCnt) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon1) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon1) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon2) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon2) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon3) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon3) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon4) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon4) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon5) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon5) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon6) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon6) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon7) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon7) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon8) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon8) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon9) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon9) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon10) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon10) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon11) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon11) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,mon12) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,mon12) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,total) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,total) end) )*100,'0.00')
                ,format(dbo.GET_DIVIDE(sum(case when gubun ='교육 이수자(명)' then convert(numeric,allCnt) end),sum(case when gubun ='교육 대상자(명)' then convert(numeric,allCnt) end) )*100,'0.00')
                ,100 as sort_order
            from result b           
        </if>
            order by plantCd, is_type_cd, sortOrder  
    </select>
    
    <!-- 교육결과 현황 상세조회 -->
    <select id="getEduResultLists"  resultType="com.she.safety.model.EduMaster">
    /* EduStatusMapper.getEduResultLists [EduStatus.xml] */ 
        select  
            dbo.GET_CODE_NM(ec.plant_cd, 'COM_PLANT_CD') as plantNm
            ,dbo.GET_DEPT_NM(dp.dept_cd) as deptNm
            ,dbo.GET_USER_NM(dp.user_id) as userNm
            ,dbo.GET_CODE_NM(ec.edu_att_cd, 'SAF_EDU_ATT') as eduAttNm
            ,dbo.GET_CODE_NM(ec.edu_type_cd, 'SAF_EDU_COURSE') as eduCourseNm
            ,em.edu_nm as eduNm
            ,ec.law_edu_tm as lawEduTm
            ,case when em.edu_time is null then '0' else em.edu_time end as eduTime
            ,ec.is_type_cd
            ,case when ec.law_edu_tm > isnull(em.edu_time, 0) then 'N' else 'Y' end as eduCompletYn
            from saf_edu_course ec
            left join saf_edu_mst em on em.saf_edu_course_no = ec.saf_edu_course_no
            inner join saf_edu_dtl_psn dp on dp.saf_edu_mst_no = em.saf_edu_mst_no
            where em.p_step_cd='BAPSG'
            and ec.is_type_cd is not null
            <if test= 'plantCd != null and !plantCd.equals("") and !plantCd.equals("합계")'>
                and ec.plant_cd = #{plantCd}
            </if>
            <if test="year != null and !year.equals('')">            
                <if test= "monFlag != null and monFlag > 0  and monFlag == 200">
                    and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) &lt; #{year}
                </if>
                <if test= "monFlag != null and monFlag > 0  and monFlag == 300">
                    and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) &lt;= #{year}
                </if>   
                <if test= "monFlag != null and monFlag > 0  and monFlag != 200 and monFlag != 300">
                    and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}
                </if>    
                <if test= "monFlag == null or monFlag.equals('')">
                    and substring(convert(char(10), em.edu_e_ymd, 23), 1, 4) = #{year}
                </if>
            </if>
            <if test= "isTypeCd != null and !isTypeCd.equals('')">
                and ec.is_type_cd = #{isTypeCd}
            </if>
            <if test= "monFlag != null and monFlag != 0 and monFlag != 100 and monFlag != 200 and monFlag != 300">
                and substring(convert(char(10), em.edu_e_ymd, 23), 6, 2) = #{monFlag}
            </if>
             <if test= "completYn != null and completYn!=''">
                and dp.complet_yn = #{completYn}
                and em.r_step_cd='BAPSG'
            </if>
    </select>
</mapper>