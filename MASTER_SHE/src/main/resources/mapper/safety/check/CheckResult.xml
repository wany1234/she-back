<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.check.mapper.CheckResultMapper">

    <!-- 안전점검 일정 목록 조회 -->
    <select id= "getCheckScheduleList" resultType= "com.she.safety.model.CheckMaster">
        /* CheckResultMapper.getCheckScheduleList [CheckResult.xml] */
        select   a.*
               , case when step_status = 'ING' then '진행중'
                      else '점검완료'
                  end as step_status_nm
          from (
                select   case when (select count(b.saf_check_schedule_no)
                                      from saf_check_schedule b
                                     where a.saf_check_no = b.saf_check_no) >
                                   (select count(b.saf_check_schedule_no)
                                      from saf_check_schedule b
                                     where a.saf_check_no = b.saf_check_no
                                       and b.check_step_cd = 'CHS04')
                              then 'ING'
                              else 'CMPLT'
                          end as step_status
                       , a.*
                  from (
                        select   scm.saf_check_no
                               , scm.plant_cd
                               , cm2.code_nm as plant_nm
                               , scm.saf_check_kind_no
                               , sck.saf_check_kind_nm
                               , scm.check_master_title
                               , scm.saf_check_perd
                               , scm.saf_check_plan_symd
                               , scm.saf_check_plan_eymd
                               , scm.dept_cd
                               , dept.dept_nm
                               , scm.create_user_id
                               , cu.user_nm as create_user_nm
                               , case
                                    when dbo.GET_USER_NM(scm.update_user_id) = '' then dbo.GET_USER_NM(scm.create_user_id)
                                    else dbo.GET_USER_NM(scm.update_user_id) end    as writer_user_nm
                               , case when scm.update_dt is null then convert(date, scm.create_dt) else convert(date, scm.update_dt) end   as writer_dt
                               , convert(char(10), scm.create_dt, 23) as create_dt
                               , (select stuff((select ',' + b.dept_nm
                                                  from saf_check_schedule a
                                                 inner join com_dept b
                                                    on a.tgt_dept_cd = b.dept_cd
                                                 where a.saf_check_no = scm.saf_check_no
                                                 group by b.dept_nm
                                                   for xml path('')
                                               ), 1, 1, '')
                                 ) as tgt_dept_nm
							   , (select stuff((select ',' +  b.dept_nm from saf_check_schedule a
                                                 inner join com_dept b
                                                    on a.pfm_dept_cd = b.dept_cd
													 where a.saf_check_no = scm.saf_check_no
													  group by b.dept_nm
													  for xml path('')
                                               ), 1, 1, '')
								) as pfm_dept_nm 
                               , ar.biz_appr_step_cd                               
                               ,isnull(cm.code_nm, '결재요청전' ) as biz_appr_step_nm
                               , isnull(scm.no_sch_yn, 'N') as no_sch_yn
                               , scm.appr_rqst_no
                          from saf_check_master scm
                         inner join com_dept dept
                            on scm.dept_cd = dept.dept_cd
                         inner join saf_check_kind sck
                            on scm.saf_check_kind_no = sck.saf_check_kind_no
                           and sck.subcon_use_yn = 'N'
                          left outer join com_user cu
                            on scm.create_user_id = cu.user_id
                          left outer join com_appr_rqst ar
                            on ar.appr_rqst_no = scm.appr_rqst_no
                          left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm
                            on cm.code = ar.biz_appr_step_cd
                         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') cm2
                            on cm2.code = scm.plant_cd
                         where 1=1
                           and isnull(scm.no_sch_yn, 'N') ='N'
						   and exists (
							select saf_check_no from saf_check_schedule scs
							where scs.saf_check_no = scm.saf_check_no
							and isnull(scs.no_plan_yn, 'N') = 'N' 
							)
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(plantCd)">
                           and scm.plant_cd = #{plantCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(startDate) and @org.apache.commons.lang3.StringUtils@isNotBlank(endDate)">
                           and (scm.saf_check_plan_symd between #{startDate} and #{endDate} or
                                scm.saf_check_plan_eymd between #{startDate} and #{endDate})
        </if>
        <if test= "safCheckKindNo != null and safCheckKindNo > 0">
                           and scm.saf_check_kind_no = #{safCheckKindNo}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(deptCd)">
                           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                           AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                                       UNION ALL
                                       SELECT 1 WHERE #{deptSubYn} = 'Y' AND scm.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                                       UNION ALL
                                       SELECT 1 WHERE #{deptSubYn} = 'N' AND scm.dept_cd = #{deptCd}
                                       )
                           <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(keyword)">
                           and scm.check_master_title like '%' + #{keyword} + '%'
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(tgtDeptCd)">
                           and exists (
                                       select 1
                                         from saf_check_schedule a
                                        where a.saf_check_no = scm.saf_check_no
                                        
                                        <choose>
                                            <when test='tgtDeptSubYn == "Y"'>
                                                and a.tgt_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                                            </when>
                                            <when test='tgtDeptSubYn == "N"'>
                                                and a.tgt_dept_cd = #{tgtDeptCd}
                                            </when>
                                        </choose>
                                      )
        </if>
                <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(pfmDeptCd)">
                           and exists (
                                       select 1
                                         from saf_check_schedule a
                                        where a.saf_check_no = scm.saf_check_no
                                        
                                        <choose>
                                            <when test='pfmDeptSubYn == "Y"'>
                                                and a.pfm_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{pfmDeptCd}))
                                            </when>
                                            <when test='pfmDeptSubYn == "N"'>
                                                and a.pfm_dept_cd = #{pfmDeptCd}
                                            </when>
                                        </choose>
                                      )
        </if>
                        ) a
               ) a
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(stepStatus)">
         where a.step_status = #{stepStatus}
        </if>
         order by writer_dt desc, saf_check_plan_symd
    </select>

    <!-- 안전점검 마스터 등록 -->
    <insert id= "createCheckMaster" parameterType= "com.she.safety.model.CheckMaster">
        <selectKey keyProperty= "safCheckNo" resultType= "int" order= "BEFORE">
            select (next value for seq_saf_check_no) as saf_check_no
        </selectKey>
        /* CheckResultMapper.createCheckMaster [CheckResult.xml] */
        insert into saf_check_master
               (
                   saf_check_no
                 , plant_cd
                 , saf_check_kind_no
                 , check_master_title
                 , saf_check_perd
                 , saf_check_plan_symd
                 , saf_check_plan_eymd
                 , dept_cd
                 <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(noSchYn)">
                 , no_sch_yn
                 </if>
                 , create_user_id
                 , create_dt
               )
               values
               (
                   #{safCheckNo}
                 , #{plantCd}
                 , #{safCheckKindNo}
                 , #{checkMasterTitle}
                 , #{safCheckPerd}
                 , #{safCheckPlanSymd}
                 , #{safCheckPlanEymd}
                 , #{deptCd}
                 <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(noSchYn)">
                 , #{noSchYn}
                 </if>
                 , #{createUserId}
                 , getdate()
               )
    </insert>

    <!-- 안전점검 일정 등록 -->
    <insert id= "createCheckSchedule" parameterType= "com.she.safety.model.CheckSchedule">
        <selectKey keyProperty= "safCheckScheduleNo" resultType= "int" order= "BEFORE">
            select (next value for seq_saf_check_schedule_no) as saf_check_schedule_no
        </selectKey>
        /* CheckResultMapper.createCheckSchedule [CheckResult.xml] */
        insert into saf_check_schedule
               (
                   saf_check_schedule_no
                 , saf_check_no
                 , check_sch_ymd
                 , check_title
                 , tgt_dept_cd
                 , pfm_dept_cd
                 , check_ymd
                 , check_result
                 , check_result_cd
                 , check_step_cd
                 , appr_step_cd
                 , subconn_reg_yn
                 , vendor_cd
                 <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(noPlanYn)">
                 , no_plan_yn
                 </if>
                 , create_user_id
                 , create_dt
               )
               values
               (
                   #{safCheckScheduleNo}
                 , #{safCheckNo}
                 , #{checkSchYmd}
                 , #{checkTitle}
                 , #{tgtDeptCd}
                 , #{pfmDeptCd}
                 , #{checkYmd}
                 , #{checkResult}
                 , #{checkResultCd}
                 , #{checkStepCd}
                 , #{apprStepCd}
                 , #{subconnRegYn}
                 , #{vendorCd}
                 <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(noPlanYn)">
                 , #{noPlanYn}
                 </if>
                 , #{createUserId}
                 , getdate()
               )
    </insert>

    <!-- 안전점검 마스터 조회 -->
    <select id= "getCheckMaster" resultType= "com.she.safety.model.CheckMaster">
        /* CheckResultMapper.getCheckMaster [CheckResult.xml] */
        select   scm.saf_check_no
               , scm.plant_cd
               , scm.saf_check_kind_no
               , sck.saf_check_kind_nm
               , scm.check_master_title
               , scm.saf_check_perd
               , scm.saf_check_plan_symd
               , scm.saf_check_plan_eymd
               , scm.dept_cd
               , scm.create_user_id
               , cu.user_nm as create_user_nm
               , convert(char(10), scm.create_dt, 23) as create_dt
               , isnull(scm.no_sch_yn, 'N') as no_sch_yn
               , scm.update_user_id
               , scm.update_dt
               , scm.appr_rqst_no
               , cbas.code as biz_appr_step_cd               
               ,isnull(cbas.code_nm, '결재요청전' ) as biz_appr_step_nm
               , sck.chng_kind 
           from saf_check_master scm
          inner join saf_check_kind sck
             on scm.saf_check_kind_no = sck.saf_check_kind_no
          inner join com_user cu
             on scm.create_user_id = cu.user_id
           left outer join com_appr_rqst car
             on car.appr_rqst_no = scm.appr_rqst_no
           left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cbas
             on car.biz_appr_step_cd = cbas.code
          where scm.saf_check_no = #{safCheckNo}
    </select>

    <!-- 안전점검 일정 조회 -->
    <select id= "getCheckSchedule" resultType= "com.she.safety.model.CheckSchedule">
        /* CheckResultMapper.getCheckSchedule [CheckResult.xml] */
        select   scs.saf_check_no
               , scs.saf_check_schedule_no
               , scs.check_sch_ymd
               , scs.check_title
               , scs.tgt_dept_cd
               , dept.dept_nm as tgt_dept_nm
               , scs.pfm_dept_cd
			   , pfmDept.dept_nm as pfm_dept_nm
               , scs.check_ymd
               , scs.check_result
               , scs.check_result_cd
               , scs.check_step_cd
               , checkstep.code_nm as check_step_nm
               , scs.appr_step_cd
               , scs.subconn_reg_yn
               , scs.vendor_cd
               , isnull(scs.no_plan_yn, 'N') as no_plan_yn
               , scs.create_user_id
               , scs.create_dt
               , scs.update_user_id
               , scs.update_dt
          from saf_check_schedule scs
         inner join com_dept dept
            on scs.tgt_dept_cd = dept.dept_cd
         left join com_dept pfmDept
            on scs.pfm_dept_cd = pfmDept.dept_cd
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_CHK_STEP') checkstep
            on scs.check_step_cd = checkstep.code
         where saf_check_no = #{safCheckNo}
           and isnull(scs.no_plan_yn, 'N') = 'N'
         order by scs.check_sch_ymd, scs.tgt_dept_cd
    </select>

    <!-- 안전점검 마스터 수정 -->
    <update id= "updateCheckMaster" parameterType= "com.she.safety.model.CheckMaster">
        /* CheckResultMapper.updateCheckMaster [CheckResult.xml] */
        update saf_check_master
           set   plant_cd = #{plantCd}
               , saf_check_kind_no = #{safCheckKindNo}
               , check_master_title = #{checkMasterTitle}
               <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(safCheckPerd)">
               , saf_check_perd = #{safCheckPerd}
               </if>
               <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(safCheckPlanSymd)">
               , saf_check_plan_symd = #{safCheckPlanSymd}
               </if>
               <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(safCheckPlanEymd)">
               , saf_check_plan_eymd = #{safCheckPlanEymd}
               </if>
               , dept_cd = #{deptCd}
               , update_user_id = #{updateUserId}
               , update_dt = getdate()
         where saf_check_no = #{safCheckNo}
    </update>

    <!-- 안전점검 마스터 일정결재요청번호 수정 -->
    <update id="updateCheckMasterForAppr">
        /* CheckResultMapper.updateCheckMasterForAppr [CheckResult.xml] */
        update saf_check_master
           set appr_rqst_no = #{apprRqstNo}
         where saf_check_no = #{safCheckNo}
    </update>

    <!-- 안전점검 일정 점검진행상태 일괄 수정 -->
    <update id="updateCheckScheduleForAppr">
        /* CheckResultMapper.updateCheckScheduleForAppr [CheckResult.xml] */
        update saf_check_schedule
           set check_step_cd = #{checkStepCd}
         where saf_check_no = #{safCheckNo}
    </update>

    <!-- 안전점검 마스터 삭제 -->
    <delete id= "deleteCheckMaster">
        /* CheckResultMapper.deleteCheckMaster [CheckResult.xml] */
        delete from saf_check_master
         where saf_check_no = #{safCheckNo}
    </delete>

    <!-- 안전점검 일정 삭제 -->
    <delete id= "deleteCheckSchedule">
        /* CheckResultMapper.deleteCheckSchedule [CheckResult.xml] */
        delete from saf_check_schedule
         where saf_check_no = #{safCheckNo}
        <if test= "safCheckScheduleNo != null and safCheckScheduleNo > 0">
           and saf_check_schedule_no = #{safCheckScheduleNo}
        </if>
    </delete>

    <delete id= "deleteImprAct">
        /* CheckResultMapper.deleteImprAct [CheckResult.xml] */
        delete from saf_impr_act
        where ref_table_id = #{safCheckScheduleNo}
        and impr_class_cd = 'ICL03'
    </delete>

    <!-- 안전점검계획 목록 조회 -->
    <select id= "getCheckPlanList" resultType= "com.she.safety.model.CheckSchedule">
        /* CheckResultMapper.getCheckPlanList [CheckResult.xml] */
        select   scs.saf_check_schedule_no
               , scm.saf_check_no
               , scs.check_step_cd
               , checkstep.code_nm as check_step_nm
               , scm.saf_check_kind_no
               , sck.saf_check_kind_nm
               , scs.check_sch_ymd
               , scm.check_master_title
               , scs.check_title
               , scm.dept_cd
               , dept.dept_nm
               , scs.tgt_dept_cd
               , tgtdept.dept_nm as tgt_dept_nm
               , scs.pfm_dept_cd
               , pfmdept.dept_nm as pfm_dept_nm
               , scm.create_user_id
               , cu.user_nm as create_user_nm
               , convert(char(10), scm.create_dt, 23) as create_dt
               , scs.check_result
               , scs.check_result_cd
               , convert(char(10), scs.check_ymd, 23) as check_ymd
               , scm.plant_cd
               , plant.code_nm as plant_nm
               , ar.biz_appr_step_cd               
               , isnull(cm.code_nm, '결재요청전' ) as biz_appr_step_nm
               , scs.p_appr_rqst_no
               , scs.r_appr_rqst_no
               , case
                    when dbo.GET_USER_NM(scm.update_user_id) = '' then dbo.GET_USER_NM(scm.create_user_id)
                    else dbo.GET_USER_NM(scm.update_user_id) end    as writer_user_nm
               , case when scm.update_dt is null then convert(date, scm.create_dt) else convert(date, scm.update_dt) end   as writer_dt
          from saf_check_schedule scs
         inner join saf_check_master scm
            on scs.saf_check_no = scm.saf_check_no
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
            on scm.plant_cd = plant.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_CHK_STEP') checkstep
            on scs.check_step_cd = checkstep.code
         inner join saf_check_kind sck
            on scm.saf_check_kind_no = sck.saf_check_kind_no
           and sck.subcon_use_yn = 'N'
         inner join com_dept dept
            on scm.dept_cd = dept.dept_cd
         inner join com_dept tgtdept
            on scs.tgt_dept_cd = tgtdept.dept_cd
         left join com_dept pfmdept
            on scs.pfm_dept_cd = pfmdept.dept_cd
         inner join com_user cu
            on scm.create_user_id = cu.user_id
          left outer join com_appr_rqst ar
            on ar.appr_rqst_no = scs.p_appr_rqst_no
          left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm
            on cm.code = ar.biz_appr_step_cd
         where 1=1
           and isnull(scs.no_plan_yn, 'N') = 'N'
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(startDate) and @org.apache.commons.lang3.StringUtils@isNotBlank(endDate)">
           and (scs.check_sch_ymd between #{startDate} and #{endDate} or
                convert(char(10), scs.check_ymd, 23) between #{startDate} and #{endDate})
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(plantCd)">
           and scm.plant_cd = #{plantCd}
        </if>
        <if test= "safCheckKindNo != null and safCheckKindNo > 0">
           and scm.saf_check_kind_no = #{safCheckKindNo}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(deptCd)">
           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{deptSubYn} = 'Y' AND scm.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{deptSubYn} = 'N' AND scm.dept_cd = #{deptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(tgtDeptCd)">
           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{tgtDeptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{tgtDeptSubYn} = 'Y' AND scs.tgt_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{tgtDeptSubYn} = 'N' AND scs.tgt_dept_cd = #{tgtDeptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(pfmDeptCd)">
           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{pfmDeptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{pfmDeptSubYn} = 'Y' AND scs.pfm_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{pfmDeptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{pfmDeptSubYn} = 'N' AND scs.pfm_dept_cd = #{pfmDeptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkStepCd)">
           and scs.check_step_cd = #{checkStepCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isBlank(checkStepCd)">
           and scs.check_step_cd in ('CHS01', 'CHS02')
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(keyword)">
           and (
                scm.check_master_title like '%' + #{keyword} + '%'
                or
                scs.check_title like '%' + #{keyword} + '%'
               )
        </if>
         order by writer_dt desc, scs.check_sch_ymd asc
    </select>

    <!-- 안전점검 계획, 결과 상세 조회 -->
    <select id= "getCheckScheduleInfo" resultType= "com.she.safety.model.CheckSchedule">
        /* CheckResultMapper.getCheckScheduleInfo [CheckResult.xml] */
        select   scs.saf_check_schedule_no
               , scm.saf_check_no
               , scs.check_step_cd
               , checkstep.code_nm as check_step_nm
               , scm.saf_check_kind_no
               , sck.saf_check_kind_nm
               , scs.check_sch_ymd
               , scm.check_master_title
               , scs.check_title
               , scm.dept_cd
               , dept.dept_nm
               , scs.pfm_dept_cd
               , pdept.dept_nm as pfm_dept_nm
               , scs.tgt_dept_cd
               , tgtdept.dept_nm as tgt_dept_nm
               , scm.create_user_id
               , cu.user_nm as create_user_nm
               , convert(char(10), scm.create_dt, 23) as create_dt
               , scs.check_result
               , scs.check_result_cd
               , scs.no_plan_yn
               , convert(char(10), scs.check_ymd, 23) as check_ymd
               , scm.plant_cd
               , plant.code_nm as plant_nm
               , ar.biz_appr_step_cd
               , isnull(cm.code_nm, '결재요청전' ) as biz_appr_step_nm               
               , scs.p_appr_rqst_no
               , scs.r_appr_rqst_no
               , scm.appr_rqst_no
          from saf_check_schedule scs
         inner join saf_check_master scm
            on scs.saf_check_no = scm.saf_check_no
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
            on scm.plant_cd = plant.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_CHK_STEP') checkstep
            on scs.check_step_cd = checkstep.code
         inner join saf_check_kind sck
            on scm.saf_check_kind_no = sck.saf_check_kind_no
         inner join com_dept dept
            on scm.dept_cd = dept.dept_cd
         inner join com_dept tgtdept
            on scs.tgt_dept_cd = tgtdept.dept_cd
         left join com_dept pdept
            on scs.pfm_dept_cd = pdept.dept_cd
         inner join com_user cu
            on scm.create_user_id = cu.user_id
          left outer join com_appr_rqst ar
            on ar.appr_rqst_no = scs.p_appr_rqst_no
          left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm
            on cm.code = ar.biz_appr_step_cd
         where scs.saf_check_schedule_no = #{safCheckScheduleNo}
    </select>

    <!-- 안전점검 점검자 목록 조회 -->
    <select id= "getCheckInspectors" resultType= "com.she.safety.model.CheckInspector">
        /* CheckResultMapper.getCheckInspectors [CheckResult.xml] */
        select   sci.saf_check_no
               , sci.saf_check_schedule_no
               , sci.saf_check_inspector_no
               , sci.inspector_class_cd
               , ccm.code_nm as inspector_class_nm
               , sci.user_id
               , sci.dept_cd
               , sci.user_nm
               , sci.dept_nm
               , sci.duty_nm
               , sci.check_sch_hour
               , sci.check_sch_minute
               , sci.check_sch_ehour
               , sci.check_sch_eminute
               , sci.check_hour
               , sci.check_minute
               , sci.check_ehour
               , sci.check_eminute
               , sci.remark
          from saf_check_inspector sci
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_INSPECTOR_CLASS') ccm
            on sci.inspector_class_cd = ccm.code
         where sci.saf_check_schedule_no = #{safCheckScheduleNo}
           and sci.inspector_class_cd = #{inspectorClassCd}
    </select>

    <!-- 안전점검 점검자 등록 -->
    <insert id= "createCheckInspector" parameterType= "com.she.safety.model.CheckInspector">
        <selectKey keyProperty= "safCheckInspectorNo" resultType= "int" order= "BEFORE">
            select (next value for seq_saf_check_inspector) as saf_check_inspector_no
        </selectKey>
        /* CheckResultMapper.createCheckInspector [CheckResult.xml] */
        insert into saf_check_inspector
               (
                  saf_check_no
                , saf_check_schedule_no
                , saf_check_inspector_no
                , inspector_class_cd
                , user_id
                , dept_cd
                , user_nm
                , dept_nm
                , duty_nm
                , check_sch_hour
                , check_sch_minute
                , check_sch_ehour
                , check_sch_eminute
                , check_hour
                , check_minute
                , check_ehour
                , check_eminute
                , remark
               )
               values
               (
                  #{safCheckNo}
                , #{safCheckScheduleNo}
                , #{safCheckInspectorNo}
                , #{inspectorClassCd}
                , #{userId}
                , #{deptCd}
                , #{userNm}
                , #{deptNm}
                , #{dutyNm}
                , #{checkSchHour}
                , #{checkSchMinute}
                , #{checkSchEhour}
                , #{checkSchEminute}
                , #{checkHour}
                , #{checkMinute}
                , #{checkEhour}
                , #{checkEminute}
                , #{remark}
               )
    </insert>

    <!-- 안전점검 점검자 삭제 -->
    <delete id= "deleteCheckInspector">
        /* CheckResultMapper.deleteCheckInspector [CheckResult.xml] */
        delete from saf_check_inspector
         where saf_check_schedule_no = #{safCheckScheduleNo}
    </delete>

    <!-- 안전점검일정 수정 -->
    <update id= "updateCheckSchedule" parameterType= "com.she.safety.model.CheckSchedule">
        /* CheckResultMapper.updateCheckSchedule [CheckResult.xml] */
        update saf_check_schedule
           set   update_user_id = #{updateUserId}
               , update_dt = getdate()
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(tgtDeptCd)">
            , tgt_dept_cd = #{tgtDeptCd}
        </if>
     	<if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(pfmDeptCd)">
            , pfm_dept_cd = #{pfmDeptCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkYmd)">
               , check_ymd = #{checkYmd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkResult)">
               , check_result = #{checkResult}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkResultCd)">
               , check_result_cd = #{checkResultCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkStepCd)">
               , check_step_cd = #{checkStepCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(apprStepCd)">
               , appr_step_cd = #{apprStepCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkTitle)">
               , check_title = #{checkTitle}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(subconnRegYn)">
               , subconn_reg_yn = #{subconnRegYn}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(vendorCd)">
               , vendor_cd = #{vendorCd}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkSchYmd)">
               , check_sch_ymd = #{checkSchYmd}
        </if>
         where saf_check_schedule_no = #{safCheckScheduleNo}
    </update>

    <!-- 안전점검 계획 결재요청번호, 결재진행상태 수정 -->
    <update id="updateCheckPlanForAppr">
        /* CheckResultMapper.updateCheckPlanForAppr [CheckResult.xml] */
        update saf_check_schedule
           set   p_appr_rqst_no = #{apprRqstNo}
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkStepCd)">
               , check_step_cd = #{checkStepCd}
        </if>
         where saf_check_schedule_no = #{safCheckScheduleNo}
    </update>

    <!-- 안전점검 결과 결재요청번호, 결재진행상태 수정 -->
    <update id="updateCheckResultForAppr">
        /* CheckResultMapper.updateCheckResultForAppr [CheckResult.xml] */
        update saf_check_schedule
           set   r_appr_rqst_no = #{apprRqstNo}
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkStepCd)">
               , check_step_cd = #{checkStepCd}
        </if>
         where saf_check_schedule_no = #{safCheckScheduleNo}
    </update>

    <!-- 안전점검결과 목록 조회 -->
    <select id= "getCheckResultList" resultType= "com.she.safety.model.CheckSchedule">
        /* CheckResultMapper.getCheckResultList [CheckResult.xml] */
        select   scs.saf_check_schedule_no
               , scm.saf_check_no
               , scs.check_step_cd
               , checkstep.code_nm as check_step_nm
               , scm.saf_check_kind_no
               , sck.saf_check_kind_nm
               , scs.check_sch_ymd
               , scm.check_master_title
               , scs.check_title
               , result.code_nm as check_result_nm
               , scm.dept_cd
               , dept.dept_nm
               , scs.tgt_dept_cd
               , tgtdept.dept_nm as tgt_dept_nm
               , scs.pfm_dept_cd
               , pfmdept.dept_nm as pfm_dept_nm
               , scm.create_user_id
               , cu.user_nm as create_user_nm
               , convert(char(10), scm.create_dt, 23) as create_dt
               , scs.check_result
               , scs.check_result_cd
               , convert(char(10), scs.check_ymd, 23) as check_ymd
               , scm.plant_cd
               , plant.code_nm as plant_nm
               , ar.biz_appr_step_cd               
               , isnull(cm.code_nm, '결재요청전' ) as biz_appr_step_nm
               , scs.p_appr_rqst_no
               , scs.r_appr_rqst_no
               , case
                    when dbo.GET_USER_NM(scm.update_user_id) = '' then dbo.GET_USER_NM(scm.create_user_id)
                    else dbo.GET_USER_NM(scm.update_user_id) end    as writer_user_nm
               , case when scm.update_dt is null then convert(date, scm.create_dt) else convert(date, scm.update_dt) end   as writer_dt
          from saf_check_schedule scs
         inner join saf_check_master scm
            on scs.saf_check_no = scm.saf_check_no
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
            on scm.plant_cd = plant.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_CHK_STEP') checkstep
            on scs.check_step_cd = checkstep.code
         inner join saf_check_kind sck
            on scm.saf_check_kind_no = sck.saf_check_kind_no
           and sck.subcon_use_yn = 'N'
         inner join com_dept dept
            on scm.dept_cd = dept.dept_cd
         inner join com_dept tgtdept
            on scs.tgt_dept_cd = tgtdept.dept_cd
         left join com_dept pfmdept
            on scs.pfm_dept_cd = pfmdept.dept_cd
         inner join com_user cu
            on scm.create_user_id = cu.user_id
          left outer join com_appr_rqst ar
            on ar.appr_rqst_no = scs.r_appr_rqst_no
          left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') cm
            on cm.code = ar.biz_appr_step_cd
          left join dbo.LANG_CODE_MASTER('kr', 'SAF_CHK_RSLT_CLS') result
			on result.code = scs.check_result_cd
         where 1=1

        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(plantCd)">
           and scm.plant_cd = #{plantCd}
        </if>
        <if test= "safCheckKindNo != null and safCheckKindNo > 0">
           and scm.saf_check_kind_no = #{safCheckKindNo}
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(deptCd)">

           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{deptSubYn} = 'Y' AND scm.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{deptSubYn} = 'N' AND scm.dept_cd = #{deptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->

        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(tgtDeptCd)">


           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{tgtDeptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{tgtDeptSubYn} = 'Y' AND scs.tgt_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{tgtDeptSubYn} = 'N' AND scs.tgt_dept_cd = #{tgtDeptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->

        </if>
         <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(pfmDeptCd)">

           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{pfmDeptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{pfmDeptSubYn} = 'Y' AND scs.pfm_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{pfmDeptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{pfmDeptSubYn} = 'N' AND scs.pfm_dept_cd = #{pfmDeptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkResultCd)">
           and scs.check_result_cd  = #{checkResultCd}
        </if>
   
        <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(keyword)">
           and (
                scm.check_master_title like '%' + #{keyword} + '%'
                or
                scs.check_title like '%' + #{keyword} + '%'
               )
        </if>
        
        <choose>
        	<when test="checkStepCd == null or checkStepCd.equals('')">
        		and scs.check_step_cd in ('CHS02', 'CHS03' ,'CHS04')
        		<if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(startDate) and @org.apache.commons.lang3.StringUtils@isNotBlank(endDate)">
           	    and (scs.check_sch_ymd between #{startDate} and #{endDate} or convert(char(10), scs.check_sch_ymd, 23) between #{startDate} and #{endDate})
          		</if>
        	</when>
        	<otherwise>
        		and scs.check_step_cd = #{checkStepCd}
        		<if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(startDate) and @org.apache.commons.lang3.StringUtils@isNotBlank(endDate)">
        		and convert(char(10), scs.check_ymd, 23) between #{startDate} and #{endDate}
        		</if>
        	</otherwise>
        </choose>

         order by writer_dt desc, scm.create_dt desc
    </select>

    <!-- 안전점검 점검항목별 결과 조회 -->
    <select id= "getCheckItemResults" resultType= "com.she.safety.model.CheckItemResult">
        /* CheckResultMapper.getCheckItemResults [CheckResult.xml] */
        select   sci.saf_check_type_nm
               , sci.sort_order
               , sci.saf_check_item_no
               , scir.saf_check_schedule_no
               , scir.saf_check_no
               , scir.check_result
               , scir.remark
          from saf_check_kind sck
          left outer join saf_check_item sci
            on sck.saf_check_kind_no = sci.saf_check_kind_no
          left outer join saf_check_item_result scir
            on scir.saf_check_item_no = sci.saf_check_item_no
           and scir.saf_check_schedule_no = #{safCheckScheduleNo}
           and scir.saf_check_no = #{safCheckNo}
         where 1=1
           and sci.saf_check_kind_no = #{safCheckKindNo}
         order by sci.sort_order
    </select>

    <!-- 안전점검 항목별점검결과 삭제 -->
    <delete id= "deleteCheckItemResult">
        /* CheckResultMapper.deleteCheckItemResult [CheckResult.xml] */
        delete from saf_check_item_result
         where 1=1
           and saf_check_schedule_no = #{safCheckScheduleNo}
        <if test= "safCheckItemNo != null and safCheckItemNo > 0">
           and saf_check_item_no = #{safCheckItemNo}
        </if>
    </delete>

    <!-- 안전점검 항목별점검결과 등록 -->
    <insert id= "createCheckItemResult" parameterType= "com.she.safety.model.CheckItemResult">
        /* CheckResultMapper.createCheckItemResult [CheckResult.xml] */
        insert into saf_check_item_result
               (
                  saf_check_no
                , saf_check_item_no
                , saf_check_schedule_no
                , check_result
                , remark
                , create_user_id
                , create_dt
               )
               values
               (
                  #{safCheckNo}
                , #{safCheckItemNo}
                , #{safCheckScheduleNo}
                , #{checkResult}
                , #{remark}
                , #{createUserId}
                , getdate()
               )
    </insert>

    <!-- 안전점검 점검진행상태 수정 -->
    <update id= "updateCheckStepCd" parameterType= "HashMap">
        /* CheckResultMapper.updateCheckStepCd [CheckResult.xml] */
        update saf_check_schedule
        set   check_step_cd = #{checkStepCd}
            , update_user_id = #{updateUserId}
            , update_dt = getdate()
        where saf_check_schedule_no = #{safCheckScheduleNo}
    </update>

    <select id="getCheckResultStatus" resultType="HashMap">
        /* CheckResultMapper.getCheckResultStatus [CheckResult.xml] */
        with b AS
        (
            SELECT 1 mon
             UNION ALL
            SELECT mon + 1
              FROM b
             WHERE mon + 1 &lt;= 12
        ), p as (
            select scm.plant_cd
                ,scc.check_sch_ymd
            from saf_check_master scm
            inner join saf_check_schedule scc
            on scm.saf_check_no = scc.saf_check_no
            where scc.check_step_cd in ('CHS02','CHS03','CHS04')
        ), r as (
            select scm.plant_cd
                ,scc.check_ymd
            from saf_check_master scm
            inner join saf_check_schedule scc
            on scm.saf_check_no = scc.saf_check_no
            where scc.check_step_cd = 'CHS04'
        ), a as (
            select  *
            from (
                    select p.plant_cd
                        ,convert(varchar, b.mon) + '_plan' as mon
                        ,count(p.check_sch_ymd) as cnt
                    from b
                    left outer join p
                    on DATEPART(yy, p.check_sch_ymd) = #{year}
                    and DATEPART(mm, p.check_sch_ymd) = b.mon
                    where isnull(p.plant_cd, '') != ''
                    group by p.plant_cd
                            ,b.mon
                    union all
                    select r.plant_cd
                        ,convert(varchar, b.mon) + '_result' as mon
                        ,count(r.check_ymd) as cnt
                    from b
                    left outer join r
                    on DATEPART(yy, r.check_ymd) = #{year}
                    and DATEPART(mm, r.check_ymd) = b.mon
                    where isnull(r.plant_cd, '') != ''
                    group by r.plant_cd
                            ,b.mon
                ) d
            pivot
            (
                sum(cnt)
                for mon in ([1_plan], [1_result], [2_plan], [2_result], [3_plan], [3_result], [4_plan], [4_result], [5_plan], [5_result], [6_plan], [6_result], [7_plan], [7_result], [8_plan], [8_result], [9_plan], [9_result], [10_plan], [10_result], [11_plan], [11_result], [12_plan], [12_result])
            ) piv
        )
        select  plant.code as plant_cd, plant.code_nm as plant_nm
            ,isnull([1_plan], 0) as '01_plan', isnull([2_plan], 0) as '02_plan', isnull([3_plan], 0) as '03_plan', isnull([4_plan], 0) as '04_plan', isnull([5_plan], 0) as '05_plan'
            ,isnull([6_plan], 0) as '06_plan', isnull([7_plan], 0) as '07_plan', isnull([8_plan], 0) as '08_plan', isnull([9_plan], 0) as '09_plan', isnull([10_plan], 0) as '10_plan'
            ,isnull([11_plan], 0) as '11_plan', isnull([12_plan], 0) as '12_plan'
            ,isnull([1_result], 0) as '01_result', isnull([2_result], 0) as '02_result', isnull([3_result], 0) as '03_result', isnull([4_result], 0) as '04_result', isnull([5_result], 0) as '05_result'
            ,isnull([6_result], 0) as '06_result', isnull([7_result], 0) as '07_result', isnull([8_result], 0) as '08_result', isnull([9_result], 0) as '09_result', isnull([10_result], 0) as '10_result'
            ,isnull([11_result], 0) as '11_result', isnull([12_result], 0) as '12_result'
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) as sum_plan
            ,isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum_result
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) +
            isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum
        from com_code_master plant
        left outer join a
        on a.plant_cd = plant.code
        where plant.code_group_cd = 'COM_PLANT_CD'
        and plant.code != '0000'
        <if test= "plantCd != null and !''.equals(plantCd)">
        and plant.code = #{plantCd}
        </if>
    </select>

    <select id="getCheckResultStatusSub" resultType="HashMap">
        /* CheckResultMapper.getCheckResultStatusSub [CheckResult.xml] */
        with b AS
        (
            SELECT 1 mon
             UNION ALL
            SELECT mon + 1
              FROM b
             WHERE mon + 1 &lt;= 12
        ), p as (
            select scm.plant_cd
                ,scm.saf_check_kind_no
                ,scm.dept_cd
                ,scc.tgt_dept_cd
                ,scc.check_sch_ymd
            from saf_check_master scm
            inner join saf_check_schedule scc
            on scm.saf_check_no = scc.saf_check_no
            where scc.check_step_cd in ('CHS02','CHS03','CHS04')
        ), r as (
            select scm.plant_cd
                ,scm.saf_check_kind_no
                ,scm.dept_cd
                ,scc.tgt_dept_cd
                ,scc.check_ymd
            from saf_check_master scm
            inner join saf_check_schedule scc
            on scm.saf_check_no = scc.saf_check_no
            where scc.check_step_cd = 'CHS04'
        ), a as (
            select  *
            from (
                    select p.plant_cd ,p.saf_check_kind_no
                        ,p.dept_cd
                        ,p.tgt_dept_cd
                        ,convert(varchar, b.mon) + '_plan' as mon
                        ,count(p.check_sch_ymd) as cnt
                    from b
                    left outer join p
                    on DATEPART(yy, p.check_sch_ymd) = #{year}
                    and DATEPART(mm, p.check_sch_ymd) = b.mon
                    where 1=1
                    <if test= "plantCd != null and !''.equals(plantCd)">
                    and p.plant_cd = #{plantCd}
                    </if>
                    <if test= "safCheckKindNo != null and safCheckKindNo > 0">
                    and p.saf_check_kind_no = #{safCheckKindNo}
                    </if>
                    <if test= "deptCd != null and !''.equals(deptCd)">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'Y' AND p.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'N' AND p.dept_cd = #{deptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                    </if>
                    <if test= "tgtDeptCd != null and !''.equals(tgtDeptCd)">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{tgtDeptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{tgtDeptSubYn} = 'Y' AND p.tgt_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{tgtDeptSubYn} = 'N' AND p.tgt_dept_cd = #{tgtDeptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                    </if>
                    group by p.plant_cd
                    		,p.saf_check_kind_no
                            ,p.dept_cd
                            ,p.tgt_dept_cd
                            ,b.mon
                    union all
                    select r.plant_cd, r.saf_check_kind_no
                        ,r.dept_cd
                        ,r.tgt_dept_cd
                        ,convert(varchar, b.mon) + '_result' as mon
                        ,count(r.check_ymd) as cnt
                    from b
                    left outer join r
                    on DATEPART(yy, r.check_ymd) = #{year}
                    and DATEPART(mm, r.check_ymd) = b.mon
                    where 1=1
                    <if test= "plantCd != null and !''.equals(plantCd)">
                    and r.plant_cd = #{plantCd}
                    </if>
                    <if test= "safCheckKindNo != null and safCheckKindNo > 0">
                    and r.saf_check_kind_no = #{safCheckKindNo}
                    </if>
                    <if test= "deptCd != null and !''.equals(deptCd)">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'Y' AND r.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'N' AND r.dept_cd = #{deptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                    </if>
                    <if test= "tgtDeptCd != null and !''.equals(tgtDeptCd)">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{tgtDeptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{tgtDeptSubYn} = 'Y' AND r.tgt_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{tgtDeptSubYn} = 'N' AND r.tgt_dept_cd = #{tgtDeptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                    </if>
                    group by r.plant_cd 
                    		,r.saf_check_kind_no
                            ,r.dept_cd
                            ,r.tgt_dept_cd
                            ,b.mon
                ) d
            pivot
            (
                sum(cnt)
                for mon in ([1_plan], [1_result], [2_plan], [2_result], [3_plan], [3_result], [4_plan], [4_result], [5_plan], [5_result], [6_plan], [6_result], [7_plan], [7_result], [8_plan], [8_result], [9_plan], [9_result], [10_plan], [10_result], [11_plan], [11_result], [12_plan], [12_result])
            ) piv
        )
        select  a.plant_cd, pl.code_nm as plant_nm, a.saf_check_kind_no, sck.saf_check_kind_nm
            ,a.dept_cd, cd.dept_nm
            ,a.tgt_dept_cd, tgtDept.dept_nm as tgt_dept_nm
            ,isnull([1_plan], 0) as '01_plan', isnull([2_plan], 0) as '02_plan', isnull([3_plan], 0) as '03_plan', isnull([4_plan], 0) as '04_plan', isnull([5_plan], 0) as '05_plan'
            ,isnull([6_plan], 0) as '06_plan', isnull([7_plan], 0) as '07_plan', isnull([8_plan], 0) as '08_plan', isnull([9_plan], 0) as '09_plan', isnull([10_plan], 0) as '10_plan'
            ,isnull([11_plan], 0) as '11_plan', isnull([12_plan], 0) as '12_plan'
            ,isnull([1_result], 0) as '01_result', isnull([2_result], 0) as '02_result', isnull([3_result], 0) as '03_result', isnull([4_result], 0) as '04_result', isnull([5_result], 0) as '05_result'
            ,isnull([6_result], 0) as '06_result', isnull([7_result], 0) as '07_result', isnull([8_result], 0) as '08_result', isnull([9_result], 0) as '09_result', isnull([10_result], 0) as '10_result'
            ,isnull([11_result], 0) as '11_result', isnull([12_result], 0) as '12_result'
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) as sum_plan
            ,isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum_result
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) +
            isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum
        from a
        inner join saf_check_kind sck
        on a.saf_check_kind_no = sck.saf_check_kind_no
        inner join com_dept cd
        on a.dept_cd = cd.dept_cd
        inner join com_dept tgtDept
        on a.tgt_dept_cd = tgtDept.dept_cd
        INNER JOIN dbo.LANG_CODE_MASTER('kr', 'COM_PLANT_CD') pl
        ON a.plant_cd = pl.code
    </select>
    
    <insert id="insertCheckVendor" parameterType="com.she.safety.model.CheckVendor">
    	INSERT into saf_check_master_vendor
          (
	        saf_check_no
			,seq_no
			,vendor_cd
			,vendor_nm
          ) select
          #{safCheckNo}
          ,ISNULL(MAX(seq_no) + 1, 1) 
          ,#{vendorCd}
          ,#{vendorNm}
          from saf_check_master_vendor
    </insert>
    
    <delete id="deleteCheckVendor">
    	DELETE FROM saf_check_master_vendor
		where saf_check_no = #{safCheckNo}
    </delete>
    
    <select id="getCheckVendor" resultType="com.she.safety.model.CheckVendor">
    	SELECT saf_check_no
			,seq_no
			,vendor_cd
			,vendor_nm
		from saf_check_master_vendor  
		where saf_check_no = #{safCheckNo}
    </select>

</mapper>