<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.she.safety.cto.mapper.CtoMapper">

    <select id="getCtos" resultType="com.she.safety.model.Cto">
        /* CtoMapper.getCtos [Cto.xml] */
        SELECT sc.saf_cto_no
              ,sc.plant_cd
              ,plant.code_nm as plant_nm
              ,sc.cto_dt
              ,sc.cto_tm
              ,sc.user_id
              ,cu.user_nm
              ,sc.man_cnt
              ,sc.job_id
              ,rj.job_nm
              ,rj.dept_cd
              ,cd.dept_nm
              ,rj.process_cd
              ,cp.process_nm
              ,sc.work_area
              ,sc.main_act
              ,sc.content
              ,sc.step_cd
              ,step.code_nm as step_nm
              ,sc.create_user_id
              ,createUser.user_nm as create_user_nm
              ,createUserDept.dept_nm as create_dept_nm
              ,convert(char(10), sc.create_dt, 23) as create_dt
              ,sc.update_user_id
              ,updateUser.user_nm as update_user_nm
              ,convert(char(10), sc.update_dt, 23) as update_dt
              ,case
                    when dbo.GET_USER_NM(sc.update_user_id) = '' then dbo.GET_USER_NM(sc.create_user_id)
                    else dbo.GET_USER_NM(sc.update_user_id) end as writer_user_nm
              ,case when sc.update_dt is null then convert(date, sc.create_dt) else convert(date, sc.update_dt) end   as writer_dt
          FROM saf_cto sc
         INNER JOIN com_code_master plant
            ON sc.plant_cd = plant.code
           AND plant.code_group_cd = 'COM_PLANT_CD'
         INNER JOIN com_user cu
            ON sc.user_id = cu.user_id
         INNER JOIN rsa_job rj
            ON sc.job_id = rj.job_id
         INNER JOIN com_dept cd
            ON rj.dept_cd = cd.dept_cd
         INNER JOIN com_process cp
            ON rj.process_cd = cp.process_cd
         INNER JOIN com_code_master step
            ON sc.step_cd = step.code
           AND step.code_group_cd = 'SAF_PROCESS_STEP'
         INNER JOIN com_user createUser
            ON sc.create_user_id = createUser.user_id
         INNER JOIN com_dept createUserDept
            ON createUser.dept_cd = createUserDept.dept_cd
          LEFT OUTER JOIN com_user updateUser
            ON sc.update_user_id = updateUser.user_id
         WHERE 1=1
           AND rj.job_nm like '%' + #{jobNm} + '%'
        <if test="startDt != null and !startDt.equals('') and endDt != null and !endDt.equals('')">
           AND convert(datetime, sc.cto_dt) between convert(datetime, #{startDt}) and convert(datetime, #{endDt})
        </if>
        <!-- 하위부서 포함 조회로 인한 조건 삭제 
        <if test="deptCd != null and !deptCd.equals('')">
           AND rj.dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{deptCd}))
        </if>
         -->
        <if test="processCd != null and !processCd.equals('')">
           AND rj.process_cd = #{processCd}
        </if>
        <if test="plantCd != null and !plantCd.equals('')">
           AND sc.plant_cd = #{plantCd}
        </if>
        <if test="stepCd != null and !stepCd.equals('')">
           AND sc.step_cd = #{stepCd}
        </if>
        <!-- 하위부서 포함여부 관련 쿼리 시작 -->
        AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                    UNION ALL
                    SELECT 1 WHERE #{deptSubYn} = 'Y' AND rj.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                    UNION ALL
                    SELECT 1 WHERE #{deptSubYn} = 'N' AND rj.dept_cd = #{deptCd}
                    )
        <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        ORDER BY writer_dt desc, sc.cto_dt DESC
    </select>
    
    <select id="getCto" resultType="com.she.safety.model.Cto">
        /* CtoMapper.getCto [Cto.xml] */
        select sc.saf_cto_no
            ,sc.plant_cd
            ,plant.code_nm as plant_nm
            ,sc.cto_dt
            ,sc.cto_tm
            ,sc.user_id
            ,cu.user_nm
            ,sc.man_cnt
            ,sc.job_id
            ,rj.job_nm
            ,rj.dept_cd
            ,cd.dept_nm
            ,rj.process_cd
            ,cp.process_nm
            ,sc.work_area
            ,sc.main_act
            ,sc.content
            ,sc.step_cd
            ,step.code_nm as step_nm
            ,sc.create_user_id
            ,createUser.user_nm as create_user_nm
            ,createUserDept.dept_nm as create_dept_nm
            ,convert(char(10), sc.create_dt, 23) as create_dt
            ,sc.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,convert(char(10), sc.update_dt, 23) as update_dt
        from saf_cto sc
        inner join com_code_master plant
        on sc.plant_cd = plant.code
        and plant.code_group_cd = 'COM_PLANT_CD'
        inner join com_user cu 
        on sc.user_id = cu.user_id
        inner join rsa_job rj
        on sc.job_id = rj.job_id
        inner join com_dept cd
        on rj.dept_cd = cd.dept_cd
        inner join com_process cp
        on rj.process_cd = cp.process_cd
        inner join com_code_master step
        on sc.step_cd = step.code
        and step.code_group_cd = 'SAF_PROCESS_STEP'
        inner join com_user createUser 
        on sc.create_user_id = createUser.user_id
        inner join com_dept createUserDept
        on createUser.dept_cd = createUserDept.dept_cd
        left outer join com_user updateUser 
        on sc.update_user_id = updateUser.user_id
        where sc.saf_cto_no = #{safCtoNo}
    </select>
    
    <insert id="createCto" parameterType="com.she.safety.model.Cto">
        /* CtoMapper.createCto [Cto.xml] */
        <selectKey keyProperty="safCtoNo" resultType="int" order="BEFORE">
            select next value for seq_saf_cto as safCtoNo
        </selectKey>
        insert into saf_cto
            (saf_cto_no
            ,plant_cd
            ,cto_dt
            ,cto_tm
            ,user_id
            ,man_cnt
            ,job_id
            ,work_area
            ,main_act
            ,content
            ,step_cd
            ,create_user_id
            ,create_dt)
        values 
            (#{safCtoNo}
            ,#{plantCd}
            ,#{ctoDt}
            ,#{ctoTm}
            ,#{userId}
            ,#{manCnt}
            ,#{jobId}
            ,#{workArea}
            ,#{mainAct}
            ,#{content}
            ,'STEP1'
            ,#{createUserId}
            ,convert(char(10), getDate(), 23))
    </insert>
    
    <update id="updateCto" parameterType="com.she.safety.model.Cto">
        /* CtoMapper.updateCto [Cto.xml] */
        update saf_cto
        set plant_cd = #{plantCd}
            ,cto_dt = #{ctoDt}
            ,cto_tm = #{ctoTm}
            ,user_id = #{userId}
            ,man_cnt = #{manCnt}
            ,job_id = #{jobId}
            ,work_area = #{workArea}
            ,main_act = #{mainAct}
            ,content = #{content}
            ,step_cd = #{stepCd}
            ,update_user_id = #{updateUserId}
            ,update_dt = convert(char(10), getDate(), 23)
        where saf_cto_no = #{safCtoNo}
    </update>
    
    <delete id="deleteCto">
        /* CtoMapper.deleteCto [Cto.xml] */
        delete from saf_cto
        where saf_cto_no = #{safCtoNo}
    </delete>
 
    <select id="getCtoActs" resultType="com.she.safety.model.CtoAct">
        /* CtoMapper.getCtoActs [Cto.xml] */
        select sca.saf_cto_act_no
            ,sca.saf_cto_no
            ,sca.main_act
            ,sca.sel_cd
            ,sel.code_nm as sel_nm
            ,sca.remarks
        from saf_cto_act sca
        inner join com_code_master sel
        on sca.sel_cd = sel.code
        and sel.code_group_cd = 'SAF_SEL_VAL1'
        where sca.saf_cto_no = #{safCtoNo}
    </select>
    
    <insert id="createCtoAct" parameterType="com.she.safety.model.CtoAct">
        /* CtoMapper.getCtoActs [Cto.xml] */
        <selectKey keyProperty="safCtoActNo" resultType="int" order="BEFORE">
            select next value for seq_saf_cto_act as safCtoActNo
        </selectKey>
        insert into saf_cto_act
            (saf_cto_act_no
            ,saf_cto_no
            ,main_act
            ,sel_cd
            ,remarks)
        values
            (#{safCtoActNo}
            ,#{safCtoNo}
            ,#{mainAct}
            ,#{selCd}
            ,#{remarks})
    </insert>
    
    <delete id="deleteCtoAct">
        /* CtoMapper.deleteCtoAct [Cto.xml] */
        delete from saf_cto_act
        where saf_cto_no = #{safCtoNo}
    </delete>
 
    <select id="getCtoCheckResults" resultType="com.she.safety.model.CtoCheckResult">
        /* CtoMapper.getCtoCheckResults [Cto.xml] */
        select sccr.saf_cto_no
            ,sccr.cto_act_cd
            ,act.code_nm as cto_act_nm
            ,sccr.sel_cd
            ,sel.code_nm as sel_nm
            ,sccr.remarks
        from saf_cto_chk_rslt sccr
        inner join com_code_master act
        on sccr.cto_act_cd = act.code
        and act.code_group_cd = 'SAF_CTO_ACT'
        inner join com_code_master sel
        on sccr.sel_cd = sel.code
        and sel.code_group_cd = 'SAF_SEL_VAL2'
        where sccr.saf_cto_no = #{safCtoNo}
    </select>
    
    <insert id="createCtoCheckResult" parameterType="com.she.safety.model.CtoCheckResult">
        /* CtoMapper.createCtoCheckResult [Cto.xml] */
        insert into saf_cto_chk_rslt
            (saf_cto_no
            ,cto_act_cd
            ,sel_cd
            ,remarks)
        values
            (#{safCtoNo}
            ,#{ctoActCd}
            ,#{selCd}
            ,#{remarks})
    </insert>
    
    <delete id="deleteCtoCheckResult">
        /* CtoMapper.saf_cto_chk_rslt [Cto.xml] */
        delete from saf_cto_chk_rslt
        where saf_cto_no = #{safCtoNo}
    </delete>
 
    <select id="getCtoActCauses" resultType="com.she.safety.model.CtoActCause">
        /* CtoMapper.getCtoActCauses [Cto.xml] */
        select scac.saf_cto_no
              ,scac.att_cd
              ,att.code_nm as att_nm
              ,scac.itm_cd
              ,cauItem.code_nm as itm_nm
        from saf_cto_act_cause scac
        inner join com_code_master att
        on scac.att_cd = att.code
        and att.code_group_cd = 'SAF_CTO_CAU_CLS'
        inner join com_code_master cauItem
        on scac.itm_cd = cauItem.code
        and cauItem.code_group_cd = 'SAF_CTO_CAU_ITM'
        where scac.saf_cto_no = #{safCtoNo}
    </select>
    
    <insert id="createCtoActCause" parameterType="com.she.safety.model.CtoActCause">
        /* CtoMapper.createCtoActCause [Cto.xml] */
        insert into saf_cto_act_cause
            (saf_cto_no
            ,att_cd
            ,itm_cd)
        values
            (#{safCtoNo}
            ,#{attCd}
            ,#{itmCd})
    </insert>
    
    <delete id="deleteCtoActCause">
        /* CtoMapper.deleteCtoActCause [Cto.xml] */
        delete from saf_cto_act_cause
        where saf_cto_no = #{safCtoNo}
    </delete>

    <select id= "checkCheckListItem" resultType= "HashMap">
        select 1
             ,'code' as gubun
        from com_code_master ccm
        where 1=1
          and ccm.code_group_cd = #{codeGroupCd}
          and ccm.code = #{code}
        union all
        select 1
             ,'name' as gubun
        where exists(select 1
                     from com_code_master ccm
                     where 1=1
                       and ccm.code_group_cd = #{codeGroupCd}
                       and ccm.code_nm = #{codeNm}
                       and ccm.code not in (#{code}))
    </select>
 
</mapper>