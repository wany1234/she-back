<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.mgt.budgetManagement.mapper.MgtBudgetingMapper">
    <!-- 예산편성관리 목록 조회 -->
    <select id="getMgtBudgetActs" resultType="com.she.mgt.model.MgtBudgetAct">
        /* MgtBudgetingMapper.getMgtBudgetActs[MgtBudgeting.xml] */
        select	ba.budget_act_no
                ,ba.year
                ,ba.plant_cd
                ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_PLANT_CD', ba.plant_cd) as plant_nm
                ,bad.budget_act_dept_no -- 예산편성부서번호
                ,bad.dept_cd -- 대상부서코드
                ,dbo.GET_DEPT_NM(bad.dept_cd) as dept_nm -- 대상부서명
                ,bam.budget_type_cd -- 예산분류코드
                ,badi.budget_type_nm -- 예산분류명
                ,bam.budget_act_mst_no
                ,bam.budget_cls_cd -- 예산구분코드
                ,badi.budget_cls_nm -- 예산구분명
                ,bam.budget_act_cd -- 예산계정코드
                ,badi.budget_act_nm -- 예산계정명
                ,badi.org_amt -- 편성금액
                ,format(badi.org_amt, '##,##0') as org_amt_t -- 편성금액
                ,bad.proc_step_cd -- 단계코드(편성/집행)
                ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'MGT_BUDGET_STEP', bad.proc_step_cd) as proc_step_nm -- 단계(편성/집행)
                ,bad.state_cd -- 상태(미작성/작성중/결재중/결재완료)
                ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_STATE', bad.state_cd) as state_nm -- 단계(미작성/작성중/결재중/결재완료)
                ,iif(isnull(ba.budget_act_no, 0) = 0, null, concat(dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'MGT_BUDGET_STEP', bad.proc_step_cd), ' (', case when bad.step_cd = 'BAPSD' then i.code_nm else dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_STATE', bad.state_cd) end, ')')) as step_nm -- 단계(상태)
                ,bad.appr_rqst_no -- 결재요청번호
                ,bad.step_cd -- 결재상태
                ,ba.create_user_id -- 작성자ID
                ,dbo.GET_USER_NM(ba.create_user_id) as create_user_nm -- 작성자
                ,convert(char(10), ba.create_dt, 23) as create_dt -- 작성일
                ,ba.create_dept_cd -- 작성자부서코드
                ,iif(isnull(ba.create_dept_nm , '') = '', dbo.GET_DEPT_NM(ba.create_dept_cd), ba.create_dept_nm) as create_dept_nm -- 작성자부서명
                ,ba.create_position_cd -- 작성자직위코드
                ,iif(isnull(ba.create_position_nm, '') = '', pos.position_nm, ba.create_position_nm) as create_position_nm -- 작성자직위명
                ,iif(isnull(ba.update_user_id, '') = '', dbo.GET_USER_NM(ba.create_user_id), dbo.GET_USER_NM(ba.update_user_id)) as writer_nm
                ,iif(isnull(ba.update_dt, '') = '', convert(date, ba.create_dt), convert(date, ba.update_dt)) as write_dt
        from mgt_budget_act ba -- 예산편성
        left outer join mgt_budget_act_dept bad -- 예산편성부서
        on ba.budget_act_no = bad.budget_act_no
        left outer join mgt_budget_act_dept_item badi -- 예산편성부서계정
        on badi.budget_act_dept_no = bad.budget_act_dept_no
        left outer join mgt_mg_budget_act_mst bam -- 예산계정
        on bam.budget_act_mst_no = badi.budget_act_mst_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'MICS3') bat -- 예산분류
        on bat.code = bam.budget_type_cd
        left outer join com_hr_position pos -- 직위
        on pos.position_cd = ba.create_position_cd
        left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') i on bad.step_cd = i.code
        where 1=1
        <if test="startYear != null and !startYear.equals('') and endYear != null and !endYear.equals('')">
        and ba.year between #{startYear} and #{endYear}
        </if>
        <if test="plantCd != null and !plantCd.equals('')">
        and ba.plant_cd = #{plantCd}
        </if>
        <if test="deptCd != null and !deptCd.equals('')">
            <choose>
                <when test="deptSubYn != null and deptSubYn == 'Y'.toString()">
                and bad.dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{deptCd}))
                </when>
                <otherwise>
                and bad.dept_cd = #{deptCd}
                </otherwise>
            </choose>
        </if>
        <if test="budgetTypeCd != null and !budgetTypeCd.equals('')">
        and badi.budget_type_cd = #{budgetTypeCd}
        </if>
        <if test="budgetClsCd != null and !budgetClsCd.equals('')">
        and badi.budget_cls_cd = #{budgetClsCd}
        </if>
        <if test="budgetActNm != null and !budgetActNm.equals('')">
        and bam.budget_act_nm like '%' + #{budgetActNm} + '%'
        </if>
        <if test="budgetActMstNo != null and budgetActMstNo > 0">
        and bam.budget_act_mst_no = #{budgetActMstNo}
        </if>
        <if test="unOrganizeYn != null and unOrganizeYn == 'Y'.toString()">
        and bad.step_cd != 'BAPSG' -- 미편성 대상부서는 결재완료되지 않은 건만 조회
        </if>
        <if test="procStepCd != null and !procStepCd.equals('')">
        and bad.proc_step_cd = #{procStepCd}
        </if>
        <if test="stateCd != null and !stateCd.equals('')">
        and bad.state_cd = #{stateCd}
        </if>
        <if test='statusYn != null and statusYn.equals("Y")'>
            union all
            select	0 as budget_act_no
                    ,null year
                    ,'999999' plant_cd
                    ,null as plant_nm
                    ,0 as budget_act_dept_no
                    ,null dept_cd -- 대상부서코드
                    ,null as dept_nm -- 대상부서명
                    ,null as budget_type_cd -- 예산분류코드
                    ,null as budget_type_nm -- 예산분류명
                    ,0 as budget_act_mst_no
                    ,null as budget_cls_cd -- 예산구분코드
                    ,null as budget_cls_nm -- 예산구분명
                    ,null as budget_act_cd -- 예산계정코드
                    ,'합계' as budget_act_nm -- 예산계정명
                    ,isnull(sum(badi.org_amt), 0) as org_amt -- 편성금액
                    ,format(isnull(sum(badi.org_amt), 0), '##,##0') as org_amt_t -- 편성금액
                    ,null as proc_step_cd -- 단계코드(편성/집행)
                    ,null as proc_step_nm -- 단계(편성/집행)
                    ,null as state_cd -- 상태(미작성/작성중/결재중/결재완료)
                    ,null as state_nm -- 단계(미작성/작성중/결재중/결재완료)
                    ,null as step_nm -- 단계(상태)
                    ,null as appr_rqst_no -- 결재요청번호
                    ,null as step_cd -- 결재상태
                    ,null as create_user_id -- 작성자ID
                    ,null as create_user_nm -- 작성자
                    ,null as create_dt -- 작성일
                    ,null as create_dept_cd -- 작성자부서코드
                    ,null as create_dept_nm -- 작성자부서명
                    ,null as create_position_cd -- 작성자직위코드
                    ,null as create_position_nm -- 작성자직위명
                    ,null as writer_nm
                    ,null as write_dt
            from mgt_budget_act ba -- 예산편성
            left outer join mgt_budget_act_dept bad -- 예산편성부서
            on ba.budget_act_no = bad.budget_act_no
            left outer join mgt_budget_act_dept_item badi -- 예산편성부서계정
            on badi.budget_act_dept_no = bad.budget_act_dept_no
            left outer join mgt_mg_budget_act_mst bam -- 예산계정
            on bam.budget_act_mst_no = badi.budget_act_mst_no
            left outer join dbo.LANG_CODE_MASTER('kr', 'MICS3') bat -- 예산분류
            on bat.code = bam.budget_type_cd
            left outer join com_hr_position pos -- 직위
            on pos.position_cd = ba.create_position_cd
            where 1=1
            <if test="startYear != null and !startYear.equals('') and endYear != null and !endYear.equals('')">
            and ba.year between #{startYear} and #{endYear}
            </if>
            <if test="plantCd != null and !plantCd.equals('')">
            and ba.plant_cd = #{plantCd}
            </if>
            <if test="deptCd != null and !deptCd.equals('')">
                <choose>
                    <when test="deptSubYn != null and deptSubYn == 'Y'.toString()">
                        and bad.dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{deptCd}))
                    </when>
                    <otherwise>
                        and bad.dept_cd = #{deptCd}
                    </otherwise>
                </choose>
            </if>
            <if test="budgetTypeCd != null and !budgetTypeCd.equals('')">
                and badi.budget_type_cd = #{budgetTypeCd}
            </if>
            <if test="budgetClsCd != null and !budgetClsCd.equals('')">
                and badi.budget_cls_cd = #{budgetClsCd}
            </if>
            <if test="budgetActNm != null and !budgetActNm.equals('')">
                and bam.budget_act_nm like '%' + #{budgetActNm} + '%'
            </if>
            <if test="budgetActMstNo != null and budgetActMstNo > 0">
                and bam.budget_act_mst_no = #{budgetActMstNo}
            </if>
            <if test="procStepCd != null and !procStepCd.equals('')">
                and bad.proc_step_cd = #{procStepCd}
            </if>
            <if test="stateCd != null and !stateCd.equals('')">
                and bad.state_cd = #{stateCd}
            </if>
        </if>
        order by plant_cd
    </select>

    <!-- 예산편성관리 상세 조회(budgetActNo 또는 year/plantCd) -->
    <select id="getMgtBudgetAct" resultType="com.she.mgt.model.MgtBudgetAct">
        /* MgtBudgetingMapper.getMgtBudgetAct[MgtBudgeting.xml] */
        select	budget_act_no
                ,year
                ,plant_cd
                ,create_user_id
                ,create_dt
                ,update_user_id
                ,update_dt
                ,create_dept_nm
                ,create_dept_cd
                ,update_dept_nm
                ,update_dept_cd
                ,create_position_nm
                ,create_position_cd
                ,update_position_nm
                ,update_position_cd
        from mgt_budget_act
        where 1=1
        <choose>
            <when test="flag != null and flag == 'Y'.toString()">
            <!-- 신규등록 조회시 연도/사업장 기준으로 등록된 데이터 조회 -->
            and year = #{year}
            and plant_cd = #{plantCd}
            </when>
            <otherwise>
            <!-- 상세 조회 -->
            and budget_act_no = #{budgetActNo}
            </otherwise>
        </choose>
    </select>

    <!-- 예산편성 상세 예산편성 대상부서 목록 조회 -->
    <select id="getMgtBudgetActDepts" resultType="com.she.mgt.model.MgtBudgetActDept">
        /* MgtBudgetingMapper.getMgtBudgetActDepts[MgtBudgeting.xml] */
        select	bad.budget_act_dept_no
                ,bad.budget_act_no
                ,ba.year
                ,ba.plant_cd
                ,dbo.GET_CODE_NM_LANG('kr', 'COM_PLANT_CD', ba.plant_cd) as plant_nm
                ,bad.dept_cd
                ,d.dept_nm
                ,bad.proc_step_cd -- 단계코드(편성/집행)
                ,bad.state_cd -- 상태(미작성/작성중/결재중/결재완료)
                ,bad.step_cd -- 결재상태
                ,bad.appr_rqst_no -- 결재요청번호
                ,bad.remark -- 비고
        from mgt_budget_act ba
        inner join mgt_budget_act_dept bad
        on ba.budget_act_no = bad.budget_act_no
        inner join com_dept d
        on d.dept_cd = bad.dept_cd
        where 1=1
        and bad.budget_act_no = #{budgetActNo}
        <if test="budgetActDeptNo != null and budgetActDeptNo > 0">
        and bad.budget_act_dept_no = #{budgetActDeptNo}
        </if>
        order by bad.budget_act_dept_no
    </select>

    <!-- 예산편성관리 신규등록 -->
    <insert id="createMgtBudgetAct" parameterType="com.she.mgt.model.MgtBudgetAct">
        /* MgtBudgetingMapper.createMgtBudgetAct[MgtBudgeting.xml] */
        <selectKey keyProperty="budgetActNo" resultType="int" order="BEFORE">
            select next value for seq_mgt_budget_act as budgetActNo
        </selectKey>
        insert into mgt_budget_act (
            budget_act_no
            ,year
            ,plant_cd
            ,create_user_id
            ,create_dt
            ,create_dept_nm
            ,create_dept_cd
            ,create_position_nm
            ,create_position_cd
        )
        values (
            #{budgetActNo}
            ,#{year}
            ,#{plantCd}
            ,#{createUserId}
            ,getDate()
            ,#{createDeptNm}
            ,#{createDeptCd}
            ,#{createPositionNm}
            ,#{createPositionCd}
        )
    </insert>

    <!-- 예산편성관리 수정 -->
    <update id="updateMgtBudgetAct" parameterType="com.she.mgt.model.MgtBudgetAct">
        /* MgtBudgetingMapper.updateMgtBudgetAct[MgtBudgeting.xml] */
        update mgt_budget_act
        set year = #{year}
            ,plant_cd = #{plantCd}
            ,update_user_id = #{updateUserId}
            ,update_dt = getDate()
            ,update_dept_nm = #{updateDeptNm}
            ,update_dept_cd = #{updateDeptCd}
            ,update_position_nm = #{updatePositionNm}
            ,update_position_cd = #{updatePositionCd}
        where budget_act_no = #{budgetActNo}
    </update>

    <!-- 예산편성관리 삭제 -->
    <delete id="deleteMgtBudgetAct">
        /* MgtBudgetingMapper.deleteMgtBudgetAct[MgtBudgeting.xml] */
        delete from mgt_budget_act
        where budget_act_no = #{budgetActNo}
    </delete>

    <!-- 예산편성관리 대상부서 저장 -->
    <update id="saveMgtBudgetActDept" parameterType="com.she.mgt.model.MgtBudgetActDept">
        /* MgtBudgetingMapper.saveMgtBudgetActDept[MgtBudgeting.xml] */
        <selectKey keyProperty="budgetActDeptNo" order="BEFORE" resultType="int">
            <choose>
                <when test="budgetActDeptNo != null and budgetActDeptNo > 0">
                    select #{budgetActDeptNo} as budgetActDeptNo
                </when>
                <otherwise>
                    select next value for seq_mgt_budget_act_dept as budgetActDeptNo
                </otherwise>
            </choose>
        </selectKey>
        merge into mgt_budget_act_dept T
        using (
            select  #{budgetActDeptNo} as budget_act_dept_no
                    ,#{budgetActNo} as budget_act_no
                    ,#{deptCd} as dept_cd
                    ,#{procStepCd} as proc_step_cd
                    ,#{stateCd} as state_cd
                    ,#{stepCd} as step_cd
                    ,#{apprRqstNo} as appr_rqst_no
                    ,#{remark} as remark
        ) S
        on S.budget_act_dept_no = T.budget_act_dept_no and S.budget_act_no = T.budget_act_no
        when matched then
        update
        set dept_cd = S.dept_cd
            ,proc_step_cd = S.proc_step_cd
            ,state_cd = S.state_cd
            ,step_cd = S.step_cd
            ,appr_rqst_no = S.appr_rqst_no
            ,remark = S.remark
        when not matched then
        insert (
            budget_act_dept_no
            ,budget_act_no
            ,dept_cd
            ,proc_step_cd
            ,state_cd
            ,step_cd
            ,appr_rqst_no
            ,remark
        )
        values (
            S.budget_act_dept_no
            ,S.budget_act_no
            ,S.dept_cd
            ,S.proc_step_cd
            ,S.state_cd
            ,S.step_cd
            ,S.appr_rqst_no
            ,S.remark
        )
        ;
    </update>

    <!-- 예산편성관리 대상부서 삭제 -->
    <delete id="deleteMgtBudgetActDept">
        /* MgtBudgetingMapper.deleteMgtBudgetActDept[MgtBudgeting.xml] */
        delete from mgt_budget_act_dept
        where budget_act_no = #{budgetActNo}
        <if test="budgetActDeptNo != null and budgetActDeptNo > 0">
        and budget_act_dept_no = #{budgetActDeptNo}
        </if>
    </delete>

    <!-- 예산편성관리 대상부서별 예산계정 목록 조회 -->
    <select id="getMgtBudgetActDeptItems" resultType="com.she.mgt.model.MgtBudgetActDeptItem">
        /* MgtBudgetingMapper.getMgtBudgetActDeptItems[MgtBudgeting.xml] */
        select	badi.budget_act_dept_item_no
                ,badi.budget_act_dept_no
                ,badi.budget_act_mst_no
                ,bam.budget_act_cd
                ,badi.budget_act_nm
                ,badi.budget_type_cd
                ,badi.budget_type_nm
                ,badi.budget_cls_cd
                ,badi.budget_cls_nm
                ,badi.org_amt
                ,iif(isnull(be.budget_exec_no, 0) != 0 and isnull(be.exec_dt, '') != '', 'Y', 'N') as exec_yn -- 예산집행여부
                ,isnull(be.budget_exec_no, 0) as budget_exec_no -- 예산집행번호
                ,badi.create_user_id
                ,badi.create_dt
                ,badi.update_user_id
                ,badi.update_dt
                ,badi.create_dept_nm
                ,badi.create_dept_cd
                ,badi.update_dept_nm
                ,badi.update_dept_cd
                ,badi.create_position_nm
                ,badi.create_position_cd
                ,badi.update_position_nm
                ,badi.update_position_cd
        from mgt_budget_act_dept_item badi
        left outer join mgt_mg_budget_act_mst bam
        on bam.budget_act_mst_no = badi.budget_act_mst_no
        left outer join (select b.budget_act_dept_item_no, max(b.budget_exec_no) as budget_exec_no, max(b.exec_dt) as exec_dt
                        from mgt_budget_act_dept_item a 
                        inner join mgt_budget_exec b on a.budget_act_dept_item_no = b.budget_act_dept_item_no
                        where budget_act_dept_no = #{budgetActDeptNo}
                        group by b.budget_act_dept_item_no) be -- 예산집행
        on be.budget_act_dept_item_no = badi.budget_act_dept_item_no
        where 1=1
        and budget_act_dept_no = #{budgetActDeptNo}
    </select>

    <!-- 예산편성관리 대상부서별 예산계정 저장 -->
    <insert id="saveMgtBudgetActDeptItem" parameterType="com.she.mgt.model.MgtBudgetActDeptItem">
        /* MgtBudgetingMapper.saveMgtBudgetActDeptItem[MgtBudgeting.xml] */
        <selectKey keyProperty="budgetActDeptItemNo" order="BEFORE" resultType="int">
            <choose>
                <when test="budgetActDeptItemNo != null and budgetActDeptItemNo > 0">
                    select #{budgetActDeptItemNo} as budgetActDeptItemNo
                </when>
                <otherwise>
                    select next value for seq_mgt_budget_act_dept_item as budgetActDeptItemNo
                </otherwise>
            </choose>
        </selectKey>
        merge into mgt_budget_act_dept_item T
        using (
            select  #{budgetActDeptItemNo} as budget_act_dept_item_no
                    ,#{budgetActDeptNo} as budget_act_dept_no
                    ,#{budgetActMstNo} as budget_act_mst_no
                    ,#{budgetActNm} as budget_act_nm
                    ,#{budgetTypeCd} as budget_type_cd
                    ,#{budgetTypeNm} as budget_type_nm
                    ,#{budgetClsCd} as budget_cls_cd
                    ,#{budgetClsNm} as budget_cls_nm
                    ,#{orgAmt} as org_amt
                    ,#{createUserId} as create_user_id
                    ,getDate() as create_dt
                    ,#{updateUserId} as update_user_id
                    ,getDate() as update_dt
                    ,#{createDeptNm} as create_dept_nm
                    ,#{createDeptCd} as create_dept_cd
                    ,#{updateDeptNm} as update_dept_nm
                    ,#{updateDeptCd} as update_dept_cd
                    ,#{createPositionNm} as create_position_nm
                    ,#{createPositionCd} as create_position_cd
                    ,#{updatePositionNm} as update_position_nm
                    ,#{updatePositionCd} as update_position_cd
        ) S
        on S.budget_act_dept_item_no = T.budget_act_dept_item_no and S.budget_act_dept_no = T.budget_act_dept_no
        when matched then
        update
        set budget_act_mst_no = S.budget_act_mst_no
            ,budget_act_nm = S.budget_act_nm
            ,budget_type_cd = S.budget_type_cd
            ,budget_type_nm = S.budget_type_nm
            ,budget_cls_cd = S.budget_cls_cd
            ,budget_cls_nm = S.budget_cls_nm
            ,org_amt = S.org_amt
            ,update_user_id = S.update_user_id
            ,update_dt = S.update_dt
            ,update_dept_nm = S.update_dept_nm
            ,update_dept_cd = S.update_dept_cd
            ,update_position_nm = S.update_position_nm
            ,update_position_cd = S.update_position_cd
        when not matched then
        insert (
            budget_act_dept_item_no
            ,budget_act_dept_no
            ,budget_act_mst_no
            ,budget_act_nm
            ,budget_type_cd
            ,budget_type_nm
            ,budget_cls_cd
            ,budget_cls_nm
            ,org_amt
            ,create_user_id
            ,create_dt
            ,create_dept_nm
            ,create_dept_cd
            ,create_position_nm
            ,create_position_cd
        )
        values (
            S.budget_act_dept_item_no
            ,S.budget_act_dept_no
            ,S.budget_act_mst_no
            ,S.budget_act_nm
            ,S.budget_type_cd
            ,S.budget_type_nm
            ,S.budget_cls_cd
            ,S.budget_cls_nm
            ,S.org_amt
            ,S.create_user_id
            ,S.create_dt
            ,S.create_dept_nm
            ,S.create_dept_cd
            ,S.create_position_nm
            ,S.create_position_cd
        )
        ;
    </insert>

    <!-- 예산편성관리 대상부서별 예산계정 삭제 -->
    <delete id="deleteMgtBudgetActDeptItem">
        /* MgtBudgetingMapper.deleteMgtBudgetActDeptItem[MgtBudgeting.xml] */
        delete from mgt_budget_act_dept_item
        where budget_act_dept_no = #{budgetActDeptNo}
        <if test="budgetActDeptItemNo != null and budgetActDeptItemNo > 0">
        and budget_act_dept_item_no = #{budgetActDeptItemNo}
        </if>
    </delete>

    <!-- 예산편성관리 대상부서 결재정보 업데이트 -->
    <update id="updateAppr" parameterType="com.she.mgt.model.MgtBudgetActDept">
        /* MgtBudgetingMapper.updateAppr[MgtBudgeting.xml] */
        update mgt_budget_act_dept
        set appr_rqst_no = #{apprRqstNo} -- 결재요청번호
            ,state_cd = #{stateCd} -- 상태
            ,step_cd = #{stepCd} -- 결재상태
        where budget_act_dept_no = #{budgetActDeptNo}
        and budget_act_no = #{budgetActNo}
    </update>

    <!-- 예산편성 상세 예산편성 대상부서 상세 조회 (현황 팝업시) -->
    <select id="getMgtBudgetActDeptByStatInfo" resultType="com.she.mgt.model.MgtBudgetActDept">
        /* MgtBudgetingMapper.getMgtBudgetActDeptByStatInfo[MgtBudgeting.xml] */
        select	bad.budget_act_dept_no
                ,bad.budget_act_no
                ,ba.year
                ,ba.plant_cd
                ,dbo.GET_CODE_NM_LANG('kr', 'COM_PLANT_CD', ba.plant_cd) as plant_nm
                ,bad.dept_cd
                ,d.dept_nm
                ,bad.proc_step_cd -- 단계코드(편성/집행)
                ,bad.state_cd -- 상태(미작성/작성중/결재중/결재완료)
                ,bad.step_cd -- 결재상태
                ,bad.appr_rqst_no -- 결재요청번호
                ,bad.remark -- 비고
        from mgt_budget_act ba
        inner join mgt_budget_act_dept bad
        on ba.budget_act_no = bad.budget_act_no
        inner join com_dept d
        on d.dept_cd = bad.dept_cd
        where 1=1
        and ba.year = #{year}
        and ba.plant_cd = #{plantCd}
        and bad.dept_cd = #{deptCd}
    </select>
</mapper>