<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.manage.mapper.UserMapper">
    <select id= "getUsers" resultType= "com.she.manage.model.User">
        /* UserMapper.getUsers [User.xml] */
       with depttree as (
            select cd.dept_cd
                ,cd.dept_nm
                ,cd.p_dept_cd
            from com_dept cd
            where 1=1
            <choose>
                <when test= "deptCd != null and !deptCd.equals('')">
                    and cd.dept_cd = #{deptCd}
                </when>
           <!--      <otherwise>
                    and isnull(cd.p_dept_cd, '') = ''
                </otherwise> -->
            </choose>
            <if test= 'deptCd != null and !deptCd.equals("") and deptSubYn != null and !deptSubYn.equals("N")'>
            union all
            select cdd.dept_cd
                ,cdd.dept_nm
                ,cdd.p_dept_cd
            from com_dept cdd
            inner join depttree
            on cdd.p_dept_cd = depttree.dept_cd
            </if>
        )
        select u.user_id, u.user_pwd_SHA, u.user_nm, depttree.dept_cd, depttree.dept_nm
            , u.com_sex_type_cd, sex.code_nm as com_sex_type_nm -- case when u.com_sex_type_cd = '1' then '남자' else '여자' end as com_sex_type_nm
            , u.office_tel, u.phone_no, u.email, u.birth_ymd, u.entry_ymd
            , u.use_yn, case when u.use_yn = 'Y' then '재직O' else '재직X' end as use_yn_nm
            , u.create_user_id, cu.user_nm as create_user_nm, u.create_dt
            , u.update_user_id, uu.user_nm as update_user_nm, u.update_dt
            , u.plant_cd , ISNULL(plant.code_nm, '기타') as plant_nm
            , u.duty_cd, duty.duty_nm
            , u.position_cd, position.position_nm
            , u.signature
            , u.cost_center_nm
        from com_user u
        inner join depttree
        on u.dept_cd = depttree.dept_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
        on u.plant_cd = plant.code
        left outer join com_hr_duty duty
        on u.duty_cd = duty.duty_cd
        left outer join com_hr_position position
        on u.position_cd = position.position_cd
        left outer join com_user cu
        on u.create_user_id = cu.user_id
        left outer join com_user uu
        on u.update_user_id = uu.user_id
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_SEX_TYPE') sex
        on u.com_sex_type_cd = sex.code
        where 1=1
        <if test= "processCd != null and !processCd.equals('')">
        and exists (
            select 1
            from com_process pp
            <!-- left outer join com_process_user pu
            on pp.process_cd = pu.process_cd
            and pu.user_id = u.user_id -->
            left outer join com_process_dept pd
            on pp.process_cd = pd.process_cd
            left outer join com_dept cd
            on pd.dept_cd = cd.dept_cd
            where cd.dept_cd = u.dept_cd
            and pd.process_no = #{processCd}
        )
        </if>
        <if test= "plantCd != null and !plantCd.equals('')">
        	<choose>
				<when test = "plantCd == @com.she.utils.ConstVal@PLANT_CD_10">
					and u.plant_cd in ('${@com.she.utils.ConstVal@PLANT_CD_05}', '${@com.she.utils.ConstVal@PLANT_CD_09}', '${@com.she.utils.ConstVal@PLANT_CD_10}')
				</when>
				<otherwise>
					and u.plant_cd = #{plantCd}
				</otherwise>
			</choose>
        </if>
        <if test= "userId != null and !userId.equals('')">
        and u.user_id like '%' + #{userId} + '%'
        </if>
        <if test= "userNm != null and !userNm.equals('')">
        and upper(u.user_nm) like '%'+upper(#{userNm})+'%'
        </if>
        <if test= "useYn != null and !useYn.equals('')">
            and u.use_yn = #{useYn}
        </if>
        <if test= "dutyCd != null and !dutyCd.equals('')">
            and u.duty_cd = #{dutyCd}
        </if>
        <if test= "plantCds != null and plantCds.length > 0">
            and u.plant_cd in
            <foreach collection= "plantCds" item= "plantCd" separator= "," open= "(" close= ")" >
                #{plantCd}
            </foreach>
        </if>
        <if test= "retireYn != null and !retireYn.equals('N')">
            and (u.retire_ymd is null or u.retire_ymd = '')
        </if>
        order by plant.sort_order, depttree.dept_nm, u.user_nm
    </select>

    <select id= "getUser" resultType= "com.she.manage.model.User">
        /* UserMapper.getUser [User.xml] */
        select u.user_id, u.user_pwd_SHA, u.user_nm, d.dept_cd, d.dept_nm
            , u.com_sex_type_cd, case when u.com_sex_type_cd = '1' then '남자' else '여자' end as com_sex_type_nm
            , u.office_tel, u.phone_no, u.email, u.birth_ymd, u.entry_ymd
            , u.use_yn
            , u.create_user_id, cu.user_nm as create_user_nm, u.create_dt
            , u.update_user_id, uu.user_nm as update_user_nm, u.update_dt
            , u.plant_cd , plant.code_nm as plant_nm
            , u.duty_cd, duty.duty_nm
            , u.position_cd, position.position_nm
            , u.signature
            , FLOOR(CAST(DATEDIFF(day,u.birth_ymd,getdate()) AS integer)/365.2422) as age
        from com_user u
        inner join com_dept d
        on u.dept_cd = d.dept_cd
        left outer join com_code_master plant
        on u.plant_cd = plant.code
        and plant.code_group_cd = 'COM_PLANT_CD'
        left outer join com_hr_duty duty
        on u.duty_cd = duty.duty_cd
        left outer join com_hr_position position
        on u.position_cd = position.position_cd
        left outer join com_user cu
        on u.create_user_id = cu.user_id
        left outer join com_user uu
        on u.update_user_id = uu.user_id
        where 1 = 1
        and u.user_id = #{userId}
    </select>

    <!-- 협력업체 정보 -->
    <select id= "getVendorUser" resultType= "com.she.manage.model.VendorUser">
        /* UserMapper.getVendorUser [User.xml] */
        select   vendor_cd
               , origin_cd
               , vendor_nm
               , vendor_addr
               , factory_addr
               , biz_num
               , charger_dept
               , vendor_tel
               , vendor_fax
               , email
               , charger_nm
               , charger_tel
               , chief_nm
               , purchase_org_cd
               , purchase_org_nm
               , agency_nm
               , agency_tel
               , agency_charger
               , vendor_type_cd
               , vendor_att_cd
               , portal_use_yn
               , portal_id
               , portal_pwd
               , use_yn
               , sort_order
               , create_user_id
               , create_dt
               , update_user_id
               , update_dt
          from com_vendor_mst
         where portal_id = #{userId}
    </select>

    <select id= "login" resultType= "com.she.manage.model.User">
        /* UserMapper.login [User.xml] */
        select u.user_id,
        u.user_nm
        from com_user u
        where 1 = 1
        and u.user_id = #{userId}
        and u.user_pwd_SHA = #{userPwdSHA}
    </select>

    <!-- user 중복검사 -->
    <select id= "countUser" resultType= "int">
        /* UserMapper.countUser [User.xml] */
        select count(*)
        from com_user
        where user_id = #{userId}
    </select>

    <insert id= "createUser" parameterType= "com.she.manage.model.User">
        /* UserMapper.createUser [User.xml] */
        INSERT INTO com_user
        (user_id
        ,user_pwd
        ,user_pwd_SHA
        ,user_nm
        ,dept_cd
        ,com_sex_type_cd
        ,office_tel
        ,phone_no
        ,email
        ,birth_ymd
        ,entry_ymd
        ,use_yn
        ,duty_cd
        ,position_cd
        ,create_user_id
        ,signature
        ,create_dt)

        VALUES
        (#{userId}
        , #{userPwd}
        , #{userPwdSHA}
        , #{userNm}
        , #{deptCd}
        , #{comSexTypeCd}
        , #{officeTel}
        , #{phoneNo}
        , #{email}
        , #{birthYmd}
        , #{entryYmd}
        , #{useYn}
        , #{dutyCd}
        , #{positionCd}
        , #{createUserId}
        , #{signature}
        ,getdate())

    </insert>

    <!-- 즐겨찾기 목록 조회 -->
    <select id= "getUserFavorites" resultType= "com.she.common.model.Menu">
        /* UserMapper.getUserFavorites [User.xml] */
        select
            cmf.user_id
            ,cmn.menu_id
            ,cmn.task_grp_cd
            ,cmn.menu_nm
            ,cmn.up_menu_id
            ,cmn.menu_lvl
            ,cmn.front_end_url
            ,cmn.sort_order
            ,cmn.use_yn
            ,cmn.create_user_id
            ,cmn.create_dt
            ,cmn.update_user_id
            ,cmn.update_dt
            from com_user_favorites cmf
            inner join dbo.LANG_MENU(#{defaultParam.lang}) cmn
            on cmn.menu_id = cmf.menu_id
        where
        cmf.user_id = #{userId}
        <if test= "menuId != null and !menuId.equals('')">
            and cmf.menu_id = #{menuId}
        </if>
        <if test= "taskGrpCd != null and !taskGrpCd.equals('')">
            and cmn.task_grp_cd = #{taskGrpCd}
        </if>
        and cmn.menu_nm like '%' + #{menuNm} + '%'
        <if test= "upMenuId != null and !upMenuId.equals('')">
            and cmn.up_menu_id = #{upMenuId}
        </if>
        order by sort_order
    </select>
    <insert id= "createUserFavorites" parameterType= "hashmap">
        /* UserMapper.createUserFavorites [User.xml] */
        INSERT INTO com_user_favorites
        (user_id
        ,menu_id)
        VALUES
        (#{userId}
        , #{menuId})
    </insert>


    <delete id= "deleteUserFavorites" parameterType= "hashmap">
        /* UserMapper.deleteUserFavorites [User.xml] */
        delete
        from com_user_favorites
        where user_id = #{userId}
        and menu_id = #{menuId}
    </delete>

    <update id= "updateUser" parameterType= "com.she.manage.model.User">
        /* UserMapper.updateUser [User.xml] */
        update com_user
        set user_nm = #{userNm}
        ,dept_cd = #{deptCd}
        ,com_sex_type_cd = #{comSexTypeCd}
        ,office_tel = #{officeTel}
        ,phone_no = #{phoneNo}
        ,email = #{email}
        ,birth_ymd = #{birthYmd}
        ,entry_ymd = #{entryYmd}
        ,use_yn = #{useYn}
        ,duty_cd = #{dutyCd}
        ,position_cd = #{positionCd}
        ,update_user_id = #{updateUserId}
        ,update_dt = getdate()
        where 1 = 1
        and user_id = #{userId}
    </update>

    <update id= "passwordChange" parameterType= "com.she.manage.model.User">
        /* UserMapper.passwordChange [User.xml] */
        update com_user
        set user_pwd = #{userPwd}
        , user_pwd_SHA = #{userPwd}
        , user_pwd_udt = getdate()
        where 1 = 1
        and user_id = #{userId}
    </update>

    <select id="getDutyUserInfo" resultType="com.she.manage.model.User">
        /* UserMapper.getDutyUserInfo [User.xml] */
        select *
        from com_user
        where dept_cd in (select dept_cd
                          from com_dept
                          where plant_cd = #{plantCd}
                          <if test= "deptNms != null and deptNms.length > 0">
                              and dept_nm in
                              <foreach collection= "deptNms" item= "deptNm" separator= "," open= "(" close= ")" >
                              #{deptNm}
                              </foreach>
                          </if>
                          )
        <if test= "dutyCds != null and dutyCds.length > 0">
            and duty_cd in
            <foreach collection= "dutyCds" item= "dutyCd" separator= "," open= "(" close= ")" >
            #{dutyCd}
            </foreach>
        </if>
        <if test= "userNms != null and userNms.length > 0">
            and user_nm in
            <foreach collection= "userNms" item= "userNm" separator= "," open= "(" close= ")" >
            #{userNm}
            </foreach>
        </if>
    </select>

    <select id="getChmMaliReceiveUserInfo" resultType="com.she.manage.model.User">
        /* UserMapper.getChmMaliReceiveUserInfo [User.xml] */
        select u.*
        from com_user u
        inner join com_code_master cm on u.user_id=cm.code_nm and cm.code_group_cd='CHM_MGR_ID' and cm.use_yn='Y' and u.use_yn = 'Y'
        inner join com_dept cd on u.dept_cd = cd.dept_cd
        where 1=1
        <if test= "plantCd != null and !plantCd.equals('')">
        and u.plant_cd = #{plantCd}
        </if>
    </select>

    <select id="getUserFavoriteMenus" resultType="com.she.common.model.Menu">
        /* UserMapper.getUserFavoriteMenus [User.xml] */
        with tree_menu as (
        select menu_id
        , menu_nm
        , up_menu_id
        , front_end_url as menu_url
        , icon
        , convert(varchar(255), icon) path_icon
        , convert(varchar(255), '/' + right(front_end_url, charindex('/', reverse(front_end_url) + '_') - 1)) as front_end_url
        from dbo.LANG_MENU(#{defaultParam.lang}) as langMenu
        where 1 = 1
        and up_menu_id is null
        and use_yn = 'Y'
        union all
        select com_menu.menu_id
        , com_menu.menu_nm
        , com_menu.up_menu_id
        , com_menu.front_end_url as menu_url
        , com_menu.icon
        , convert(varchar(255), convert(nvarchar(255),menu.path_icon)) as path_icon
        , convert(varchar(255), (convert(nvarchar(255), menu.front_end_url) + '/' + convert(nvarchar(255), right(com_menu.front_end_url, charindex('/', reverse(com_menu.front_end_url) + '/') - 1)))) as front_end_url
        from tree_menu menu
        inner join dbo.LANG_MENU(#{defaultParam.lang}) com_menu
        on menu.menu_id = com_menu.up_menu_id
        where 1= 1
        and com_menu.use_yn = 'Y'
        )
        select menu.menu_id
        , menu.menu_nm
        , menu.front_end_url
        , menu.path_icon as icon
        ,'Y' as access_yn
        from tree_menu menu
        inner join com_user_favorites favo
        on menu.menu_id = favo.menu_id
        where 1 = 1
        <if test= "userId != null and !userId.equals('')">
        and favo.user_id = #{userId}
        </if>
        order by up_menu_id, menu_nm
    </select>

    <update id="updateUserSignature" parameterType= "com.she.common.model.AttachFile">
        /* UserMapper.updateUserSignature [User.xml] */
        update com_user
        set signature = #{signature}
        where 1 = 1
        and user_id = #{userId}
    </update>

    <select id="fileSearch" resultType="com.she.common.model.AttachFile">
    /* UserMapper.fileSearch [User.xml] */
        SELECT
            attach_file_id,
            file_no,
            task_class_nm,
            task_key,
            file_org_nm,
            file_save_nm,
            file_ext,
            file_size,
            file_path,
            file_down_path,
            content_type,
            picture_explan,
            encrypt_yn,
            create_user_id,
            create_dt
        FROM com_attach_file
        WHERE task_key = #{taskKey}
    </select>
    
    <select id="getTeamLeader" resultType="com.she.manage.model.User">
        /* UserMapper.getTeamLeader [User.xml] */
        select  u.user_id
                , u.user_nm
                , d.dept_cd
                , d.dept_nm
                , u.office_tel
                , u.phone_no
                , u.email
                , u.use_yn
                , u.login_id
                , u.plant_cd
                , u.duty_cd
                , u.position_cd
                , u.dept_cd_hr
                , dhr.dept_nm as dept_nm_hr
        from com_user u
        inner join com_dept d
        on u.dept_cd = d.dept_cd
        inner join com_dept dhr
        on u.dept_cd_hr = dhr.dept_cd
        where u.dept_cd = #{deptCd}
        and u.duty_cd = '21'
        and u.use_yn = 'Y'
    </select>
    
    <select id="getEhrHistory" resultType="com.she.manage.model.EhrHistory">
    /* UserMapper.getEhrHistory [User.xml] */
    	SELECT 
	      	ewi.plant_cd
			,ewi.user_id
			,ewi.work_no
			,ewi.appo_cd
			,ewi.appo_ymd
			,ewi.end_ymd
			,ewi.appo_nm
			,ewi.dept_cd
			,d.dept_nm
			,ewi.position_cd
			,ewi.duty_cd
			,ewi.work_situ_cd
			,ewi.history
			,ewi.last_yn
      from ehr_work_info ewi
      inner join com_dept d
      on ewi.dept_cd = d.dept_cd
      where 1 = 1
      and user_id = #{userId}
    </select>
    
    <select id="getEduHistory" resultType="com.she.manage.model.EduHistory">
    /* UserMapper.getEduHistory [User.xml] */
    	SELECT  sem.saf_edu_mst_no 
		      , sem.saf_edu_course_no 
		      , sem.year 
		      , saet.code_nm as etc_pe_nm
		      , saec.code_nm as etc_de_nm
		      , sem.edu_nm 
		      , sec.edu_course_nm 
		      , sem.edu_s_ymd 
		      , sem.edu_e_ymd 
		      , CONCAT(sem.edu_s_ymd,' ~ ',sem.edu_e_ymd ) as prd 
		      , sedp.complet_ymd 
		      , sedp.complet_yn
              , saea.code_nm as edu_att_nm
              , saem.code_nm as edu_method_nm
	      from saf_edu_mst sem 
	      inner join saf_edu_dtl_psn sedp 
	      on sem.saf_edu_mst_no = sedp.saf_edu_mst_no 
	      inner join saf_edu_course sec 
	      on sem.saf_edu_course_no = sec.saf_edu_course_no 
	      inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_TYPE') saet
	      on sem.edu_type_cd  = saet.code  
	      inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') saec
	      on sec.edu_type_cd  = saec.code 
          inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') saea 
          on sec.edu_att_cd = saea.code
          inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_METHOD') saem 
          on sem.edu_method_cd = saem.code 
	      where sedp.user_id = #{userId}
	      order by sem.edu_s_ymd desc
    </select>
    
    <select id="getHeaHistory" resultType="com.she.manage.model.HeaHistory">
    /* UserMapper.getHeaHistory [User.xml] */
    SELECT  hcp.hea_checkup_plan_no 
		, hcp.hea_checkup_plan_nm 
		, hcr.hea_checked_ymd 
		, hcc.code_nm as hcc_nm
		, (SELECT hsh.suspect_yn
			from hea_suspect_hst hsh 
			where  hcr.hea_checkup_plan_no = hsh.hea_checkup_plan_no 
			and hsh.user_id = #{userId}) as suspect_yn
		from hea_checkup_result hcr 
		inner join hea_checkup_plan hcp 
		on hcr.hea_checkup_plan_no = hcp.hea_checkup_plan_no 
		inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'HEA_CHECKUP_CLASS') hcc
		on hcp.hea_checkup_class_cd  = hcc.code  
		where 1 = 1
		and hcr.user_id = #{userId}
    </select>
    
    <select id="getSafHistory" resultType="com.she.manage.model.SafHistory">
    /* UserMapper.getSafHistory [User.xml] */
    SELECT  sa.saf_accident_no 
			, sa.accident_title 
			, sa.area 
			, sa.accident_ymd 
			, sa.accident_lvl_cd 
			, sa.accident_att_cd 
			, sa.accident_step_cd 
			, saa.code_nm as accident_att_nm
			, CONCAT(sav.victim_nm, '외 ', (SELECT count(*) from saf_accident_victim vv where sa.saf_accident_no = vv.saf_accident_no), '명') as victim_nm
			, case when sa.invest_yn = 'Y' then '해당' else '미해당' end as invest_yn 
		from saf_accident sa
		inner join saf_accident_victim sav
		on sav.saf_accident_no = sa.saf_accident_no 
		inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_ACCIDENT_ATT') saa
		on sa.accident_att_cd  = saa.code
		where 1 = 1
		and victim_user_id = 'manager'
    </select>

</mapper>