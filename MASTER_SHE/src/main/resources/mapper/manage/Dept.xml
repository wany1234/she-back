<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.manage.mapper.DeptMapper">
    <select id= "getDepts" resultType= "com.she.manage.model.Dept">
    /* Dept.getDepts*/
        select d.dept_cd, d.dept_nm
            , d.create_user_id, cu.user_nm as create_user_nm, d.create_dt
            , d.update_user_id, uu.user_nm as update_user_nm, d.update_dt
            , cu.plant_cd , plant.code_nm as plant_nm
            , d.dept_lvl
            , deptLvl.code_nm as dept_lvl_nm
            , d.use_yn
        from com_dept d
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'com_dept_LVL') deptLvl
         on d.dept_lvl = deptLvl.code
        inner join com_user cu
         on d.create_user_id = cu.user_id
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on plant.code = cu.plant_cd
        left outer join com_user uu
         on d.update_user_id = uu.user_id
        where 1=1
        <if test= "processCd != null and !''.equals(processCd)">
        and exists (
            select 1
            from com_process_dept pd
            where pd.dept_cd = d.dept_cd
            and pd.process_cd = #{processCd}
        )
        </if>
        <if test= "plantCd != null and plantCd != ''">
        and cu.plant_cd = #{plantCd}
        </if>
        <if test= "deptCd != null and deptCd != ''">
        and d.dept_cd = #{deptCd}
        </if>
        <if test= "deptNm != null and deptNm != ''">
        and upper(d.dept_nm) like '%'+upper(#{deptNm})+'%'
        </if>
        <if test= "useYn != null and useYn != ''">
        and d.use_yn = #{useYn}
        </if>
        order by d.dept_nm
    </select>
    

    <select id= "getDept" resultType= "com.she.manage.model.Dept">
       /*  DeptMapper.getDept [Dept.xml] */
        select d.dept_cd, d.dept_nm
            , d.p_dept_cd, upperDept.dept_nm as p_dept_nm
            , d.create_user_id, cu.user_nm as create_user_nm, d.create_dt
            , d.update_user_id, uu.user_nm as update_user_nm, d.update_dt
            , d.dept_lvl
            , d.use_yn
            , case when d.use_yn = 'Y' then '사용'
                   else '미사용'
              end as use_yn_nm
        from com_dept d
        left outer join com_dept upperDept
         on d.p_dept_cd = upperDept.dept_cd
        inner join com_user cu
         on d.create_user_id = cu.user_id
        left outer join com_user uu
         on d.update_user_id = uu.user_id
        where d.dept_cd = #{deptCd}
    </select>

    <select id= "getTreeDepts" resultType= "com.she.manage.model.Dept">
       /*  DeptMapper.getTreeDepts [Dept.xml] */
        with depttree as (
            select cd.dept_cd
                ,cd.dept_nm
                ,cd.p_dept_cd
                ,cd.dept_lvl
                ,cd.use_yn
            from com_dept cd
            where 1=1
            <choose>
                <when test= "pdeptCd != null and pdeptCd != ''">
                    and cd.dept_cd = #{pdeptCd}
                </when>
                <otherwise>
                    and isnull(cd.p_dept_cd, '') = ''
                </otherwise>
            </choose>
           <if test= "useYn != null and useYn != ''">
           and cd.use_yn = #{useYn}
           </if>
            union all
            select cdd.dept_cd
                ,cdd.dept_nm
                ,cdd.p_dept_cd
                ,cdd.dept_lvl
                ,cdd.use_yn
            from com_dept cdd
            inner join depttree
            on cdd.p_dept_cd = depttree.dept_cd
            where 1=1
           <if test= "useYn != null and useYn != ''">
           and cdd.use_yn = #{useYn}
           </if>
        ),
        processlist as (
            select dept_cd
                , stuff((select ', ' + scp.process_nm
                         from com_process_dept scpd
                         inner join com_process scp
                         on scpd.process_cd = scp.process_cd
                         where scpd.dept_cd = cpd.dept_cd
                         for xml path('')),1,1,'') as process_list
                , stuff((select ',' + scp.process_cd
                         from com_process_dept scpd
                         inner join com_process scp
                         on scpd.process_cd = scp.process_cd
                         where scpd.dept_cd = cpd.dept_cd
                         for xml path('')),1,1,'') as process_cd_list
            from com_process_dept cpd
            inner join com_process cp
            on cpd.process_cd = cp.process_cd
            group by dept_cd
        )
        select depttree.dept_cd
            ,depttree.dept_cd as id
            ,depttree.dept_nm
            ,depttree.dept_nm as label
            ,depttree.p_dept_cd
            ,depttree.dept_lvl
            ,deptLvl.code_nm as dept_lvl_nm
            ,depttree.use_yn
            ,case when depttree.use_yn = 'Y' then '사용'
                else '미사용'
             end as use_yn_nm
            ,processlist.process_list
            ,processlist.process_cd_list
        from depttree
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'com_dept_LVL') deptLvl
         on dept_lvl = deptLvl.code
        left outer join processlist
         on depttree.dept_cd = processlist.dept_cd
        where 1=1
        <if test= "deptCd != null and deptCd != ''">
        and upper(depttree.dept_cd) = upper(#{deptCd})
        </if>
        <if test= "deptNm != null and deptNm != ''">
        and upper(depttree.dept_nm) like '%'+upper(#{deptNm})+'%'
        </if>
        order by p_dept_cd, depttree.dept_nm
    </select>
    
    <select id= "getTreeDeptsForMobile" resultType= "com.she.manage.model.Dept">
        with depttree as (
            select cd.dept_cd
                ,cd.dept_nm
                ,cd.p_dept_cd
                ,cd.dept_lvl
                ,cd.use_yn
            from com_dept cd
            where 1=1
            <choose>
                <when test= "pdeptCd != null and pdeptCd != ''">
                    and cd.dept_cd = #{pdeptCd}
                </when>
                <otherwise>
                    and isnull(cd.p_dept_cd, '') = ''
                </otherwise>
            </choose>
           <if test= "useYn != null and useYn != ''">
           and cd.use_yn = #{useYn}
           </if>
            union all
            select cdd.dept_cd
                ,cdd.dept_nm
                ,cdd.p_dept_cd
                ,cdd.dept_lvl
                ,cdd.use_yn
            from com_dept cdd
            inner join depttree
            on cdd.p_dept_cd = depttree.dept_cd
        ),
        processlist as (
            select dept_cd
                , stuff((select ', ' + scp.process_nm
                         from com_process_dept scpd
                         inner join com_process scp
                         on scpd.process_cd = scp.process_cd
                         where scpd.dept_cd = cpd.dept_cd
                         for xml path('')),1,1,'') as process_list
                , stuff((select ',' + scp.process_cd
                         from com_process_dept scpd
                         inner join com_process scp
                         on scpd.process_cd = scp.process_cd
                         where scpd.dept_cd = cpd.dept_cd
                         for xml path('')),1,1,'') as process_cd_list
            from com_process_dept cpd
            inner join com_process cp
            on cpd.process_cd = cp.process_cd
            group by dept_cd
        )
        select depttree.dept_cd as id
            ,depttree.dept_nm as label
            ,depttree.p_dept_cd
            ,depttree.dept_lvl
            ,deptLvl.code_nm as dept_lvl_nm
            ,depttree.use_yn
            ,case when depttree.use_yn = 'Y' then '사용'
                else '미사용'
             end as use_yn_nm
            ,processlist.process_list
            ,processlist.process_cd_list
        from depttree
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'com_dept_LVL') deptLvl
         on dept_lvl = deptLvl.code
        left outer join processlist
         on depttree.dept_cd = processlist.dept_cd
        where 1=1
        <if test= "deptCd != null and deptCd != ''">
        and upper(depttree.dept_cd) = upper(#{deptCd})
        </if>
        <if test= "deptNm != null and deptNm != ''">
        and upper(depttree.dept_nm) like '%'+upper(#{deptNm})+'%'
        </if>
    </select>

    <insert id= "createDept" parameterType= "com.she.manage.model.Dept">
    /* DeptMapper.createDept [Dept.xml] */
        insert into com_dept
        (
            dept_cd
            , dept_nm
            , p_dept_cd
            , dept_lvl
            , create_user_id
            , use_yn
            , create_dt
        )
        values
        (
            #{deptCd}
            , #{deptNm}
            , #{pdeptCd}
            , #{deptLvl}
            , #{createUserId}
            , #{useYn}
            , getdate()
        )
    </insert>

    <update id= "updateDept" parameterType= "com.she.manage.model.Dept">
        update com_dept
        set use_yn = #{useYn}
            , update_user_id = #{updateUserId}
            , dept_nm= #{deptNm}
            , update_dt = getdate()
        where dept_cd = #{keyValue}
    </update>

    <insert id= "createProcessDept">
        insert into com_process_dept
        (
            dept_cd
            , process_cd
            , create_user_id
            , create_dt
        )
        values
        (
            #{deptCd}
            , #{processCd}
            , #{createUserId}
            , getdate()
        )
    </insert>

    <delete id= "deleteProcessDept">
        delete com_process_dept 
        where 1=1
        <if test= "deptCd != null and deptCd != ''">
        and dept_cd = #{deptCd}
        </if>
        <if test= "processCd != null and processCd != ''">
        and process_cd = #{processCd}
        </if>
    </delete>
    
    <!--dept 중복검사  -->
    <select id="countDept" resultType="int">
        /*DeptMapper.countDept [Dept.xml]*/
        select count(*)
        from com_dept
        where dept_cd=#{deptCd}
    </select>
</mapper>