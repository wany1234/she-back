<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.rsa.assess.mapper.AssessResultMapper">

    <insert id= "createJobRiskBook" parameterType= "com.she.rsa.model.AssessResult">
        <selectKey keyProperty= "riskBookNo" resultType= "int" order= "BEFORE">
            select next value for seq_rsa_risk_book_no as riskBookNo
          </selectKey>
        insert into rsa_job_risk_book
            (risk_book_no
            ,assess_type_nm
            ,assess_plan_no
            ,dept_cd
            ,job_id
            ,job_step_id
            ,risk_hazard_no
            ,process_cd
            ,chem_prod_no
            ,chem_no
            ,scenario_no
            ,create_user_id
            ,create_dt)
        values
            (#{riskBookNo}
            ,#{assessTypeNm}
            ,#{assessPlanNo}
            ,#{deptCd}
            ,#{jobId}
            ,#{jobStepId}
            ,#{riskHazardNo}
            ,#{processCd}
            ,#{chemProdNo}
            ,#{chemNo}
            ,#{scenarioNo}
            ,#{createUserId}
            ,getDate())
    </insert>
    
    <!-- 위험성평가 Jsa 목록 조회 -->
    <select id= "getAssessResultsJsa" resultType= "com.she.rsa.model.AssessResult">
        /* AssessResultMapper.getAssessResultsJsa [AssessResult.xml] */
        select rpaj.assess_plan_no
        , cd.dept_nm
        , rj.dept_cd
        , rj.process_cd
        , cp.process_nm
        , rj.job_id
        , rj.job_cd
        , rj.job_nm
        , rj.job_revno
        , rj.plant_cd
        , rjs.job_step_no
        , rjs.job_step_nm
        , rjs.job_step_id
        , rjr.risk_hazard_no
        , rrh.risk_hazard_nm
        , rrh.risk_hazard_desc
        , pRrh.risk_hazard_no as p_risk_hazard_no
        , pRrh.risk_hazard_nm as p_risk_hazard_nm
        , case when rkj.assess_date is null then 'N'
        else 'Y' end as assess_yn
        , cRrm.risk_size as current_risk_size
        , cRrm.frequency_size as current_frequency_size
        , cRrm.strong_size as current_strong_size
        , rkj.improve
        , aRrm.risk_size as after_risk_size
        , aRrm.frequency_size as after_frequency_size
        , aRrm.strong_size as after_strong_size
        , convert(char(10), rkj.assess_date, 23) as assess_date
        --, rk.dept_cd
        , rkj.assess_plan_no
        , rkj.current_risk_no
        , rkj.after_risk_no
        , rkj. eval_desc
        , rkj.user_id as assess_user_id
        , cu.user_nm as assess_user_nm
        , cu.dept_cd as assess_dept_cd
        , acd.dept_nm as assess_dept_nm
        , case
        when rjrb.risk_book_no is null then 'N'
        else 'Y'
        end as job_risk_book_yn
        , rjrb.risk_book_no
        , sia.impr_step_cd
        , isnull(ccm.code_nm, '미요청') as impr_step_nm
        , rjrb.create_user_id
        , rjrdCu.user_nm as create_user_nm
        , convert(char(10), rjrb.create_dt, 23) as create_dt
        , (select code_nm
        from dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'RSA_ASSESS_TYPE')
        where code = 'AT002') as assess_type_nm
        from rsa_process_assess_job rpaj
        inner join rsa_job rj
        on rpaj.job_id = rj.job_id
        inner join rsa_job_step rjs
        on rj.job_id = rjs.job_id
        inner join rsa_job_riskhazard rjr
        on rjs.job_step_id = rjr.job_step_id
        inner join rsa_risk_hazard rrh
        on rjr.risk_hazard_no = rrh.risk_hazard_no
        left outer join rsa_risk_hazard pRrh
        on rrh.p_risk_hazard_no = pRrh.risk_hazard_no
        inner join rsa_kras_jsa rkj
        on rjs.job_id = rkj.job_id
        and rjs.job_step_id = rkj.job_step_id
        and rjr.risk_hazard_no = rkj.risk_hazard_no
        and rpaj.assess_plan_no = rkj.assess_plan_no
        left outer join com_process cp
        on rj.process_cd = cp.process_cd
        left outer join rsa_risk_matrix cRrm
        on rkj.current_risk_no = cRrm.risk_no
        left outer join rsa_risk_matrix aRrm
        on rkj.after_risk_no = aRrm.risk_no
        left outer join com_user cu
        on rkj.user_id = cu.user_id
        left outer join com_dept acd
        on cu.dept_cd = acd.dept_cd
        left outer join rsa_job_risk_book rjrb
        on rpaj.assess_plan_no = rjrb.assess_plan_no
        and rpaj.job_id = rjrb.job_id
        and rjr.risk_hazard_no = rjrb.risk_hazard_no
        and rjs.job_step_id = rjrb.job_step_id
        left outer join saf_impr_act sia
        on rjrb.risk_book_no = sia.ref_table_id
        and sia.impr_class_cd = 'ICL05'
        and sia.del_yn != 'Y'
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_STEP') ccm
        on sia.impr_step_cd = ccm.code
        left outer join com_user rjrdCu
        on rjrb.create_user_id = rjrdCu.user_id
        left outer join com_dept cd
        on rj.dept_cd = cd.dept_cd
        where 1=1
        and rpaj.assess_plan_no = #{assessPlanNo}
        <if test= "searchFlag != null and !searchFlag.equals('')">
            and rkj.assess_date is not null
        </if>
        <if test= "processCd != null and !processCd.equals('')">
            and rj.process_cd = #{processCd}
        </if>
        <if test= "riskBookCheck != null and !riskBookCheck.equals('')">
            and rjrb.risk_book_no is not null
        </if>
        order by rpaj.assess_plan_no, rjs.job_id, rjs.job_step_no
    </select>
    
  
</mapper>