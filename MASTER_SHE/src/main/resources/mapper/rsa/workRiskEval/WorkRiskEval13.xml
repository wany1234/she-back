<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.rsa.workRiskEval.mapper.WorkRiskEval13Mapper">

    <!-- 작업위험성평가 부서공정별 단위작업 목록 조회 -->
    <select id= "getworkRiskEval13Lists" resultType= "com.she.rsa.model.WorkRiskEval13UnitWork">
    /* WorkRiskEval13Mapper.getworkRiskEval13Lists [WorkRiskEval13.xml] */
        select a.plant_cd                       -- 사업장코드
             , e.code_nm as plant_nm            -- 사업장명
             , a.dept_cd                        -- 부서코드
             , dbo.GET_DEPT_NM(a.dept_cd) as dept_nm -- 부서명
             , d.process_nm as line_prcs_nm     -- 라인
             , c.process_nm  as grand_prcs_nm   -- 대공정
             , b.process_nm  as process_nm      -- 주요설비명
             , a.process_cd                     -- 주요설비코드
             , a.unit_work_cd                   -- 작업코드
             , a.unit_work_nm                   -- 작업명
             , a.saf_acdnt_cnt                  -- 안전사고이력
             , a.use_yn                         -- 사용여부
             , a.sort_order                     -- 정렬순서 
        from rsa_dept_prcs_unit_work a
        inner join rsa_process b on a.process_cd = b.process_cd and b.prcs_lvl_cd = '3' and b.use_yn = 'Y'
        inner join rsa_process c on b.p_process_cd = c.process_cd and c.prcs_lvl_cd = '2' and b.use_yn = 'Y'
        inner join rsa_process d on c.p_process_cd = d.process_cd and d.prcs_lvl_cd = '1' and b.use_yn = 'Y'
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') e on a.plant_cd = e.code
        where 1=1
           <if test= "plantCd != null and !plantCd.equals('')">
             and a.plant_cd = #{plantCd}
           </if>    
           <if test= "deptCd != null and !deptCd.equals('')">
             and a.dept_cd = #{deptCd}
           </if>
           <if test= "processCd != null and !processCd.equals('')">
             and a.process_cd = #{processCd}
           </if>
           <if test= "useYn != null and !useYn.equals('')">
             and a.use_yn = #{useYn}
           </if>
           <if test= "unitWorkNm != null and !unitWorkNm.equals('')">
             and a.unit_work_nm like '%' + #{unitWorkNm} + '%'
           </if>
        order by a.sort_order, a.unit_work_nm
    </select>
    
    <!-- 작업위험성평가 공정검색팝업 공정 목록 조회 -->
    <select id= "getworkRiskEval13ProcessLists" resultType= "com.she.rsa.model.WorkRiskEval13UnitWork">
    /* WorkRiskEval13Mapper.getworkRiskEval13ProcessLists [WorkRiskEval13.xml] */
         select a.plant_cd 
              , b.code_nm as plant_nm
              , a.process_cd               
              , d.process_nm as line_prcs_nm
              , e.process_nm as grand_prcs_nm
              , a.process_nm
              , e.process_nm + ' / ' + d.process_nm + ' / ' + a.process_nm  as process_all_nm 
              , a.prcs_lvl_cd   
              , c.code_nm as prcs_lvl_nm
         from rsa_process a
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') b on a.plant_cd = b.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PRCS_LVL') c on a.prcs_lvl_cd = c.code
         inner join rsa_process d on d.prcs_lvl_cd = '2' and d.use_yn = 'Y' and d.process_cd = a.p_process_cd 
         inner join rsa_process e on e.prcs_lvl_cd = '1' and e.use_yn = 'Y' and e.process_cd = d.p_process_cd
         where 1=1
           <if test= "plantCd != null and !plantCd.equals('')">
             and a.plant_cd = #{plantCd}
           </if>    
           <if test= "prcsLvlCd != null and !prcsLvlCd.equals('')">
             and a.prcs_lvl_cd = #{prcsLvlCd}
           </if>
           <if test= "processNm != null and !processNm.equals('')">
             and a.process_nm like '%' + #{processNm} + '%'
           </if>
             and a.use_yn = 'Y'
        order by a.sort_order, a.process_nm
    </select>
    
    <!-- 작업위험성평가 단위작업검색팝업 단위작업 목록 조회 -->
    <select id= "getworkRiskEval13UnitLists" resultType= "com.she.rsa.model.WorkRiskEval13UnitWork">
    /* WorkRiskEval13Mapper.getworkRiskEval13UnitLists [WorkRiskEval13.xml] */
          select a.plant_cd 
               , b.code_nm as plant_nm
               , a.unit_work_cd 
               , a.unit_work_nm 
               , a.use_yn 
               , a.sort_order 
          from rsa_unit_work a
          inner join dbo.LANG_CODE_MASTER('kr', 'COM_PLANT_CD') b on a.plant_cd = b.code
          where 1=1
           <if test= "plantCd != null and !plantCd.equals('')">
             and a.plant_cd = #{plantCd}
           </if>
           <if test= "unitWorkNm != null and !unitWorkNm.equals('')">
             and a.unit_work_nm like '%' + #{unitWorkNm} + '%'
           </if>
        order by a.sort_order, a.unit_work_nm
    </select>
    
    <!-- 작업위험성평가 부서공정별 상세 조회 -->
    <select id= "getWorkRiskEval13Info" resultType= "com.she.rsa.model.WorkRiskEval13UnitWork">
        /* WorkRiskEval13Mapper.getWorkRiskEval13Info [WorkRiskEval13.xml] */
        select a.plant_cd
             , a.dept_cd
             , a.process_cd  
             , b.process_nm             
             , a.unit_work_cd
             , a.unit_work_nm
             , a.saf_acdnt_cnt
             , a.remark
             , a.sort_order
             , a.use_yn
             , d.process_nm + ' / ' + c.process_nm + ' / ' + b.process_nm  as process_all_nm 
       from rsa_dept_prcs_unit_work a
       inner join rsa_process b on a.plant_cd = b.plant_cd and a.process_cd = b.process_cd and b.prcs_lvl_cd = 3
       inner join rsa_process c on b.p_process_cd = c.process_cd and c.prcs_lvl_cd = 2
       inner join rsa_process d on c.p_process_cd = d.process_cd and d.prcs_lvl_cd = 1
       where 1=1
        and a.plant_cd      = #{plantCd}
        and a.dept_cd       = #{deptCd}
        and a.process_cd    = #{processCd}
        and a.unit_work_cd  = #{unitWorkCd}
    </select>
    
    <!-- 작업위험성평가 부서공정 등록 -->
    <insert id ="createWorkRiskEval13" parameterType= "com.she.rsa.model.WorkRiskEval13UnitWork">
    /* WorkRiskEval13Mapper.createWorkRiskEval13 [WorkRiskEval13.xml] */
       insert into rsa_dept_prcs_unit_work
        (
             plant_cd
           , dept_cd
           , process_cd
           , unit_work_cd
           , unit_work_nm
           , saf_acdnt_cnt
           , remark
           , sort_order
           , use_yn
           , create_user_id
           , create_dt
           , update_user_id
           , update_dt
        )
        values
        (
             #{plantCd}
           , #{deptCd}
           , #{processCd}
           , #{unitWorkCd}
           , #{unitWorkNm}
           , #{safAcdntCnt}
           , #{remark}
           , #{sortOrder}
           , #{useYn}
           , #{createUserId}
           , getdate()
           , #{updateUserId}
           , getdate()
        )
    </insert>
    
    <!-- 작업위험성평가 부서공정 수정 -->
    <update id= "updateWorkRiskEval13" parameterType= "com.she.rsa.model.WorkRiskEval13UnitWork">
        /* WorkRiskEval13Mapper.updateWorkRiskEval13 [WorkRiskEval13.xml] */
        update rsa_dept_prcs_unit_work
          set  unit_work_nm     = #{unitWorkNm}
             , saf_acdnt_cnt    = #{safAcdntCnt}
             , remark           = #{remark}
             , sort_order       = #{sortOrder}
             , use_yn           = #{useYn}
             , update_user_id   = #{updateUserId}
             , update_dt        = getdate()
          where plant_cd        = #{plantCd}
            and dept_cd         = #{deptCd}
            and process_cd      = #{processCd}
            and unit_work_cd    = #{unitWorkCd}
    </update>
    
    <!-- 작업위험성평가 부서공정별 세부작업 목록 조회 -->
    <select id= "getWorkRiskEval13DtlUnitWorkList" resultType= "com.she.rsa.model.WorkRiskEval13DtlUnitWork">
        /* WorkRiskEval13Mapper.getWorkRiskEval13DtlUnitWorkList [WorkRiskEval13.xml] */
        select a.plant_cd
             , a.dept_cd
             , a.process_cd             
             , a.unit_work_cd
             , a.dtl_wk_seq
             , a.dtl_wk_nm
             , a.remark
             , a.sort_order
             , a.use_yn
       from rsa_dept_prcs_unit_work_dtl_wk a
       where 1=1
        and a.plant_cd      = #{plantCd}
        and a.dept_cd       = #{deptCd}
        and a.process_cd    = #{processCd}
        and a.unit_work_cd  = #{unitWorkCd}
       order by a.sort_order
    </select>
    
    <!-- 작업위험성평가 부서공정 세부작업 등록 -->
    <insert id ="createWorkRiskEval13DtlUnitWork" parameterType= "com.she.rsa.model.WorkRiskEval13DtlUnitWork">
    /* WorkRiskEval13Mapper.createWorkRiskEval13DtlUnitWork [WorkRiskEval13.xml] */
        <selectKey keyProperty= "dtlWkSeq" resultType= "int" order= "BEFORE">
            SELECT ISNULL(MAX(dtl_wk_seq),0)+1 AS dtl_wk_seq
              FROM rsa_dept_prcs_unit_work_dtl_wk
             WHERE plant_cd     = #{plantCd}
               AND dept_cd      = #{deptCd}
               AND process_cd   = #{processCd}
               AND unit_work_cd = #{unitWorkCd}
        </selectKey>
       insert into rsa_dept_prcs_unit_work_dtl_wk
        (
             plant_cd
           , dept_cd
           , process_cd
           , unit_work_cd           
           , dtl_wk_seq
           , dtl_wk_nm           
           , remark
           , sort_order
           , use_yn
           , create_user_id
           , create_dt
           , update_user_id
           , update_dt
        )
        values
        (
             #{plantCd}
           , #{deptCd}
           , #{processCd}
           , #{unitWorkCd}           
           , #{dtlWkSeq}
           , #{dtlWkNm}           
           , #{remark}
           , #{sortOrder}
           , #{useYn}
           , #{createUserId}
           , getdate()
           , #{updateUserId}
           , getdate()
        )
    </insert>
    
    <!-- 작업위험성평가 부서공정 세부작업 수정 -->
    <update id ="updateWorkRiskEval13DtlUnitWork" parameterType= "com.she.rsa.model.WorkRiskEval13DtlUnitWork">
    /* WorkRiskEval13Mapper.updateWorkRiskEval13DtlUnitWork [WorkRiskEval13.xml] */
       update rsa_dept_prcs_unit_work_dtl_wk 
         set dtl_wk_nm      = #{dtlWkNm}      
           , remark         = #{remark}
           , sort_order     = #{sortOrder}
           , use_yn         = #{useYn}
           , update_user_id = #{updateUserId}
           , update_dt      = getdate()
       where plant_cd       = #{plantCd}
         and dept_cd        = #{deptCd}
         and process_cd     = #{processCd}
         and unit_work_cd   = #{unitWorkCd} 
         and dtl_wk_seq     = #{dtlWkSeq}
    </update>
</mapper>