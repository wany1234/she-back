<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.rsa.workRiskEval.mapper.WorkRiskEval10Mapper">

    <select id= "getworkRiskEval10Lists" resultType= "com.she.rsa.model.WorkRiskEval10DeptProcess">
       /* WorkRiskEval10Mapper.getworkRiskEval10Lists [WorkRiskEval10.xml] */
        with depttree as (
            select cd.dept_cd
                ,cd.dept_nm
                ,cd.p_dept_cd
                ,cd.plant_cd
                ,cd.dept_lvl
                ,cd.use_yn
                ,cd.dept_nm_long
            from com_dept cd
            where 1=1
              and isnull(cd.p_dept_cd, '') = ''
            union all
            select cdd.dept_cd
                ,cdd.dept_nm
                ,cdd.p_dept_cd
                ,cdd.plant_cd
                ,cdd.dept_lvl
                ,cdd.use_yn
                ,cdd.dept_nm_long
            from com_dept cdd
            inner join depttree
            on cdd.p_dept_cd = depttree.dept_cd
        ),
        processlist as (
            select dept_cd
                , stuff((select ', ' + scp.process_nm
                         from rsa_process_dept scpd
                         inner join rsa_process scp
                         on scpd.plant_cd = scp.plant_cd  
                         and scpd.process_cd = scp.process_cd
                         where scpd.dept_cd = cpd.dept_cd
                         for xml path('')),1,1,'') as process_list
                , stuff((select ',' + scp.process_cd
                         from rsa_process_dept scpd
                         inner join rsa_process scp
                         on scpd.plant_cd = scp.plant_cd 
                         and scpd.process_cd = scp.process_cd
                         where scpd.dept_cd = cpd.dept_cd
                         for xml path('')),1,1,'') as process_cd_list
            from rsa_process_dept cpd
            inner join rsa_process cp
            on  cpd.plant_cd  = cp.plant_cd  
            and cpd.process_cd = cp.process_cd 
            group by dept_cd
        )
        select depttree.dept_cd
            ,depttree.dept_cd as id
            ,depttree.dept_nm
            ,depttree.dept_nm as label
            ,depttree.p_dept_cd
            ,depttree.plant_cd
            ,plant.code_nm as plant_nm
            ,depttree.dept_lvl
            ,deptLvl.code_nm as dept_lvl_nm
            ,depttree.use_yn
            ,processlist.process_list
            ,processlist.process_cd_list
            ,depttree.dept_nm_long
        from depttree
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on plant.code = plant_cd
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_DEPT_LVL') deptLvl
         on dept_lvl = deptLvl.code
        left outer join processlist
         on depttree.dept_cd = processlist.dept_cd
        where 1=1
        <if test= "plantCd != null and plantCd != ''">
        and depttree.plant_cd = #{plantCd}
        </if>
        <if test= "deptNm != null and deptNm != ''">
        and upper(depttree.dept_nm) like '%'+upper(#{deptNm})+'%'
        </if>
        order by p_dept_cd, depttree.plant_cd, depttree.dept_nm
    </select>
    
    <select id= "getWorkRiskEval10Info" resultType= "com.she.rsa.model.WorkRiskEval10DeptProcess">
    /* WorkRiskEval10Mapper.getWorkRiskEval10Info [WorkRiskEval10.xml] */
        select d.dept_cd
             , d.dept_nm
             , d.dept_nm_long
             , d.p_dept_cd
             , upperDept.dept_nm as p_dept_nm            
             , d.plant_cd
             , plant.code_nm as plant_nm
             , d.dept_lvl
             , deptLvl.code_nm as dept_lvl_nm
             , d.use_yn
             , case 
                 when d.use_yn = 'Y' then '사용'
                 else '미사용'
               end as use_yn_nm
        from com_dept d
        left outer join com_dept upperDept
         on d.p_dept_cd = upperDept.dept_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on plant.code = d.plant_cd        
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_DEPT_LVL') deptLvl
         on d.dept_lvl = deptLvl.code
        where d.dept_cd = #{deptCd}
    </select>
</mapper>