<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.health.checkup.mapper.CheckupResultUploadMapper">
    <update id= "uploadExcelCheckupResult" parameterType= "com.she.health.model.CheckupResult">
        /* CheckupResultUploadMapper.uploadExcelCheckupResult [CheckupResultUpload.xml] */
        MERGE INTO hea_checkup_result a
             USING (SELECT #{heaCheckupPlanNo} as hea_checkup_plan_no
                          ,#{userId} as user_id) b
                ON a.hea_checkup_plan_no = b.hea_checkup_plan_no
               AND a.user_id = b.user_id
              WHEN MATCHED THEN
                   UPDATE
                      SET hea_checkup_org_no = #{heaCheckupOrgNo}
                         ,hea_checked_ymd = convert(char(10), convert(date, #{heaCheckedYmd}), 23)
                         ,hea_workable_cd = #{heaWorkableCd}
                         ,hea_follow_up_cd = #{heaFollowUpCd}
                         ,overall_opinion = #{overallOpinion}
                         <if test="refHazardDesc != null and !refHazardDesc.equals('')">
                         ,ref_hazard_desc = #{refHazardDesc}
                         </if>
                         ,update_user_id = #{updateUserId}
                         ,update_dt = getdate()
              WHEN NOT MATCHED THEN
                   INSERT (hea_checkup_plan_no
                          ,user_id
                          ,dept_cd
                          ,notify_plan_yn
                          ,notify_plan_ymd
                          ,hea_checkup_org_no
                          ,hea_checked_ymd
                          ,overall_opinion
                          ,hea_workable_cd
                          ,hea_follow_up_cd
                          <if test="refHazardDesc != null and !refHazardDesc.equals('')">
                          ,ref_hazard_desc
                          </if>
                          ,create_user_id
                          ,create_dt)
                   VALUES (#{heaCheckupPlanNo}
                          ,#{userId}
                          ,(select dept_cd from com_user where user_id = #{userId})
                          ,'N'
                          ,''
                          ,#{heaCheckupOrgNo}
                          ,#{heaCheckedYmd}
                          ,#{overallOpinion}
                          ,#{heaWorkableCd}
                          ,#{heaFollowUpCd}
                          <if test="refHazardDesc != null and !refHazardDesc.equals('')">
                          ,#{refHazardDesc}
                          </if>
                          ,#{createUserId}
                          ,getdate());
<!--        update hea_checkup_result-->
<!--        set hea_checkup_org_no = #{heaCheckedOrgNo}-->
<!--            &#45;&#45; 예약기능이 없으므로 검진기관번호 = 검진받은기관번호 -->
<!--            , hea_checked_org_no = #{heaCheckedOrgNo}-->
<!--            , hea_checked_ymd = #{heaCheckedYmd}-->
<!--            , hea_workable_cd = #{heaWorkableCd}-->
<!--            , hea_follow_up_cd = #{heaFollowUpCd}-->
<!--            , overall_opinion = #{overallOpinion}-->
<!--            <if test="refHazardDesc != null and !refHazardDesc.equals('')">-->
<!--            , ref_hazard_desc = #{refHazardDesc}-->
<!--            </if>-->
<!--            , update_user_id = #{updateUserId}-->
<!--            , update_dt = getdate()-->
<!--        where hea_checkup_plan_no = #{heaCheckupPlanNo}-->
<!--        and user_id = #{userId}-->
    </update>
    
    <update id= "uploadExcelTestItemResult" parameterType= "com.she.health.model.TestItemResult">          
          <!-- <selectKey keyProperty= "heaCheckupOrgTestItemNo" resultType= "int" order= "BEFORE">
            select ot.hea_checkup_org_test_item_no
            from hea_checkup_plan p
            inner join hea_checkup_plan_org po
            on p.hea_checkup_plan_no = po.hea_checkup_plan_no
            inner join  hea_checkup_org o
            on po.hea_checkup_org_no = o.hea_checkup_org_no
            inner join hea_checkup_result r
            on p.hea_checkup_plan_no = r.hea_checkup_plan_no
            and r.user_id = #{userId}
            inner join hea_checkup_org_test_item ot
            on o.hea_checkup_org_no = ot.hea_checkup_org_no
            and r.hea_checkup_type_cd = ot.hea_checkup_type_cd
            and ot.year in (convert(char(4), p.start_ymd), convert(char(4), p.end_ymd))
            inner join hea_test_item t
            on ot.hea_test_item_cd = t.hea_test_item_cd
            where p.hea_checkup_plan_no = #{heaCheckupPlanNo}
            and o.hea_checkup_org_no = #{heaCheckupOrgNo}
            and t.hea_test_item_cd = #{heaTestItemCd}
          </selectKey> -->
          
          MERGE hea_test_item_result r
          USING ( SELECT 0 as col ) as t
             ON r.hea_checkup_plan_no = #{heaCheckupPlanNo}
            AND r.user_id = #{userId}
            AND r.hea_test_item_cd = #{heaTestItemCd}
           WHEN MATCHED THEN
                UPDATE
                   SET r.num_result = #{numResult}
                      ,r.char_result = #{charResult}
                      ,update_user_id = #{updateUserId}
                      ,update_dt = getdate()
           WHEN NOT MATCHED THEN
                INSERT (hea_checkup_plan_no
                       ,user_id
                       ,hea_checkup_org_test_item_no
                       ,hea_test_item_cd
                       ,num_result
                       ,char_result
                       ,create_user_id
                       ,create_dt)
                VALUES (#{heaCheckupPlanNo}
                       ,#{userId}
                       ,0
                       ,#{heaTestItemCd}
                       ,#{numResult}
                       ,#{charResult}
                       ,#{createUserId}
                       ,getdate());
    </update>

    <update id= "uploadExcelCheckupResultDiag" parameterType= "com.she.health.model.CheckupResultDiag">
          MERGE hea_checkup_result_diag r
          USING ( SELECT 0 as col ) as t
             ON r.hea_checkup_plan_no = #{heaCheckupPlanNo}
            AND r.user_id = #{userId}
            AND r.hea_disease_cd = #{heaDiseaseCd}
           WHEN MATCHED THEN
                UPDATE
                   SET user_id = #{userId}
                      ,hea_disease_cd = #{heaDiseaseCd}
                      ,hea_diagnose_cd = #{heaDiagnoseCd}
                      <if test="hazardCd != null and !hazardCd.equals('')">
                      ,hazard_cd = #{hazardCd}
                      </if>
                      ,update_user_id = #{updateUserId}
                      ,update_dt = getdate()
           WHEN NOT MATCHED THEN
                INSERT (hea_checkup_plan_no
                       ,user_id
                       ,hea_disease_cd
                       ,hea_diagnose_cd
                       <if test="hazardCd != null and !hazardCd.equals('')">
                       ,hazard_cd
                       </if>
                       ,gen_yn
                       ,create_user_id
                       ,create_dt)
                VALUES (#{heaCheckupPlanNo}
                       ,#{userId}
                       ,#{heaDiseaseCd}
                       ,#{heaDiagnoseCd}
                       <if test="hazardCd != null and !hazardCd.equals('')">
                       ,#{hazardCd}
                       </if>
                       ,'N'
                       ,#{updateUserId}
                       ,getdate());
    </update>
</mapper>