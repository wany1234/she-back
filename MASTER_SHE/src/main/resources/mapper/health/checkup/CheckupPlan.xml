<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.health.checkup.mapper.CheckupPlanMapper">
    <select id= "getCheckupPlans" resultType= "com.she.health.model.CheckupPlan">
        /* CheckupPlanMapper.getCheckupPlans [CheckupPlan.xml] */
        SELECT p.hea_checkup_plan_no
              ,p.hea_checkup_plan_nm
              ,p.hea_checkup_class_cd
              ,c.code_nm as hea_checkup_class_nm
              ,p.plant_cd
              ,pl.code_nm as plant_nm
              ,p.start_ymd
              ,p.end_ymd
              ,p.start_ymd + '~' + p.end_ymd as hea_checkup_plan_period
              ,(SELECT count(user_id)
                  FROM hea_checkup_result
                 WHERE p.hea_checkup_plan_no = hea_checkup_plan_no
               ) as checkup_user_count
              ,(SELECT count(*)
                  FROM hea_checkup_result r
                 WHERE r.hea_checkup_plan_no = p.hea_checkup_plan_no
               ) as result_cnt
              ,p.create_user_id
              ,cu.user_nm as create_user_nm
              ,p.create_dt
              ,p.update_user_id
              ,uu.user_nm as update_user_nm
              ,p.update_dt
              , case
                  when dbo.GET_USER_NM(p.update_user_id) = '' then dbo.GET_USER_NM(p.create_user_id)
                  else dbo.GET_USER_NM(p.update_user_id) end    as writer_user_nm
             , case when p.update_dt is null then convert(date, p.create_dt) else convert(date, p.update_dt) end   as writer_dt
          FROM hea_checkup_plan p
         INNER JOIN com_code_master c
            ON c.code_group_cd = 'HEA_CHECKUP_CLASS'
           AND p.hea_checkup_class_cd = c.code
         INNER JOIN com_code_master pl
            ON pl.code_group_cd = 'COM_PLANT_CD'
           AND p.plant_cd = pl.code
         INNER JOIN com_user cu
            ON p.create_user_id = cu.user_id
          LEFT OUTER JOIN com_user uu
            ON p.update_user_id = uu.user_id
         WHERE 1=1
        <if test= "plantCd != null and !plantCd.equals('')">
           AND p.plant_cd = #{plantCd}
        </if>
        <if test= "heaCheckupClassCd != null and !heaCheckupClassCd.equals('')">
           AND p.hea_checkup_class_cd = #{heaCheckupClassCd}
        </if>
        <if test= "heaCheckupPlanNm != null and !heaCheckupPlanNm.equals('')">
           AND p.hea_checkup_plan_nm like '%' + #{heaCheckupPlanNm} + '%'
        </if>
        <if test= "startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
           AND (DATEPART(YEAR, p.start_ymd) between #{startDate} and #{endDate}
            OR DATEPART(YEAR, p.end_ymd) between #{startDate} and #{endDate})
        </if>
         ORDER BY writer_dt desc, p.start_ymd desc
    </select>
    
    <select id= "getCheckupPlan" resultType= "com.she.health.model.CheckupPlan">
        /* CheckupPlanMapper.getCheckupPlan [CheckupPlan.xml] */
        SELECT p.hea_checkup_plan_no
              ,p.hea_checkup_plan_nm
              ,p.hea_checkup_class_cd
              ,c.code_nm as hea_checkup_class_nm
              ,p.plant_cd
              ,p.start_ymd
              ,p.end_ymd
              ,p.start_ymd + '~' + p.end_ymd as hea_checkup_plan_period
              ,(SELECT count(user_id)
                  FROM hea_checkup_result
                  WHERE p.hea_checkup_plan_no = hea_checkup_plan_no
               ) as checkup_user_count
              ,p.create_user_id
              ,cu.user_nm as create_user_nm
              ,p.create_dt
              ,p.update_user_id
              ,uu.user_nm as update_user_nm
              ,p.update_dt
          FROM hea_checkup_plan p
         INNER JOIN com_code_master c
            ON c.code_group_cd = 'HEA_CHECKUP_CLASS'
           AND p.hea_checkup_class_cd = c.code
         INNER JOIN com_user cu
            ON p.create_user_id = cu.user_id
          LEFT OUTER JOIN com_user uu
            ON p.update_user_id = uu.user_id
         WHERE p.hea_checkup_plan_no = #{heaCheckupPlanNo}
    </select>
    
    <insert id= "createCheckupPlan" parameterType= "com.she.health.model.CheckupPlan">
        /* CheckupPlanMapper.createCheckupPlan [CheckupPlan.xml] */
        <selectKey keyProperty= "heaCheckupPlanNo" resultType= "int" order= "BEFORE">
            SELECT next value for seq_hea_checkup_plan
        </selectKey>
        INSERT INTO hea_checkup_plan
            (hea_checkup_plan_no
            ,hea_checkup_plan_nm
            ,hea_checkup_class_cd
            ,plant_cd
            ,start_ymd
            ,end_ymd
            ,create_user_id
            ,create_dt)
        VALUES
            (#{heaCheckupPlanNo}
            ,#{heaCheckupPlanNm}
            ,#{heaCheckupClassCd}
            ,#{plantCd}
            ,#{startYmd}
            ,#{endYmd}
            ,#{createUserId}
            ,getdate())
    </insert>
    
    <insert id= "createCheckupPlanOrg" parameterType= "com.she.health.model.CheckupPlanOrg">
        /* CheckupPlanMapper.createCheckupPlanOrg [CheckupPlan.xml] */
        INSERT INTO hea_checkup_plan_org
            (hea_checkup_plan_no
            ,hea_checkup_org_no
            ,start_ymd
            ,end_ymd
            ,create_user_id
            ,create_dt)
        VALUES
            (#{heaCheckupPlanNo}
            ,#{heaCheckupOrgNo}
            ,#{startYmd}
            ,#{endYmd}
            ,#{createUserId}
            ,getdate())
    </insert>
    
    <update id= "updateCheckupPlan" parameterType= "com.she.health.model.CheckupPlan">
        /* CheckupPlanMapper.updateCheckupPlan [CheckupPlan.xml] */
        UPDATE hea_checkup_plan
           SET hea_checkup_plan_nm = #{heaCheckupPlanNm}
              ,hea_checkup_class_cd = #{heaCheckupClassCd}
              ,plant_cd = #{plantCd}
              ,start_ymd = #{startYmd}
              ,end_ymd = #{endYmd}
              ,update_user_id = #{updateUserId}
              ,update_dt = getdate()
         WHERE hea_checkup_plan_no = #{heaCheckupPlanNo}
    </update>
    
    <delete id= "deleteCheckupPlan" parameterType= "com.she.health.model.CheckupPlan">
        /* CheckupPlanMapper.deleteCheckupPlan [CheckupPlan.xml] */
        DELETE FROM hea_checkup_plan
         WHERE hea_checkup_plan_no = #{heaCheckupPlanNo}
    </delete>
    
    <delete id= "deleteCheckupPlanOrg">
        /* CheckupPlanMapper.deleteCheckupPlanOrg [CheckupPlan.xml] */
        DELETE FROM hea_checkup_plan_org
         WHERE hea_checkup_plan_no = #{heaCheckupPlanNo}
        <if test= "heaCheckupOrgNo != null and heaCheckupOrgNo > 0">
           AND hea_checkup_org_no = #{heaCheckupOrgNo}
        </if>
    </delete>
    
    <insert id= "createCheckupUser" parameterType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.createCheckupUser [CheckupPlan.xml] */
        INSERT INTO hea_checkup_result
            (hea_checkup_plan_no
            ,user_id
            ,dept_cd
            ,create_user_id
            ,create_dt)
        VALUES
            (#{heaCheckupPlanNo}
            ,#{userId}
            ,#{deptCd}
            ,#{createUserId}
            ,getdate())
    </insert>
    
    <delete id= "deleteCheckupUser" parameterType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.deleteCheckupUser [CheckupPlan.xml] */
        DELETE hea_checkup_result
         WHERE hea_checkup_plan_no = #{heaCheckupPlanNo}
           AND user_id = #{userId}
    </delete>
    
    <select id= "getCheckupPlanOrgs" resultType= "com.she.health.model.CheckupPlanOrg">
        /* CheckupPlanMapper.getCheckupPlanOrgs [CheckupPlan.xml] */
        SELECT hcpo.hea_checkup_plan_no
              ,hcpo.hea_checkup_org_no
              ,hco.hea_checkup_org_nm
              ,hcpo.start_ymd
              ,hcpo.end_ymd
              ,hcpo.start_ymd + '~' + hcpo.end_ymd as hea_checkup_plan_org_period
              ,hcpo.create_user_id
              ,hcpo.create_dt
              ,hcpo.update_user_id
              ,hcpo.update_dt
          FROM hea_checkup_plan_org hcpo
         INNER JOIN hea_checkup_org hco
            ON hcpo.hea_checkup_org_no = hco.hea_checkup_org_no
         INNER JOIN hea_checkup_plan hcp
            ON hcpo.hea_checkup_plan_no = hcp.hea_checkup_plan_no
         WHERE 1=1
        <if test= "standardYmd != null and !standardYmd.equals('')">
           AND convert(datetime, hcpo.start_ymd) &lt;= convert(datetime, #{standardYmd})
           AND convert(datetime, hcpo.end_ymd) &gt;= convert(datetime, #{standardYmd})
        </if>
        <if test= "heaCheckupPlanNo != null and heaCheckupPlanNo > 0">
           AND hcp.hea_checkup_plan_no = #{heaCheckupPlanNo}
        </if>
        <if test= "heaCheckupOrgNo != null and heaCheckupOrgNo > 0">
           AND hcpo.hea_checkup_org_no = #{heaCheckupOrgNo}
        </if>
           AND hco.use_yn = 'Y'
         ORDER BY hco.sort_order
    </select>
    
    <select id= "getCheckupUsersNoPage" resultType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.getCheckupUsersNoPage [CheckupPlan.xml] */
        select p.hea_checkup_plan_no, p.hea_checkup_plan_nm, p.hea_checkup_class_cd, cp.code_nm as hea_checkup_class_nm
            , o.hea_checkup_org_no, o.hea_checkup_org_nm
            
           <!-- 공정 표시 시작!-->
            ,  STUFF((
                select ', ' + cv.process_nm
                from com_dept_process_v cv
                where 1=1 and cv.dept_cd = u.dept_cd  
                for xml path('')
            ), 1, 1, '')  as prcs_nm
           <!-- 공정 표시 끝!-->
            
           <!-- 부서 취급자재(물질) 표시 시작!-->
            ,  STUFF((
                select ', ' + cv.chem_prod_nm_kr
                from com_chemprod_dept_v cv
                where 1=1 and cv.dept_cd = u.dept_cd  
                for xml path('')
            ), 1, 1, '')  as dept_chem_prod_nm
             <!-- 부서 취급자재(물질) 표시 끝 !-->
             
             <!-- 부서 취급물질(유해인자(화학적인자)) 표시 시작!-->
            ,  STUFF((
                select ', ' + ccv.chem_nm_kr
                from com_chem_dept_v ccv
                where 1=1 and ccv.dept_cd = u.dept_cd 
                for xml path('')
            ), 1, 1, '')  as dept_chem_nm
             <!-- 부서 취급물질(유해인자(화학적인자)) 표시 끝 !-->

             <!-- 부서 유해인자(물리) 표시 시작!-->
             , STUFF((
                 SELECT ', ' + cv.hazard_nm_ko
                   FROM com_hazard_dept_v cv
                  WHERE 1=1   
                    AND cv.dept_cd = u.dept_cd  
                    FOR xml path('')
             ), 1, 1, '') AS dept_hazard_nm
             <!-- 부서 유해인자(물리) 표시 끝 !-->
              
            , d.dept_cd, d.dept_nm, u.user_id, u.user_nm, u.entry_ymd, u.phone_no, u.office_tel, u.email
            , r.hea_checkup_org_no    -- 예약 건강검진 기관 번호
            , o.hea_checkup_org_nm    -- 예약 건강검진 기관명
            , r.hea_checked_ymd        -- 건강검진 일자
            , r.hea_checkup_org_no    -- 건강검진받은 기관 번호
            , co.hea_checkup_org_nm    as hea_checked_org_nm    -- 건강검진받은 기관명
            , case when isnull(r.hea_checked_ymd, '') = '' then '미수검' else '수검' end status_yn    -- 수검여부
            , cs.code_nm as com_sex_type_nm 
        from hea_checkup_plan p
        inner join com_code_master cp 
        on cp.code_group_cd = 'HEA_CHECKUP_CLASS' 
        and p.hea_checkup_class_cd = cp.code
        inner join hea_checkup_result r 
        on p.hea_checkup_plan_no = r.hea_checkup_plan_no
        inner join com_user u 
        on r.user_id = u.user_id
        inner join com_dept d 
        on u.dept_cd = d.dept_cd
        left outer join hea_checkup_org o 
        on r.hea_checkup_org_no = o.hea_checkup_org_no
        left outer join hea_checkup_org co 
        on r.hea_checkup_org_no = co.hea_checkup_org_no
        inner join com_code_master cs 
        on cs.code_group_cd = 'COM_SEX_TYPE'  
        and u.com_sex_type_cd = cs.code
        where 1=1
        <if test= "heaCheckupPlanNo != null and heaCheckupPlanNo > 0">
        and p.hea_checkup_plan_no = #{heaCheckupPlanNo}
        </if>
        <if test= "processNo != null and processNo > 0">
        and exists (
            select 1
            from com_process pp
            left outer join com_process_user pu
            on pp.process_no = pu.process_no
            and pu.user_id = u.user_id
            left outer join com_process_dept pd
            on pp.process_no = pd.process_no
            and pd.dept_cd = d.dept_cd
            where pu.process_no = #{processNo} or pd.process_no = #{processNo}
        )
        </if>
        <if test= "deptCd != null and !deptCd.equals('')">
        and d.dept_cd = #{deptCd}
        </if>
        <if test= "userId != null and !userId.equals('')">
        and upper(u.user_id) like '%'+upper(#{userId})+'%'
        </if>
        <if test= "userNm != null and !userNm.equals('')">
        and upper(u.user_nm) like '%'+upper(#{userNm})+'%'
        </if>
        <if test= "heaCheckedOrgNos != null and heaCheckedOrgNos.length > 0">
        and r.hea_checkup_org_no in
            <foreach collection= "heaCheckedOrgNos" item= "heaCheckedOrgNo" separator= "," open= "(" close= ")" >
            #{heaCheckedOrgNo}
            </foreach>
        </if>
        <if test= "heaCheckupOrgNos != null and heaCheckupOrgNos.length > 0">
        and r.hea_checkup_org_no in
            <foreach collection= "heaCheckupOrgNos" item= "heaCheckupOrgNo" separator= "," open= "(" close= ")" >
            #{heaCheckupOrgNo}
            </foreach>
        </if>
        <if test= "statusYn != null and !statusYn.equals('')">
        and (case when isnull(r.hea_checked_ymd, '') = '' then 'N' else 'Y' end) = #{statusYn}
        </if>
        <if test= "gender != null and !gender.equals('')">
        and u.com_sex_type_cd = upper(#{gender})
        </if>
        <if test= "age != null and age > 0">
           and case when #{age} = 5 then case when (datediff(month, convert(datetime, u.birth_ymd), getdate())/12)/10 <![CDATA[>=]]> #{age} then 1 else 0 end
               else case when (datediff(month, convert(datetime, u.birth_ymd), getdate())/12)/10 = #{age} then 1 else 0 end end = 1
           </if>
          order by u.dept_cd
    </select>

    <select id= "getCheckupUsersNoPaging" resultType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.getCheckupUsersNoPaging [CheckupPlan.xml] */
        WITH chemprod as (
            -- 화학자재
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,ccp.chem_prod_no
                  ,ccp.chem_prod_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
        ), chem as (
            -- 화학물질
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,cc.chem_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
             INNER JOIN com_chemprod_chem ccpc
                ON ccp.chem_prod_no = ccpc.chem_prod_no
             INNER JOIN com_chem cc
                ON ccpc.chem_no = cc.chem_no
        )
        SELECT cu.plant_cd
              ,plant.code_nm as plant_nm
              ,cd.dept_cd
              ,cd.dept_nm
              ,p.hea_checkup_plan_no
              -- 공정
              ,stuff((SELECT ', ' + b.process_nm
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                       WHERE a.dept_cd = cd.dept_cd
                         AND b.use_yn = 'Y'
                         FOR xml PATH('')),1,1,'') as process_nms
              ,cu.user_id
              ,cu.user_nm
              ,cu.com_sex_type_cd
              ,sex.code_nm as com_sex_type_nm
              ,cu.birth_ymd
              ,cu.entry_ymd
              -- 관련화학자재
              ,stuff((SELECT ', ' + chemprod.chem_prod_nm_kr
                        FROM chemprod
                       WHERE chemprod.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                                      FROM com_process_dept a
                                     INNER JOIN com_process b
                                        ON a.process_cd = b.process_cd
                                       AND b.use_yn = 'Y'
                                     WHERE a.process_cd = chemprod.process_cd)
                         FOR xml PATH('')),1,1,'') as chem_prod_nm_krs
              -- 관련화학물질
              ,stuff((SELECT ', ' + chem.chem_nm_kr
                        FROM chem
                       WHERE chem.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                         AND b.use_yn = 'Y'
                       WHERE a.process_cd = chem.process_cd)
                         FOR xml PATH('')),1,1,'') as chem_nm_krs
              ,count(*) over() as total_cnt
          FROM com_user cu
         INNER JOIN com_dept cd
            ON cu.dept_cd = cd.dept_cd
           AND cd.use_yn = 'Y'
         INNER JOIN com_code_master plant
            ON cu.plant_cd = plant.code
           AND plant.code_group_cd = 'COM_PLANT_CD'
         INNER JOIN com_code_master sex
            ON cu.com_sex_type_cd = sex.code
           AND sex.code_group_cd = 'COM_SEX_TYPE'
         INNER JOIN hea_checkup_plan p
            ON p.hea_checkup_plan_no = #{heaCheckupPlanNo}
         WHERE 1=1
           AND exists (SELECT 1
                         FROM hea_checkup_result
                        WHERE hea_checkup_plan_no = p.hea_checkup_plan_no
                          AND user_id = cu.user_id)
        <if test="deptCd != null and !deptCd.equals('')">
           AND cd.dept_cd = #{deptCd}
        </if>
        <if test="userId != null and !userId.equals('')">
           AND cu.user_id = #{userId}
        </if>
        <if test="age != null and age > 0">
           AND ((#{age} = 5 and (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 >= #{age})
                or (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 = #{age})
        </if>
        <if test="gender != null and !gender.equals('')">
           AND cu.com_sex_type_cd = #{gender}
        </if>
    </select>
    
    <select id= "getCheckupUsers" resultType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.getCheckupUsers [CheckupPlan.xml] */
        WITH chemprod as (
            -- 화학자재
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,ccp.chem_prod_no
                  ,ccp.chem_prod_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
        ), chem as (
            -- 화학물질
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,cc.chem_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
             INNER JOIN com_chemprod_chem ccpc
                ON ccp.chem_prod_no = ccpc.chem_prod_no
             INNER JOIN com_chem cc
                ON ccpc.chem_no = cc.chem_no
        )
        SELECT cu.plant_cd
              ,plant.code_nm as plant_nm
              ,cd.dept_cd
              ,cd.dept_nm
              ,p.hea_checkup_plan_no
              -- 공정
              ,stuff((SELECT ', ' + b.process_nm
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                       WHERE a.dept_cd = cd.dept_cd
                         AND b.use_yn = 'Y'
                         FOR xml PATH('')),1,1,'') as process_nms
              ,cu.user_id
              ,cu.user_nm
              ,cu.com_sex_type_cd
              ,sex.code_nm as com_sex_type_nm
              ,cu.birth_ymd
              ,cu.entry_ymd
              -- 관련화학자재
              ,stuff((SELECT ', ' + chemprod.chem_prod_nm_kr
                        FROM chemprod
                       WHERE chemprod.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                                      FROM com_process_dept a
                                     INNER JOIN com_process b
                                        ON a.process_cd = b.process_cd
                                       AND b.use_yn = 'Y'
                                     WHERE a.process_cd = chemprod.process_cd)
                         FOR xml PATH('')),1,1,'') as chem_prod_nm_krs
              -- 관련화학물질
              ,stuff((SELECT ', ' + chem.chem_nm_kr
                        FROM chem
                       WHERE chem.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                                      FROM com_process_dept a
                                     INNER JOIN com_process b
                                        ON a.process_cd = b.process_cd
                                       AND b.use_yn = 'Y'
                                     WHERE a.process_cd = chem.process_cd)
                         FOR xml PATH('')),1,1,'') as chem_nm_krs
              , IIF((
                     SELECT ISNULL(COUNT(*),'0')
                      FROM hea_checkup_plan p         
                     INNER JOIN hea_checkup_result r
                        ON p.hea_checkup_plan_no = r.hea_checkup_plan_no
                     INNER JOIN com_user u
                        ON r.user_id = u.user_id         
                     INNER JOIN hea_checkup_org o
                        ON r.hea_checkup_org_no = o.hea_checkup_org_no 
                     WHERE 1=1
                       AND p.hea_checkup_plan_no = #{heaCheckupPlanNo}
                       AND u.user_id = cu.user_id                   
                    ) != '0' , '등록', '미등록'
                ) AS checkUpResult            
              ,count(*) over() as total_cnt
              , case when hcr.out_checkup_yn = 'Y'  then '예' else '아니오' end as out_checkup_yn
              , hcr.remark
          FROM com_user cu
         INNER JOIN com_dept cd
            ON cu.dept_cd = cd.dept_cd
           AND cd.use_yn = 'Y'
         INNER JOIN com_code_master plant
            ON cu.plant_cd = plant.code
           AND plant.code_group_cd = 'COM_PLANT_CD'
         INNER JOIN com_code_master sex
            ON cu.com_sex_type_cd = sex.code
           AND sex.code_group_cd = 'COM_SEX_TYPE'
         INNER JOIN hea_checkup_plan p
            ON p.hea_checkup_plan_no = #{heaCheckupPlanNo}
         inner join hea_checkup_result hcr
	        on hcr.hea_checkup_plan_no = p.hea_checkup_plan_no
	        and hcr.user_id = cu.user_id
         WHERE 1=1
           AND exists (SELECT 1
                         FROM hea_checkup_result
                        WHERE hea_checkup_plan_no = p.hea_checkup_plan_no
                          AND user_id = cu.user_id)
        <if test="deptCd != null and !deptCd.equals('')">
           AND cd.dept_cd = #{deptCd}
        </if>
        <if test="userId != null and !userId.equals('')">
           AND cu.user_id = #{userId}
        </if>
        <if test="age != null and age > 0">
           AND ((#{age} = 5 and (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 >= #{age})
                or (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 = #{age})
        </if>
        <if test="gender != null and !gender.equals('')">
           AND cu.com_sex_type_cd = #{gender}
        </if>
        <if test="checkUpResult != null and !checkUpResult.equals('')">
           AND IIF((
                     SELECT ISNULL(COUNT(*),'0')
                      FROM hea_checkup_plan pp      
                     INNER JOIN hea_checkup_result rr
                        ON pp.hea_checkup_plan_no = rr.hea_checkup_plan_no
                     INNER JOIN com_user uu
                        ON rr.user_id = uu.user_id         
                     INNER JOIN hea_checkup_org oo
                        ON rr.hea_checkup_org_no = oo.hea_checkup_org_no 
                     WHERE 1=1
                       AND pp.hea_checkup_plan_no = #{heaCheckupPlanNo}
                       AND uu.user_id = cu.user_id                  
                    ) != '0' , '등록', '미등록'
                ) = #{checkUpResult}
        </if>
        <choose>
            <when test= 'orderByExpression != null and orderByExpression.equals("dept_nm asc")'>
                ORDER BY dept_nm
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("dept_nm desc")'>
                ORDER BY dept_nm desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("process_nms asc")'>
                ORDER BY process_nms
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("process_nms desc")'>
                ORDER BY process_nms desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_id asc")'>
                ORDER BY user_id
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_id desc")'>
                ORDER BY user_id desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_nm asc")'>
                ORDER BY user_nm
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_nm desc")'>
                ORDER BY user_nm desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("com_sex_type_nm asc")'>
                ORDER BY com_sex_type_nm
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("com_sex_type_nm desc")'>
                ORDER BY com_sex_type_nm desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("entry_ymd asc")'>
                ORDER BY entry_ymd
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("entry_ymd desc")'>
                ORDER BY entry_ymd desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_prod_nm_krs asc")'>
                ORDER BY chem_prod_nm_krs
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_prod_nm_krs desc")'>
                ORDER BY chem_prod_nm_krs desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_krs asc")'>
                ORDER BY chem_nm_krs
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_krs desc")'>
                ORDER BY chem_nm_krs desc
            </when>
            <otherwise>
                ORDER BY cd.dept_cd
            </otherwise>
        </choose>
        <if test= "pageSize != null and pageSize > -1">
           OFFSET ((#{pageNumber} - 1) * #{pageSize}) ROWS
           FETCH NEXT #{pageSize} ROWS ONLY
        </if>
    </select>
    
    <select id= "getCheckupUsersNoTargetNoPage" resultType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.getCheckupUsersNoTargetNoPage [CheckupPlan.xml] */
        WITH chemprod as (
            -- 화학물질
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,ccp.chem_prod_no
                  ,ccp.chem_prod_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
        ), chem as (
            -- 화학자재
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,cc.chem_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
             INNER JOIN com_chemprod_chem ccpc
                ON ccp.chem_prod_no = ccpc.chem_prod_no
             INNER JOIN com_chem cc
                ON ccpc.chem_no = cc.chem_no
        )
        SELECT plant.code_nm as plant_nm
              ,cu.plant_cd
              ,cd.dept_nm
              ,cd.dept_cd
              ,p.hea_checkup_plan_no
              -- 공정
              ,stuff((SELECT ', ' + b.process_nm
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                       WHERE a.dept_cd = cd.dept_cd
                         AND b.use_yn = 'Y'
                         FOR xml PATH('')),1,1,'') as process_nms
              ,cu.user_id
              ,cu.user_nm
              ,cu.com_sex_type_cd
              ,sex.code_nm as com_sex_type_nm
              ,cu.birth_ymd
              ,cu.entry_ymd
              -- 관련화학자재
              ,stuff((SELECT ', ' + chemprod.chem_prod_nm_kr
                        FROM chemprod
                       WHERE chemprod.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                         AND b.use_yn = 'Y'
                       WHERE a.process_cd = chemprod.process_cd)
                         FOR xml PATH('')),1,1,'') as chem_prod_nm_krs
              -- 관련화학물질
              ,stuff((SELECT ', ' + chem.chem_nm_kr
                        FROM chem
                       WHERE chem.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                         AND b.use_yn = 'Y'
                       WHERE a.process_cd = chem.process_cd)
                         FOR xml PATH('')),1,1,'') as chem_nm_krs
              , case when hcr.out_checkup_yn = 'Y'  then '예' else '아니오' end as out_checkup_yn
              , hcr.remark
          FROM com_user cu
         INNER JOIN com_dept cd
            ON cu.dept_cd = cd.dept_cd
           AND cd.use_yn = 'Y'
         INNER JOIN com_code_master plant
            ON cu.plant_cd = plant.code
           AND plant.code_group_cd = 'COM_PLANT_CD'
         INNER JOIN com_code_master sex
            ON cu.com_sex_type_cd = sex.code
           AND sex.code_group_cd = 'COM_SEX_TYPE'
         INNER JOIN hea_checkup_plan p
            ON p.hea_checkup_plan_no = #{heaCheckupPlanNo}
         left join hea_checkup_result hcr
	        on hcr.hea_checkup_plan_no = p.hea_checkup_plan_no
	        and hcr.user_id = cu.user_id
         WHERE 1=1
           AND not exists (SELECT 1
          FROM hea_checkup_result
         WHERE hea_checkup_plan_no = p.hea_checkup_plan_no
           AND user_id = cu.user_id)
        <if test="plantCd != null and !plantCd.equals('')">
           AND cu.plant_cd = #{plantCd}
        </if>
        <if test="deptCd != null and !deptCd.equals('')">
           AND cd.dept_cd = #{deptCd}
        </if>
        <if test="processCd != null and !processCd.equals('')">
           AND exists (SELECT 1
                         FROM com_process_dept a
                        INNER JOIN com_process b
                           ON a.process_cd = b.process_cd
                          AND b.use_yn = 'Y'
                        WHERE a.dept_cd = cd.dept_cd
                          AND b.process_cd = #{processCd})
        </if>
        <if test="userNm != null and !userNm.equals('')">
           AND cu.user_nm = #{userNm}
        </if>
        <if test="age != null and age > 0">
           AND ((#{age} = 5 and (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 >= #{age})
                or (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 = #{age})
        </if>
        <if test="gender != null and !gender.equals('')">
           AND cu.com_sex_type_cd = #{gender}
        </if>
        <if test='prevYearCheckupUserYn != null and prevYearCheckupUserYn.equals("Y")'>
           AND cu.user_id not in (SELECT r.user_id
                                    FROM hea_checkup_plan p
                                   INNER JOIN hea_checkup_result r
                                      ON p.hea_checkup_plan_no = r.hea_checkup_plan_no
                                   WHERE DATEPART(YEAR,p.start_ymd) = DATEPART(YEAR,GETDATE()) - 1)
        </if>
        <if test='specialTargetChemYn != null and specialTargetChemYn.equals("Y")'>
           AND (exists(SELECT 1
                         FROM chemprod
                        INNER JOIN chm_regul_itm_chemprod_val cricv
                           ON chemprod.chem_prod_no = cricv.chem_prod_no
                          AND convert(date, getdate()) between convert(date, cricv.start_dt) and convert(date, cricv.end_dt)
                          AND cricv.regul_itm_no in (175, 180)
                        WHERE chemprod.dept_cd = cd.dept_cd
                          AND exists(SELECT 1
                         FROM com_process_dept a
                        INNER JOIN com_process b
                           ON a.process_cd = b.process_cd
                          AND b.use_yn = 'Y'
                        WHERE a.process_cd = chemprod.process_cd))

                OR exists(SELECT 1
                            FROM com_hazard ch
                           INNER JOIN work_meas_rslt wmr
                              ON ch.hazard_cd = wmr.hazard_cd
                             AND ch.special_yn = 'Y'
                             AND ch.use_yn = 'Y'
                           WHERE exists(SELECT 1
                                          FROM com_process_dept a
                                         INNER JOIN com_dept b
                                            ON a.dept_cd = b.dept_cd
                                           AND a.dept_cd = cd.dept_cd
                                           AND b.use_yn = 'Y'
                                         WHERE a.process_cd = wmr.process_cd)))
        </if>
        <if test='specialTargetPhyYn != null and specialTargetPhyYn.equals("Y")'>
           AND exists (SELECT 1
                         FROM hea_checkup_result hcr
                        INNER JOIN hea_checkup_result_diag hcrd
                           ON hcr.hea_checkup_plan_no = hcrd.hea_checkup_plan_no
                          AND hcr.user_id = hcrd.user_id
                        INNER JOIN com_hazard ch
                           ON hcrd.hazard_cd = ch.hazard_cd
                        WHERE hcr.user_id = cu.user_id
                          AND ch.special_yn = 'Y'
                          AND ch.use_yn = 'Y')
        </if>
    </select>
    
    <select id= "getCheckupUsersNoTarget" resultType= "com.she.health.model.CheckupUser">
        /* CheckupPlanMapper.getCheckupUsersNoTarget [CheckupPlan.xml] */
        WITH chemprod as (
            -- 화학자재
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,ccp.chem_prod_no
                  ,ccp.chem_prod_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
        ), chem as (
            -- 화학물질
            SELECT rspc.dept_cd
                  ,rspc.process_cd
                  ,cc.chem_nm_kr
              FROM rsa_dept_process_chemprod rspc
             INNER JOIN com_chemprod ccp
                ON rspc.chem_prod_no = ccp.chem_prod_no
             INNER JOIN com_chemprod_chem ccpc
                ON ccp.chem_prod_no = ccpc.chem_prod_no
             INNER JOIN com_chem cc
                ON ccpc.chem_no = cc.chem_no
        )
        SELECT plant.code_nm as plant_nm
              ,cu.plant_cd
              ,cd.dept_nm
              ,cd.dept_cd
              ,p.hea_checkup_plan_no
              ,stuff((SELECT ', ' + b.process_nm
                        FROM com_process_dept a
                       INNER JOIN com_process b
                          ON a.process_cd = b.process_cd
                       WHERE a.dept_cd = cd.dept_cd
                         AND b.use_yn = 'Y'
                         FOR xml PATH('')),1,1,'') as process_nms
              ,cu.user_id
              ,cu.user_nm
              ,cu.com_sex_type_cd
              ,sex.code_nm as com_sex_type_nm
              ,cu.birth_ymd
              ,cu.entry_ymd
              ,stuff((SELECT ', ' + chemprod.chem_prod_nm_kr
                        FROM chemprod
                       WHERE chemprod.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                                      FROM com_process_dept a
                                     INNER JOIN com_process b
                                        ON a.process_cd = b.process_cd
                                       AND b.use_yn = 'Y'
                                     WHERE a.process_cd = chemprod.process_cd)
                                       FOR xml PATH('')),1,1,'') as chem_prod_nm_krs
              ,stuff((SELECT ', ' + chem.chem_nm_kr
                        FROM chem
                       WHERE chem.dept_cd = cd.dept_cd
                         AND exists(SELECT 1
                                      FROM com_process_dept a
                                     INNER JOIN com_process b
                                        ON a.process_cd = b.process_cd
                                       AND b.use_yn = 'Y'
                                     WHERE a.process_cd = chem.process_cd)
                                       FOR xml PATH('')),1,1,'') as chem_nm_krs
              ,count(*) over() as total_cnt
              , case when hcr.out_checkup_yn = 'Y'  then '예' else '아니오' end as out_checkup_yn
              , hcr.remark
          FROM com_user cu
         INNER JOIN com_dept cd
            ON cu.dept_cd = cd.dept_cd
           AND cd.use_yn = 'Y'
         INNER JOIN com_code_master plant
            ON cu.plant_cd = plant.code
           AND plant.code_group_cd = 'COM_PLANT_CD'
         INNER JOIN com_code_master sex
            ON cu.com_sex_type_cd = sex.code
           AND sex.code_group_cd = 'COM_SEX_TYPE'
         INNER JOIN hea_checkup_plan p
            ON p.hea_checkup_plan_no = #{heaCheckupPlanNo}
         left join hea_checkup_result hcr
	        on hcr.hea_checkup_plan_no = p.hea_checkup_plan_no
	        and hcr.user_id = cu.user_id
         WHERE 1=1
           AND not exists (SELECT 1
                             FROM hea_checkup_result
                            WHERE hea_checkup_plan_no = p.hea_checkup_plan_no
                              AND user_id = cu.user_id)
        <if test="plantCd != null and !plantCd.equals('')">
           AND cu.plant_cd = #{plantCd}
        </if>
        <if test="deptCd != null and !deptCd.equals('')">
           AND cd.dept_cd = #{deptCd}
        </if>
        <if test="processCd != null and !processCd.equals('')">
           AND exists (SELECT 1
                         FROM com_process_dept a
                        INNER JOIN com_process b
                           ON a.process_cd = b.process_cd
                          AND b.use_yn = 'Y'
                        WHERE a.dept_cd = cd.dept_cd
                          AND b.process_cd = #{processCd})
        </if>
        <if test="userNm != null and !userNm.equals('')">
           AND cu.user_nm = #{userNm}
        </if>
        <if test="age != null and age > 0">
            AND ((#{age} = 5 and
            (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 >= #{age}) or
            (datediff(month, convert(datetime, cu.birth_ymd), getdate())/12)/10 = #{age})
        </if>
        <if test="gender != null and !gender.equals('')">
           AND cu.com_sex_type_cd = #{gender}
        </if>
        <if test='prevYearCheckupUserYn != null and prevYearCheckupUserYn.equals("Y")'>
           AND cu.user_id not in (SELECT r.user_id
                                    FROM hea_checkup_plan p
                                   INNER JOIN hea_checkup_result r
                                      ON p.hea_checkup_plan_no = r.hea_checkup_plan_no
                                   WHERE DATEPART(YEAR,p.start_ymd) = DATEPART(YEAR,GETDATE()) - 1)
        </if>
        <if test='specialTargetChemYn != null and specialTargetChemYn.equals("Y")'>
           AND (exists(SELECT 1
                         FROM chemprod
                        INNER JOIN chm_regul_itm_chemprod_val cricv
                           ON chemprod.chem_prod_no = cricv.chem_prod_no
                          AND convert(date, getdate()) between convert(date, cricv.start_dt) and convert(date, cricv.end_dt)
                          AND cricv.regul_itm_no in (175, 180)
                        WHERE chemprod.dept_cd = cd.dept_cd
                          AND exists(SELECT 1
                                       FROM com_process_dept a
                                      INNER JOIN com_process b
                                         ON a.process_cd = b.process_cd
                                        AND b.use_yn = 'Y'
                                      WHERE a.process_cd = chemprod.process_cd))

              OR exists(SELECT 1
                          FROM com_hazard ch
                         INNER JOIN work_meas_rslt wmr
                            ON ch.hazard_cd = wmr.hazard_cd
                           AND ch.special_yn = 'Y'
                           AND ch.use_yn = 'Y'
                         WHERE exists(SELECT 1
                                        FROM com_process_dept a
                                       INNER JOIN com_dept b
                                          ON a.dept_cd = b.dept_cd
                                         AND a.dept_cd = cd.dept_cd
                                         AND b.use_yn = 'Y'
                                       WHERE a.process_cd = wmr.process_cd)))
        </if>
        <if test='specialTargetPhyYn != null and specialTargetPhyYn.equals("Y")'>
           AND exists (SELECT 1
                         FROM hea_checkup_result hcr
                        INNER JOIN hea_checkup_result_diag hcrd
                           ON hcr.hea_checkup_plan_no = hcrd.hea_checkup_plan_no
                          AND hcr.user_id = hcrd.user_id
                        INNER JOIN com_hazard ch
                           ON hcrd.hazard_cd = ch.hazard_cd
                        WHERE hcr.user_id = cu.user_id
                          AND ch.special_yn = 'Y'
                          AND ch.use_yn = 'Y')
        </if>
        <choose>
            <when test= 'orderByExpression != null and orderByExpression.equals("dept_nm asc")'>
                ORDER BY dept_nm
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("dept_nm desc")'>
                ORDER BY dept_nm desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("process_nms asc")'>
                ORDER BY process_nms
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("process_nms desc")'>
                ORDER BY process_nms desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_id asc")'>
                ORDER BY user_id
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_id desc")'>
                ORDER BY user_id desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_nm asc")'>
                ORDER BY user_nm
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("user_nm desc")'>
                ORDER BY user_nm desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("com_sex_type_nm asc")'>
                ORDER BY com_sex_type_nm
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("com_sex_type_nm desc")'>
                ORDER BY com_sex_type_nm desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("entry_ymd asc")'>
                ORDER BY entry_ymd
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("entry_ymd desc")'>
                ORDER BY entry_ymd desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_prod_nm_krs asc")'>
                ORDER BY chem_prod_nm_krs
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_prod_nm_krs desc")'>
                ORDER BY chem_prod_nm_krs desc
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_krs asc")'>
                ORDER BY chem_nm_krs
            </when>
            <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_krs desc")'>
                ORDER BY chem_nm_krs desc
            </when>
            <otherwise>
                ORDER BY cd.dept_cd
            </otherwise>
        </choose>
        <if test= "pageSize != null and pageSize > -1">
            OFFSET ((#{pageNumber} - 1) * #{pageSize}) ROWS
            FETCH NEXT #{pageSize} ROWS ONLY
        </if>
    </select>
</mapper>