<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.health.muscResearch.mapper.MuscResearchMapper">
   <!-- 근골격계 결과목록 조회 -->
   <select id="getMuscResearchs" parameterType="map" resultType="com.she.health.model.MuscResearch">
        /* MuscResearchMapper.getMuscResearchs [MuscResearch.xml] */
          SELECT hmr.musc_research_no
                ,hmr.plant_cd
                ,plant.code_nm as plant_nm
                ,hmr.year
                ,hmr.research_nm
                ,hmr.research_desc
                ,hmr.research_org_nm
                ,CONVERT(CHAR(10), hmr.research_start_dt, 23) as research_start_dt
                ,CONVERT(CHAR(10), hmr.research_end_dt, 23) as research_end_dt
                ,CONVERT(CHAR(10), hmr.research_start_dt, 23) + ' ~ ' + CONVERT(CHAR(10), hmr.research_end_dt, 23) as duration
                ,hmr.research_start_dt
                ,hmr.research_end_dt
                ,hmr.remark
                ,hmr.musc_research_state_cd
                ,state.code_nm as musc_research_state_nm
                ,hmr.create_user_id
                ,hmr.create_dt
                ,hmr.update_user_id
                ,hmr.update_dt
                ,stuff((SELECT ', ' + cd.dept_nm
                          FROM hea_musc_research_dept hmrd
                         INNER JOIN com_dept cd
                            ON hmrd.dept_cd = cd.dept_cd
                         WHERE hmrd.musc_research_no = hmr.musc_research_no
                           for xml path('')), 1, 1, '') as dept_nms
                , case
                    when dbo.GET_USER_NM(hmr.update_user_id) = '' then dbo.GET_USER_NM(hmr.create_user_id)
                    else dbo.GET_USER_NM(hmr.update_user_id) end    as writer_user_nm
                , case when hmr.update_dt is null then convert(date, hmr.create_dt) else convert(date, hmr.update_dt) end   as writer_dt
            FROM hea_musc_research hmr
            INNER JOIN com_code_master plant
            ON plant.code = hmr.plant_cd
            INNER JOIN com_code_master state
            ON state.code = hmr.musc_research_state_cd
            WHERE 1 = 1
            <if test="plantCd != null and !plantCd.equals('')">
              AND hmr.plant_cd = #{plantCd}
            </if>
            <if test= "startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
               AND DATEPART(YEAR,hmr.research_start_dt) between #{startDate} and #{endDate}
               AND DATEPART(YEAR,hmr.research_end_dt) between #{startDate} and #{endDate}
            </if>
            <if test="muscResearchStateCd != null and !muscResearchStateCd.equals('')">
               AND hmr.musc_research_state_cd = #{muscResearchStateCd}
            </if>
            <if test="researchNm != null and !researchNm.equals('')">
               AND hmr.research_nm like '%' + #{researchNm} + '%'
            </if>
            <if test="deptCd != null and !deptCd.equals('')">
                AND exists(SELECT 1
                FROM hea_musc_research_dept hmrd
                WHERE hmrd.musc_research_no = hmr.musc_research_no
                    <choose>
                        <when test='deptSubYn != null and deptSubYn.equals("Y")'>
                            AND hmrd.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                        </when>
                        <otherwise>
                            AND hmrd.dept_cd = #{deptCd}
                        </otherwise>
                    </choose>
                          )
            </if>
            ORDER BY writer_dt desc, hmr.research_start_dt DESC
   </select>

    <!-- 근골격계 조사목록 조회 -->
    <select id="getMuscResearch" resultType="com.she.health.model.MuscResearch">
        /* MuscResearchMapper.getMuscResearch [MuscResearch.xml] */
        SELECT hmr.musc_research_no
              ,hmr.plant_cd
              ,hmr.year
              ,hmr.research_nm
              ,hmr.research_desc
              ,hmr.research_org_nm
              ,hmr.musc_research_state_cd
              ,CONVERT(CHAR(10), hmr.research_start_dt, 23) as research_start_dt
              ,CONVERT(CHAR(10), hmr.research_end_dt, 23) as research_end_dt
              ,CONVERT(CHAR(10), hmr.research_start_dt, 23) + ' ~ ' + CONVERT(CHAR(10), hmr.research_end_dt, 23) as duration
              ,hmr.remark
          FROM hea_musc_research hmr
         INNER JOIN com_code_master plant
            ON plant.code = hmr.plant_cd
           AND plant.code_group_cd = 'COM_PLANT_CD'
         WHERE 1=1
           AND hmr.musc_research_no = #{muscResearchNo}
    </select>

    <!-- 근골격계 기본조사 정보 저장 -->
    <insert id="createMuscResearch" parameterType="com.she.health.model.MuscResearch">
        <selectKey keyProperty= "muscResearchNo" resultType= "int" order= "BEFORE">
            select next value for seq_hea_musc_research as musc_research_no
        </selectKey>
        /* MuscResearchMapper.createMuscResearch [MuscResearch.xml] */
        INSERT INTO hea_musc_research(
              musc_research_no
            , plant_cd
            , year
            , research_nm
            , research_desc
            , research_org_nm
            , musc_research_state_cd
            , research_start_dt
            , research_end_dt
            , remark
            , create_user_id
            , create_dt
        ) VALUES (
              #{muscResearchNo}
            , #{plantCd}
            , convert(varchar(4), #{year})
            , #{researchNm}
            , #{researchDesc}
            , #{researchOrgNm}
            , 'HMCS1'
            , #{researchStartDt}
            , #{researchEndDt}
            , #{remark}
            , #{createUserId}
            , getdate()
        )
    </insert>

    <!-- 근골격계 기본조사 정보 수정 -->
    <update id="updateMuscResearch" parameterType="com.she.health.model.MuscResearch">
    /* MuscResearchMapper.updateMuscResearch [MuscResearch.xml] */
        UPDATE hea_musc_research
           SET year = #{year}
             , plant_cd = #{plantCd}
             , research_nm = #{researchNm}
             , research_desc = #{researchDesc}
             , research_org_nm = #{researchOrgNm}
             , musc_research_state_cd = #{muscResearchStateCd}
             , research_start_dt = #{researchStartDt}
             , research_end_dt = #{researchEndDt}
             , remark = #{remark}
             , update_user_id = #{updateUserId}
             , update_dt = getdate()
             , update_dept_cd = (select dept_cd from com_user where user_id = #{updateUserId})
             , update_dept_nm = (select dbo.GET_DEPT_NM(dept_cd) from com_user where user_id = #{updateUserId})
             , update_position_cd = (select position_cd from com_user where user_id = #{updateUserId})
             , update_position_nm = (select position_nm from com_user where user_id = #{updateUserId})
         WHERE musc_research_no = #{muscResearchNo}
    </update>

    <!-- 근골격계 기본조사 정보 결과 완료 -->
    <update id="completeMuscResearch" parameterType="com.she.health.model.MuscResearch">
    /* MuscResearchMapper.completeMuscResearch [MuscResearch.xml] */
        UPDATE hea_musc_research
           SET musc_research_state_cd = #{muscResearchStateCd}
              ,update_user_id = #{updateUserId}
              ,update_dt = getdate()
         WHERE musc_research_no = #{muscResearchNo}
    </update>

    <!-- 근골격계 사전조사 삭제 -->
    <delete id="deleteMuscResearch">
     /* MuscResearchMapper.deleteMuscResearch [MuscResearch.xml] */
        DELETE FROM hea_musc_research
         WHERE musc_research_no = #{muscResearchNo}
    </delete>

   <!-- 근골격계 결과등록 조사목록 조회 -->
   <select id="getMuscResearchResults" parameterType="map" resultType="com.she.health.model.MuscResearch">
   /* MuscResearchMapper.getMuscResearchResults [MuscResearch.xml] */
          SELECT hmr.musc_research_no
                ,hmr.plant_cd
                ,plant.code_nm as plant_nm
                ,hmr.year
                ,hmr.research_nm
                ,hmr.research_desc
                ,hmr.research_org_nm
                ,CONVERT(CHAR(10), hmr.research_start_dt, 23) as research_start_dt
                ,CONVERT(CHAR(10), hmr.research_end_dt, 23) as research_end_dt
                ,CONVERT(CHAR(10), hmr.research_start_dt, 23) + ' ~ ' + CONVERT(CHAR(10), hmr.research_end_dt, 23) as duration
                ,hmr.research_start_dt
                ,hmr.research_end_dt
                ,hmr.remark
                ,hmr.musc_research_state_cd
                ,state.code_nm as musc_research_state_nm
                ,hmr.create_user_id
                ,hmr.create_dt
                ,hmr.update_user_id
                ,hmr.update_dt
                ,car.biz_appr_step_cd
                ,case when car.biz_appr_step_cd = 'BAPSG' then ''
                    else bizAppr.code_nm
                 end as biz_appr_step_nm
                ,stuff((SELECT ', ' + cd.dept_nm
                          FROM hea_musc_research_dept hmrd
                         INNER JOIN com_dept cd
                            ON hmrd.dept_cd = cd.dept_cd
                         WHERE hmrd.musc_research_no = hmr.musc_research_no
                           for xml path('')), 1, 1, '') as dept_nms
                , case
                    when dbo.GET_USER_NM(hmr.update_user_id) = '' then dbo.GET_USER_NM(hmr.create_user_id)
                    else dbo.GET_USER_NM(hmr.update_user_id) end    as writer_user_nm
                , case when hmr.update_dt is null then convert(date, hmr.create_dt) else convert(date, hmr.update_dt) end   as writer_dt
            FROM hea_musc_research hmr
            INNER JOIN com_code_master plant
            ON plant.code = hmr.plant_cd
            INNER JOIN com_code_master state
            ON state.code = hmr.musc_research_state_cd
            LEFT OUTER JOIN com_appr_rqst car
             ON hmr.appr_rqst_no = car.appr_rqst_no
            LEFT OUTER JOIN com_code_master bizAppr
             ON car.biz_appr_step_cd = bizAppr.code
            AND bizAppr.code_group_cd = 'COM_BIZ_APPR_STEP'
            WHERE 1 = 1

              AND hmr.musc_research_state_cd NOT IN( 'HMCS1')
            <if test="plantCd != null and !plantCd.equals('')">
              AND hmr.plant_cd = #{plantCd}
            </if>
            <if test= "startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
               AND DATEPART(YEAR,hmr.research_start_dt) between #{startDate} and #{endDate}
               AND DATEPART(YEAR,hmr.research_end_dt) between #{startDate} and #{endDate}
            </if>
             <if test="muscResearchStateCd != null and !muscResearchStateCd.equals('')">
              <choose>
                  <when test= 'muscResearchStateCd.equals("HMCS999")'>
               AND hmr.musc_research_state_cd NOT IN('HMCS1', 'HMCS2', 'HMCS3')
                  </when>
                  <otherwise>
               AND hmr.musc_research_state_cd = #{muscResearchStateCd}
                  </otherwise>
              </choose>
            </if>
            <if test="researchNm != null and !researchNm.equals('')">
               AND hmr.research_nm like '%' + #{researchNm} + '%'
            </if>
            <if test="deptCd != null and !deptCd.equals('')">
                AND exists(SELECT 1
                FROM hea_musc_research_dept hmrd
                WHERE hmrd.musc_research_no = hmr.musc_research_no
                        <choose>
                            <when test='deptSubYn != null and deptSubYn.equals("Y")'>AND hmrd.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                            </when>
                            <otherwise>
                             AND hmrd.dept_cd = #{deptCd}
                            </otherwise>
                        </choose>
                           )
            </if>
            ORDER BY writer_dt desc, hmr.research_start_dt DESC
   </select>
  <!-- 단위작업 목록  -->
     <select id="getunitWorks" parameterType="map" resultType="com.she.health.model.MuscResearchUnit">
     /* MuscResearchMapper.getunitWorks [MuscResearchUnit.xml] */
            SELECT hmru.musc_research_unit_no
                  ,hmrd.musc_research_no
                  ,hmru.process_cd
                  ,hmr.plant_cd
                  ,research_cd
                  ,cp.process_nm as process_nm
                  ,hmru.process_desc
                  ,hmru.unit_work_nm
                  ,hmru.research_dt
                  ,hmru.worker_cnt
                  ,hmru.dept_cd
                  ,cd.dept_nm as dept_nm
                  ,hmru.research_user_id
                  ,cu.user_nm as research_user_nm
                  ,hmru.remark
                  ,hmru.create_user_id
                  ,hmru.create_dt
                  ,hmru.update_user_id
                  ,hmru.update_dt
              FROM hea_musc_research_unit hmru
             INNER JOIN hea_musc_research_dept hmrd
                ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
             INNER JOIN hea_musc_research hmr
                ON hmrd.musc_research_no = hmr.musc_research_no
             INNER JOIN com_process cp
                ON hmru.process_cd = cp.process_cd
             INNER JOIN com_user cu
                ON cu.user_id = hmru.research_user_id
             INNER JOIN com_dept cd
                ON cd.dept_cd = hmru.dept_cd
             WHERE hmr.musc_research_no = #{muscResearchNo}
            <if test="deptCd != null and !deptCd.equals('')">
               AND hmrd.dept_cd = #{deptCd}
            </if>
        </select>

    <select id="getCheckUnitWorkCnt" resultType="int">
        /* MuscResearchMapper.getCheckUnitWorks [MuscResearchUnit.xml] */
        SELECT count(*) cnt
          FROM hea_musc_research_unit a
         WHERE a.musc_research_dept_no = (select b.musc_research_dept_no
                                          from hea_musc_research_dept b
                                         where dept_cd = #{deptCd}
                                           and b.musc_research_no = #{muscResearchNo}
                                           and a.musc_research_dept_no = b.musc_research_dept_no)
           AND a.unit_work_nm = #{unitWorkNm}
        <if test="muscResearchUnitNo != null and muscResearchUnitNo > 0">
           AND a.musc_research_unit_no != #{muscResearchUnitNo}
        </if>
    </select>

    <select id="getUnitWorkNo" resultType="int">
        /* MuscResearchMapper.getUnitWorkNo [MuscResearchUnit.xml] */
        SELECT a.musc_research_unit_no
        FROM hea_musc_research_unit a
        WHERE a.musc_research_dept_no = (select b.musc_research_dept_no
                                        from hea_musc_research_dept b
                                        where dept_cd = #{deptCd}
                                        and b.musc_research_no = #{muscResearchNo}
                                        and a.musc_research_dept_no = b.musc_research_dept_no)
        AND a.unit_work_nm = #{unitWorkNm}
    </select>

    <!-- 근골격계 단위작업 순번 -->
    <select id= "getCountunitWork" resultType= "int">
     /* MuscResearchMapper.getCountunitWork [MuscResearchUnit.xml] */
        SELECT count(*)
        FROM hea_musc_research_unit
         WHERE 1=1
         AND musc_research_no = #{muscResearchNo}
    </select>

   <!-- 근골격계 단위작업 상세 -->
   <select id="getunitWork" parameterType="map" resultType="com.she.health.model.MuscResearchUnit">
       /* MuscResearchMapper.getunitWork [MuscResearchUnit.xml] */
       SELECT hmru.musc_research_unit_no
             ,hmrd.musc_research_no
             ,hmru.process_cd
             ,hmr.plant_cd
             ,plant.code_nm as plant_nm
             ,research_cd
             ,cp.process_nm as process_nm
             ,hmru.process_desc
             ,hmru.unit_work_nm
             ,hmru.research_dt
             ,hmru.worker_cnt
             ,hmru.dept_cd
             ,cd.dept_nm as dept_nm
             ,hmru.research_user_id
             ,cu.user_nm as research_user_nm
             ,hmru.remark
             ,hmru.create_user_id
             ,hmru.create_dt
             ,hmru.update_user_id
             ,hmru.update_dt
         FROM hea_musc_research_unit hmru
        INNER JOIN hea_musc_research_dept hmrd
           ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
        INNER JOIN hea_musc_research hmr
           ON hmrd.musc_research_no = hmr.musc_research_no
        INNER JOIN com_code_master plant
           ON plant.code = hmr.plant_cd
        INNER JOIN com_process cp
           ON hmru.process_cd = cp.process_cd
        INNER JOIN com_user cu
           ON cu.user_id = hmru.research_user_id
        INNER JOIN com_dept cd
           ON cd.dept_cd = hmru.dept_cd
        WHERE hmru.musc_research_unit_no = #{muscResearchUnitNo}
   </select>


    <!-- 근골격계 단위작업 저장 -->
    <insert id="createUnitWork" parameterType="com.she.health.model.MuscResearchUnit">
        <selectKey keyProperty= "muscResearchUnitNo,researchCd,muscResearchDeptNo" resultType= "com.she.health.model.MuscResearchUnit" order= "BEFORE">
            select next value for seq_hea_musc_research_unit as muscResearchUnitNo
                  ,CONCAT((SELECT plant_cd FROM com_dept WHERE dept_cd = #{deptCd}), #{processCd}) as researchCd
                  ,(SELECT musc_research_dept_no
                      FROM hea_musc_research_dept hmrd
                     WHERE musc_research_no = #{muscResearchNo}
                       AND dept_cd = #{deptCd}) as muscResearchDeptNo
        </selectKey>
        /* MuscResearchMapper.createUnitWork [MuscResearchUnit.xml] */
        INSERT INTO hea_musc_research_unit (
                    musc_research_unit_no
                    ,musc_research_dept_no
                    ,research_cd
                    ,process_cd
                    ,process_desc
                    ,unit_work_nm
                    ,research_dt
                    ,worker_cnt
                    ,dept_cd
                    ,research_user_id
                    ,remark
                    ,create_user_id
                    ,create_dt

                ) values (
                  #{muscResearchUnitNo}
                  , #{muscResearchDeptNo}
                  , CONCAT(#{researchCd}, REPLICATE('0', 7 - LEN(#{muscResearchDeptNo})), #{muscResearchDeptNo})
                  , #{processCd}
                  , #{processDesc}
                  , #{unitWorkNm}
                  , #{researchDt}
                  , #{workerCnt}
                  , #{deptCd}
                  , #{researchUserId}
                  , #{remark}
                  , #{createUserId}
                  , getDate()
                )

    </insert>

    <!-- 근골격계 단위작업 수정 -->
    <update id="updateUnitWork" parameterType="com.she.health.model.MuscResearchUnit">
    /* MuscResearchMapper.updateUnitWork [MuscResearchUnit.xml] */
        UPDATE hea_musc_research_unit
           SET musc_research_dept_no = (select b.musc_research_dept_no
                                          from hea_musc_research_dept b
                                         where dept_cd = #{deptCd}
                                           and b.musc_research_no = #{muscResearchNo})
              ,research_cd = #{researchCd}
              ,process_cd = #{processCd}
              ,process_desc = #{processDesc}
              ,unit_work_nm = #{unitWorkNm}
              ,research_dt = #{researchDt}
              ,worker_cnt = #{workerCnt}
              ,dept_cd = #{deptCd}
              ,research_user_id = #{researchUserId}
              ,remark = #{remark}
              ,update_user_id = #{updateUserId}
              ,update_dt = getDate()
            where musc_research_unit_no = #{muscResearchUnitNo}
    </update>

    <!-- 근골격계 단위작업 삭제 -->
     <delete id= "deleteUnitWork">
        /* MuscResearchMapper.deleteUnitWork [MuscResearchUnit.xml] */
         delete from hea_musc_research_unit
        where musc_research_unit_no = #{muscResearchUnitNo}

    </delete>

        <!-- 근골격계 부담작업 No 목록 -->
   <select id="getResearchChklists" resultType="com.she.health.model.MuscResearchChklist">
     /* MuscResearchMapper.getResearchChklists [MuscResearchChklist.xml] */
     SELECT musc_research_chklist_no
            ,chklist_nm
            ,chklist_desc
            ,exposure_time
            ,exposure_time_desc
            ,exopsure_cnt
            ,exposure_cnt_desc
            ,tot_exposure_time
            ,body_desc
            ,position_desc
            ,weight_desc
            ,create_user_id
            ,create_dt
            ,update_user_id
            ,update_dt
         FROM hea_musc_research_chklist
         WHERE 1=1

   </select>

    <!-- 근골격계 기본조사 정보 저장 -->
    <insert id="createResearchUnitRslt" parameterType="com.she.health.model.MuscResearchRslt">
        <selectKey keyProperty= "muscResearchRsltNo" resultType= "int" order= "BEFORE">
            select next value for seq_hea_musc_research_rslt as musc_research_rslt_no
        </selectKey>
        /* MuscResearchMapper.createResearchUnitRslt [MuscResearchRslt.xml] */
       INSERT INTO hea_musc_research_rslt (
      musc_research_rslt_no
      , musc_research_unit_no
      , musc_research_chklist_no
      , work_nm
      , work_time
      , work_cnt
      , tot_exposure_time
      , final_value
      , create_user_id
      , create_dt
        <if test="updateUserId != null and !updateUserId.equals('')">
          , update_user_id
          , update_dt
        </if>
      )
      VALUES (
        #{muscResearchRsltNo}
        ,#{muscResearchUnitNo}
        ,#{muscResearchChklistNo}
        ,#{workNm}
        ,#{workTime}
        ,#{workCnt}
        ,#{totExposureTime}
        ,#{finalValue}
        ,#{createUserId}
        ,getdate()
        <if test="updateUserId != null and !updateUserId.equals('')">
            , #{updateUserId}
            , GETDATE()
        </if>
      )
    </insert>

        <!-- 근골격계 기본조사 정보 수정 -->
    <update id="updateResearchChklist" parameterType="com.she.health.model.MuscResearchRslt">
        /* MuscResearchMapper.updateResearchChklist [MuscResearchRslt.xml] */
      UPDATE hea_musc_research_rslt
        SET hea_musc_research_rslt.work_nm  = #{workNm}
            , hea_musc_research_rslt.work_time = #{workTime}
            , hea_musc_research_rslt.work_cnt = #{workCnt}
            , hea_musc_research_rslt.tot_exposure_time = #{totExposureTime}
            , hea_musc_research_rslt.final_value = #{finalValue}
            , hea_musc_research_rslt.update_user_id = #{updateUserId}
            , hea_musc_research_rslt.update_dt = getdate()
            FROM hea_musc_research_rslt hmrr
            INNER JOIN hea_musc_research_chklist hmrc
            ON hmrr.musc_research_chklist_no = hmrc.musc_research_chklist_no
            WHERE musc_research_rslt_no  = #{muscResearchRsltNo}
    </update>

  <!-- 근골격계 기본조사 정보 수정 -->
    <update id="updateMuscResearchChklist" parameterType="com.she.health.model.MuscResearch">
        /* MuscResearchMapper.updateMuscResearchChklist [MuscResearch.xml] */
        UPDATE A
           SET musc_research_state_cd = 'HMCS3'
          FROM hea_musc_research A,
               (SELECT hmrd.musc_research_no
                FROM hea_musc_research_unit hmru
               INNER JOIN hea_musc_research_rslt hmrr
                  ON hmrr.musc_research_unit_no = hmru.musc_research_unit_no
               INNER JOIN hea_musc_research_dept hmrd
                  ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
               WHERE hmrr.musc_research_rslt_no = #{muscResearchRsltNo}) B
          WHERE A.musc_research_no = B.musc_research_no
            AND A.musc_research_state_cd = 'HMCS2'
    </update>


   <!-- 근골격계 부담작업 No -->
   <select id="getResearchChklist" resultType="com.she.health.model.MuscResearchRslt">
        /* MuscResearchMapper.getResearchChklist [MuscResearchRslt.xml] */
      SELECT hmrr.musc_research_rslt_no
      , hmrr.musc_research_chklist_no
          , hmrr.create_user_id
            , hmrr.create_dt
         from hea_musc_research_rslt hmrr
         WHERE hmrr.musc_research_unit_no = #{muscResearchUnitNo}
   </select>


    <delete id= "deleteResearchChklist">
        /* MuscResearchMapper.deleteResearchChklist [MuscResearchRslt.xml] */
        delete from hea_musc_research_rslt
        where musc_research_unit_no = #{muscResearchUnitNo}
    </delete>

     <!-- 조사결과 목록 조회 -->
   <select id="getResearchRslt" parameterType="map" resultType="com.she.health.model.MuscResearchRslt">
        /* MuscResearchMapper.getResearchRslt [MuscResearchRslt.xml] */
        SELECT musc_research_rslt_no
              ,hmrd.musc_research_dept_no
              ,hmrr.musc_research_unit_no
              ,hmru.unit_work_nm
              ,work_nm
              ,hmrr.musc_research_chklist_no
              ,work_time
              ,work_cnt
              ,hmrr.tot_exposure_time
              ,hmrc.tot_exposure_time as total
              ,final_value
              ,hmrr.remark
              ,hmrr.create_user_id
              ,hmrr.create_dt
              ,hmrr.update_user_id
              ,hmrr.update_dt
              ,hmrd.dept_cd
              ,cd.dept_nm
              ,hmru.research_user_id
          FROM hea_musc_research_rslt hmrr
         INNER JOIN hea_musc_research_unit hmru
            ON hmru.musc_research_unit_no = hmrr.musc_research_unit_no
         INNER JOIN hea_musc_research_dept hmrd
            ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
         INNER JOIN com_dept cd
            ON hmrd.dept_cd = cd.dept_cd
         INNER JOIN hea_musc_research_chklist hmrc
            ON hmrc.musc_research_chklist_no = hmrr.musc_research_chklist_no
         WHERE hmrd.musc_research_no = #{muscResearchNo}
        <if test="deptCd != null and !deptCd.equals('')">
           AND hmrd.dept_cd = #{deptCd}
        </if>
         ORDER BY hmrd.dept_cd, hmrr.musc_research_chklist_no
    </select>
        <!-- 작업분류표 -->
    <select id="getRsltChklist" resultType="map">
        /* MuscResearchMapper.getRsltChklist [MuscResearchRslt.xml] */
          select  *
           from (
          select hmru.unit_work_nm
                ,hmrr.work_nm
                ,hmru.musc_research_unit_no
                ,hmrr.musc_research_chklist_no
                ,ISNULL((CASE hmrr.final_value WHEN 'O' THEN '조사대상' WHEN 'X' THEN '비대상' ELSE '비대상' END) , '비대상') as final_value
                ,hmrd.dept_cd
                ,hmrd.dept_cd + hmru.unit_work_nm as dept_unit_work
                ,cd.dept_nm
            from hea_musc_research_rslt hmrr
           INNER JOIN hea_musc_research_unit hmru
              ON hmru.musc_research_unit_no = hmrr.musc_research_unit_no
           INNER JOIN hea_musc_research_dept hmrd
              ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
           INNER JOIN com_dept cd
              ON hmrd.dept_cd = cd.dept_cd
           INNER JOIN hea_musc_research_chklist hmrc
              ON hmrr.musc_research_chklist_no = hmrc.musc_research_chklist_no
           WHERE hmrd.musc_research_no = #{muscResearchNo}
               ) r
           pivot
           (
               max(final_value)
               for musc_research_chklist_no in ([1], [2], [3], [4], [5] ,[6] ,[7] ,[8] ,[9] ,[10] ,[11])
           ) piv
    </select>

        <!-- 유해요인 조사 목록  -->
     <select id="getHarmfuls" resultType="com.she.health.model.MuscHarmful">
        /* MuscResearchMapper.getHarmfuls [MuscHarmful.xml] */
          select hmru.unit_work_nm
              ,hmru.process_desc
              ,hmru.process_cd
              ,cp.process_nm as process_nm
              ,hmh.survery_type
              ,case when hmh.survery_type = 'R' then '정기' when hmh.survery_type = 'I' then '수시' else null end as survery_type_nm
              ,hmh.survery_dt
              ,isnull(hmh.survery_user_id, hmru.research_user_id) as survery_user_id
              ,cu.user_nm as survery_user_nm
              ,hmru.dept_cd
              ,cd.dept_nm as dept_nm
              ,hmh.musc_harmful_no
              ,hmh.musc_research_unit_no
              ,cd.plant_cd
              ,hmh.update_dt
              ,hmh.update_user_id
              ,'개선요청' as improvement
              ,'즉시조치' as request
              ,(select count(*)
                   FROM hea_musc_research_unit hmruc
                  INNER JOIN hea_musc_research_rslt hmrrc
                    ON hmrrc.musc_research_unit_no = hmruc.musc_research_unit_no
                  LEFT OUTER JOIN hea_musc_harmful hmhc
                    ON hmhc.musc_research_unit_no = hmruc.musc_research_unit_no
                  LEFT OUTER JOIN hea_musc_harmful_eval hmhec
                    ON hmhec.musc_harmful_no = hmhc.musc_harmful_no
                    AND hmhec.musc_research_chklist_no = hmrrc.musc_research_chklist_no
                  LEFT OUTER JOIN hea_musc_research_chklist hmrc
                    ON hmrc.musc_research_chklist_no = hmrrc.musc_research_chklist_no
                    WHERE 1=1
                    AND hmrrc.final_value = 'O'
                    AND hmruc.musc_research_unit_no = hmh.musc_research_unit_no
              )
              as harmCnt
          FROM hea_musc_harmful hmh
         INNER JOIN hea_musc_research_unit hmru
            ON hmh.musc_research_unit_no = hmru.musc_research_unit_no
         INNER JOIN hea_musc_research_dept hmrd
            ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
         INNER JOIN hea_musc_research hmr
            ON hmr.musc_research_no = hmrd.musc_research_no
         INNER JOIN com_process cp
            ON hmru.process_cd = cp.process_cd
          LEFT OUTER JOIN com_user cu
              ON cu.user_id = isnull(hmh.survery_user_id, hmru.research_user_id)
          LEFT OUTER JOIN com_dept cd
            ON cd.dept_cd = hmru.dept_cd
         WHERE hmrd.musc_research_no = #{muscResearchNo}
        </select>


         <!-- 근골격계 단위작업 상세 -->
   <select id="getHarmful"  resultType="com.she.health.model.MuscHarmful">
        /* MuscResearchMapper.getHarmful [MuscHarmful.xml] */
          SELECT hmh.musc_harmful_no
                ,hmh.musc_research_unit_no
                ,hmh.survery_type
                ,case when hmh.survery_type = 'R' then '정기' when hmh.survery_type = 'I' then '수시' else null end as survery_type_nm
                ,hmh.survery_dt
                ,isnull(hmh.survery_user_id, hmru.research_user_id) as survery_user_id
                ,cu.user_nm as survery_user_nm
                ,hmr.plant_cd
                ,hmru.dept_cd
                ,cd.dept_nm as dept_nm
                ,hmru.unit_work_nm
                ,hmru.process_cd
                ,cp.process_nm as process_nm
                ,hmru.process_desc
                ,hmh.change_yn_equip
                ,hmh.change_yn_workload
                ,hmh.change_yn_speed
                ,hmh.change_yn_business
                ,hmh.change_yn_etc
                ,hmh.summary_equip
                ,hmh.summary_workload
                ,hmh.summary_speed
                ,hmh.summary_business
                ,hmh.summary_etc
                ,hmh.summary_overall
                ,hmh.create_user_id
                ,hmh.create_dt
            FROM hea_musc_harmful hmh
           INNER JOIN hea_musc_research_unit hmru
              ON hmh.musc_research_unit_no = hmru.musc_research_unit_no
           INNER JOIN hea_musc_research_dept hmrd
              ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
            LEFT OUTER JOIN hea_musc_research hmr
              ON hmr.musc_research_no = hmrd.musc_research_no
            LEFT OUTER JOIN com_dept cd
              ON cd.dept_cd = hmru.dept_cd
            LEFT OUTER JOIN com_process cp
              ON hmru.process_cd = cp.process_cd
            LEFT OUTER JOIN com_user cu
              ON cu.user_id = isnull(hmh.survery_user_id, hmru.research_user_id)
           WHERE hmh.musc_harmful_no = #{muscHarmfulNo}
   </select>

    <!-- 근골격계 단위작업 저장 -->
    <insert id="createHarmful" parameterType="com.she.health.model.MuscHarmful">
        <selectKey keyProperty= "muscHarmfulNo" resultType= "int" order= "BEFORE">
            select next value for seq_hea_musc_harmful as muscHarmfulNo
        </selectKey>
        /* MuscResearchMapper.createHarmful [MuscHarmful.xml] */
            INSERT INTO hea_musc_harmful
            (
                musc_harmful_no
               ,musc_research_unit_no
               ,create_user_id
               ,create_dt
            )
            SELECT next value for seq_hea_musc_harmful as musc_harmful_no
                  ,hmru.musc_research_unit_no
                ,#{createUserId} as create_user_id
                ,getdate() as create_dt
              FROM hea_musc_research_unit hmru
             INNER JOIN hea_musc_research_dept hmrd
                ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
             INNER JOIN hea_musc_research_rslt hmrr
                ON hmru.musc_research_unit_no = hmrr.musc_research_unit_no
               AND hmrr.final_value = 'O'
             WHERE hmrd.musc_research_no = #{muscResearchNo}
             GROUP BY hmru.musc_research_unit_no;

    </insert>

    <!-- 근골격계 단위작업 수정 -->
    <update id="updateHarmful" parameterType="com.she.health.model.MuscHarmful">
        /* MuscResearchMapper.updateHarmful [MuscHarmful.xml] */
         UPDATE hea_musc_harmful
            SET survery_type = #{surveryType}
                ,survery_dt = #{surveryDt}
                ,survery_user_id = #{surveryUserId}
                ,dept_cd = #{deptCd}
                ,change_yn_equip = #{changeYnEquip}
                ,change_yn_workload = #{changeYnWorkload}
                ,change_yn_speed = #{changeYnSpeed}
                ,change_yn_business = #{changeYnBusiness}
                ,change_yn_etc = #{changeYnEtc}
                ,summary_equip = #{summaryEquip}
                ,summary_workload = #{summaryWorkload}
                ,summary_speed = #{summarySpeed}
                ,summary_business = #{summaryBusiness}
                ,summary_etc = #{summaryEtc}
                ,summary_overall = #{summaryOverall}
                ,update_user_id = #{updateUserId}
                ,update_dt = getdate()
            where musc_harmful_no = #{muscHarmfulNo}
    </update>

    <delete id= "deleteHarmful">
        /* MuscResearchMapper.deleteHarmful [MuscHarmful.xml] */
         delete from hea_musc_harmful
        where musc_harmful_no = #{muscHarmfulNo}
    </delete>

    <select id="getHarmfulResearchNo" resultType="int">
        /* MuscResearchMapper.getHarmfulResearchNo [MuscHarmful.xml] */
        SELECT distinct isnull(max(hmrd.musc_research_no), 0)
          FROM hea_musc_harmful hmh
         INNER JOIN hea_musc_research_unit hmru
            ON hmh.musc_research_unit_no = hmru.musc_research_unit_no
         INNER JOIN hea_musc_research_dept hmrd
            ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
         INNER JOIN hea_musc_research hmr
            ON hmrd.musc_research_no = hmr.musc_research_no
         WHERE hmh.musc_harmful_no = #{muscHarmfulNo}
           AND hmr.musc_research_state_cd = 'HMCS4'
    </select>

    <select id="getSingleHarmfulSurvey" resultType="com.she.health.model.MuscHarmfulEval">
        /* MuscResearchMapper.getSingleHarmfulSurvey [MuscHarmfulEval.xml] */
        SELECT *
        FROM hea_musc_harmful_eval
        where musc_harmful_no = #{muscHarmfulNo}
        and musc_research_chklist_no = #{muscResearchChklistNo}
    </select>

    <!--  근골격계 기본조사 정보 저장  -->
    <insert id="createHarmfulSurvey" parameterType="com.she.health.model.MuscHarmfulEval">
        <selectKey keyProperty= "muscHarmfulEvalNo" resultType= "int" order= "BEFORE">
            select next value for seq_hea_musc_harmful_eval as musc_harmful_eval_no
        </selectKey>
        /* MuscResearchMapper.createHarmfulSurvey [MuscHarmfulEval.xml] */
               INSERT INTO hea_musc_harmful_eval (
                      musc_harmful_eval_no
                        ,musc_harmful_no
                        ,musc_research_chklist_no
                        ,workload
                        ,work_cnt
                        ,total_score
                        ,causes
                        ,remark
                        ,harmful_code
                        ,create_user_id
                        ,create_dt
                      )
                      VALUES (
                      #{muscHarmfulEvalNo}
                        , #{muscHarmfulNo}
                        , #{muscResearchChklistNo}
                        , #{workload}
                        , #{workCnt}
                        , #{totalScore}
                        , #{causes}
                        , #{remark}
                        , #{harmfulCode}
                        , #{createUserId}
                        , getDate()
                      )
    </insert>

    <!--  근골격계 기본조사 정보 저장  -->
   <!--  <insert id="createHarmfulSurvey" parameterType="com.she.health.model.MuscHarmfulEval">
        <selectKey keyProperty= "muscHarmfulEvalNo" resultType= "int" order= "BEFORE">
            select next value for seq_hea_musc_harmful_eval as musc_harmful_eval_no
        </selectKey>
        /* MuscResearchMapper.createHarmfulSurvey [MuscHarmfulEval.xml] */
               INSERT INTO hea_musc_harmful_eval
                (
                    musc_harmful_eval_no
                   ,musc_harmful_no
             ,musc_research_chklist_no
                   ,create_user_id
                   ,create_dt
                )
                SELECT next value for seq_hea_musc_harmful_eval as musc_harmful_eval_no
                      ,hmh.musc_harmful_no
              ,hmrr.musc_research_chklist_no
                    ,#{createUserId} as create_user_id
                    ,getdate() as create_dt
                  FROM hea_musc_harmful hmh
                 INNER JOIN hea_musc_research_unit hmru
                    ON hmru.musc_research_unit_no = hmh.musc_research_unit_no
                 INNER JOIN hea_musc_research_rslt hmrr
              ON hmrr.musc_research_unit_no = hmh.musc_research_unit_no
                 WHERE 1=1
                 AND hmh.musc_harmful_no = #{muscHarmfulNo}
                 AND hmrr.final_value = 'O'
                 GROUP BY hmh.musc_harmful_no, musc_research_chklist_no;
    </insert>   -->


    <delete id= "deleteHarmfulSurvey">
        /* MuscResearchMapper.deleteHarmfulSurvey [MuscHarmfulEval.xml] */
         delete from hea_musc_harmful_eval
          where musc_harmful_eval_no = #{muscHarmfulEvalNo}
    </delete>

    <!--근골격계 유해요인 조사 - 작업조건 조사 update  -->
    <update id="updateHarmfulSurvey" parameterType="com.she.health.model.MuscHarmfulEval">
        /* MuscResearchMapper.updateHarmfulSurvey [MuscHarmfulEval.xml] */
        UPDATE hea_musc_harmful_eval
         SET musc_research_chklist_no = #{muscResearchChklistNo}
              ,workload = #{workload}
              ,work_cnt = #{workCnt}
              ,total_score = #{totalScore}
              ,causes = #{causes}
              ,remark = #{remark}
              ,harmful_code = #{harmfulCode}
              ,update_user_id = #{updateUserId}
              ,update_dt = GETDATE()
         WHERE musc_harmful_eval_no = #{muscHarmfulEvalNo}
    </update>

    <!-- 유해인자 텝 조회  -->
     <select id="getHarmfulSurvey" parameterType="map"  resultType="com.she.health.model.MuscHarmfulEval">
            /* MuscResearchMapper.getHarmfulSurvey [MuscHarmfulEval.xml] */
             SELECT hmru.musc_research_unit_no
                   ,unit_work_nm
                 ,hmrr.work_nm
                 ,hmrr.musc_research_chklist_no
                 ,hmrr.final_value
                   ,hmrc.chklist_desc
                 ,hmhe.musc_harmful_no
                 ,hmhe.musc_harmful_eval_no
                 ,hmhe.musc_research_chklist_no
                 ,hmhe.workload
                 ,hmhe.work_cnt
                 ,hmhe.total_score
                 ,hmhe.causes
                 ,hmhe.remark
               FROM hea_musc_research_unit hmru
               INNER JOIN hea_musc_research_rslt hmrr
               ON hmrr.musc_research_unit_no = hmru.musc_research_unit_no
               LEFT OUTER JOIN hea_musc_harmful hmh
               ON hmh.musc_research_unit_no = hmru.musc_research_unit_no
               LEFT OUTER JOIN hea_musc_harmful_eval hmhe
               ON hmhe.musc_harmful_no = hmh.musc_harmful_no
               AND hmhe.musc_research_chklist_no = hmrr.musc_research_chklist_no
               LEFT OUTER JOIN hea_musc_research_chklist hmrc
               ON hmrc.musc_research_chklist_no = hmrr.musc_research_chklist_no
               WHERE 1=1
               AND hmrr.final_value = 'O'
               AND hmru.musc_research_unit_no = #{muscResearchUnitNo}
     </select>

    <update id="completeMuscImpr">
        /* MuscResearchMapper.completeMuscImpr [MuscResearch.xml] */
        UPDATE hea_musc_research
            SET appr_rqst_no = #{apprRqstNo}
        <if test="muscResearchStateCd != null and !muscResearchStateCd.equals('')">
               ,musc_research_state_cd = #{muscResearchStateCd}
        </if>
         WHERE musc_research_no = #{muscResearchNo}
    </update>

<!-- 여기까지 -->
    <!-- 작업분류표 삭제 -->
    <delete id="deleteMuscSurveyChklist">
        DELETE FROM hea_musc_survey_chklist
        WHERE hea_musc_survey_no = #{heaMuscSurveyNo}
    </delete>

    <!-- 작업분류표 추가정보 저장 -->
    <update id="updateMuscSurveyChklist" parameterType="com.she.health.model.MuscSurveyChklist">
        UPDATE hea_musc_survey_chklist
           SET work_facil_val = #{workFacilVal}
             , work_facil_s_tm = #{workFacilSTm}
             , work_qnty_val = #{workQntyVal}
             , work_qnty_s_tm = #{workQntySTm}
             , work_speed_val = #{workSpeedVal}
             , work_speed_s_tm = #{workSpeedSTm}
             , work_contents = #{workContents}
             , dose_lvl = #{doseLvl}
             , work_lvl = #{workLvl}
             , cal_pnt = #{calPnt}
         WHERE hea_musc_survey_chklist_no = #{heaMuscSurveyChklistNo}
           AND process_cd = #{processCd}
    </update>
    <!-- 작업별 조사결과 저장 -->
    <insert id="createMuslSurveyRslt" parameterType="com.she.health.model.MuscSurveyRslt">
        INSERT INTO hea_musl_survey_rslt (
              hea_musc_survey_chklist_no, cls_cd
        ) VALUES (
              #{heaMuscSurveyChklistNo}, #{clsCd}
        )
    </insert>

    <!-- 작업별 조사결과 추가정보 저장 -->
    <update id="updateMuslSurveyRslt" parameterType="com.she.health.model.MuscSurveyRslt">
        UPDATE hea_musl_survey_rslt
           SET cause = #{cause}
             , remarks = #{remarks}
         WHERE hea_musc_survey_chklist_no = #{heaMuscSurveyChklistNo}
           AND cls_cd = #{clsCd}
    </update>

    <!-- 근골격계기본조사결과 삭제 -->
    <delete id="deleteMuslSurveyRslt">
        DELETE FROM hea_musl_survey_rslt
         WHERE hea_musc_survey_chklist_no = #{heaMuscSurveyChklistNo}
    </delete>

    <!-- 근골격계 기본조사 진행단계 변경 -->
    <update id="updatePStepCd">
        UPDATE hea_musc_survey
           SET p_step_cd = #{pStepCd}
         WHERE hea_musc_survey_no = #{heaMuscSurveyNo}
    </update>

    <!-- 근골격계 기본조사 결재요청번호 변경 -->
    <update id="updateApprRqstNo">
        UPDATE hea_musc_survey
           SET appr_rqst_no = #{apprRqstNo}
         WHERE hea_musc_survey_no = #{heaMuscSurveyNo}
    </update>

    <select id="getMuscResearchDepts" resultType="com.she.health.model.MuscResearchDept">
        /* MuscResearchMapper.getMuscResearchDepts [MuscResearch.xml] */
        SELECT hmrd.musc_research_dept_no
              ,hmrd.musc_research_no
              ,hmrd.dept_cd
              ,cd.dept_nm
              ,hmrd.send_yn
              ,format(hmrd.send_dt, 'yyyy-MM-dd HH:mm') as send_dt
              ,hmrd.send_user_id
              ,cu.user_nm as send_user_nm
              ,hmrd.create_user_id
              ,hmrd.create_dt
              ,hmrd.update_user_id
              ,hmrd.update_dt
              ,(SELECT count(*) cnt
                  FROM hea_musc_research_unit hmru
                 INNER JOIN hea_musc_research_rslt hmrr
                    ON hmru.musc_research_unit_no = hmrr.musc_research_unit_no
                   AND hmrr.update_dt is not null
                 WHERE hmru.musc_research_dept_no = hmrd.musc_research_dept_no) as cnt_survey_result
              ,stuff((select ',' + u.dept_cd
                from hea_musc_research_unit hmru
                left outer join com_user u on u.user_id = hmru.research_user_id
                where hmru.musc_research_dept_no = hmrd.musc_research_dept_no
                for xml path('')), 1, 1, '') as research_dept_cd
              ,stuff((select ',' + hmru.research_user_id
                from hea_musc_research_unit hmru
                left outer join com_user u on u.user_id = hmru.research_user_id
                where hmru.musc_research_dept_no = hmrd.musc_research_dept_no
                for xml path('')), 1, 1, '') as research_user_id
          FROM hea_musc_research_dept hmrd
         INNER JOIN com_dept cd
            ON hmrd.dept_cd = cd.dept_cd
          LEFT OUTER JOIN com_user cu
            ON hmrd.send_user_id = cu.user_id
         WHERE hmrd.musc_research_no = #{muscResearchNo}
    </select>

    <insert id="createMuscResearchDept" parameterType="com.she.health.model.MuscResearchDept">
        /* MuscResearchMapper.getMuscResearchDepts [MuscResearch.xml] */
        <selectKey keyProperty= "muscResearchDeptNo" resultType= "int" order= "BEFORE">
            select next value for seq_hea_musc_research_dept
        </selectKey>
        INSERT INTO hea_musc_research_dept
                    (musc_research_dept_no
                    ,musc_research_no
                    ,dept_cd
                    ,send_yn
                    ,send_user_id
                    ,send_dt
                    ,create_user_id
                    ,create_dt)
             VALUES (#{muscResearchDeptNo}
                    ,#{muscResearchNo}
                    ,#{deptCd}
                    ,'N'
                    ,null
                    ,null
                    ,#{createUserId}
                    ,getdate())
    </insert>

    <update id="updateMuscResearchDept" parameterType="com.she.health.model.MuscResearchDept">
        /* MuscResearchMapper.updateMuscResearchDept [MuscResearch.xml] */
        UPDATE A
           SET dept_cd = #{deptCd}
              ,send_yn = case when isnull(#{sendYn}, '') = '' then send_yn else 'Y' end
              ,send_user_id = case when isnull(#{sendUserId}, '') = '' then send_user_id else #{sendUserId} end
              ,send_dt = case when isnull(#{sendUserId}, '') = '' then send_dt else getdate() end
              ,update_user_id = #{updateUserId}
              ,update_dt = getdate()
          FROM hea_musc_research_dept A
          WHERE A.send_yn != 'Y'
            AND musc_research_dept_no = #{muscResearchDeptNo}
    </update>

    <delete id="deleteMuscResearchDept">
        /* MuscResearchMapper.deleteMuscResearchDept [MuscResearch.xml] */
        DELETE FROM hea_musc_research_dept
         WHERE musc_research_no = #{muscResearchNo}
    </delete>

    <select id= "getHarmfulExcel" resultType= "java.util.LinkedHashMap">
        SELECT
            hmh.musc_harmful_no
            ,hmh.musc_research_unit_no
            ,hmru.unit_work_nm
            ,hmru.dept_cd
            ,isnull(hmh.survery_user_id, hmru.research_user_id) as survery_user_id
            ,isnull(hmru.process_desc, '') as process_desc
            ,isnull(hmh.survery_type, '') as survery_type
            ,isnull(convert(char(10), hmh.survery_dt, 23), '') as survery_dt
            ,isnull(hmh.change_yn_equip, '') as change_yn_equip
            ,isnull(hmh.summary_equip, '') as summary_equip
            ,isnull(hmh.change_yn_workload, '') as change_yn_workload
            ,isnull(hmh.summary_workload, '') as summary_workload
            ,isnull(hmh.change_yn_speed, '') as change_yn_speed
            ,isnull(hmh.summary_speed, '') as summary_speed
            ,isnull(hmh.change_yn_business, '') as change_yn_business
            ,isnull(hmh.summary_business, '') as summary_business
            ,isnull(hmh.change_yn_etc, '') as change_yn_etc
            ,isnull(hmh.summary_etc, '') as summary_etc
            ,hmrr.work_nm
            ,hmrr.musc_research_chklist_no
            ,isnull(convert(varchar, hmhe.workload), '') as workload
            ,isnull(convert(varchar, hmhe.work_cnt), '') as work_cnt
            ,isnull(convert(varchar, hmhe.harmful_code), '') as harmful_code
            ,isnull(convert(varchar, hmhe.causes), '') as causes
            ,isnull(convert(varchar, hmhe.remark), '') as remark
        FROM hea_musc_harmful hmh
        JOIN hea_musc_research_unit hmru
            ON hmh.musc_research_unit_no = hmru.musc_research_unit_no
        JOIN hea_musc_research_dept hmrd
            ON hmru.musc_research_dept_no = hmrd.musc_research_dept_no
        JOIN hea_musc_research_rslt hmrr
            ON hmrr.musc_research_unit_no = hmru.musc_research_unit_no
        LEFT JOIN hea_musc_harmful_eval hmhe
             ON hmhe.musc_harmful_no = hmh.musc_harmful_no
             AND hmhe.musc_research_chklist_no = hmrr.musc_research_chklist_no
        LEFT JOIN hea_musc_research_chklist hmrc
             ON hmrc.musc_research_chklist_no = hmrr.musc_research_chklist_no
        LEFT JOIN hea_musc_research hmr
             ON hmr.musc_research_no = hmrd.musc_research_no
        LEFT JOIN com_dept cd
             ON cd.dept_cd = hmh.dept_cd
        LEFT JOIN com_process cp
             ON hmru.process_cd = cp.process_cd
        LEFT OUTER JOIN com_user cu
             ON cu.user_id = isnull(hmh.survery_user_id, hmru.research_user_id)
        WHERE hmh.musc_harmful_no in
              <foreach collection= "list" item= "muscHarmfulNo" separator= "," open= "(" close= ")" >
                    #{muscHarmfulNo}
              </foreach>
        and hmrr.final_value = 'O'
    </select>

</mapper>