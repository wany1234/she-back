<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.baseInfo.SAPMAT.mapper.SAPMATMapper">
    
    <!-- 자재 조회 -->
    <select id= "getSapMats" resultType= "HashMap">
        /* SAPMATMapper.getSapMats [SAPMAT.xml] */
        select sm.mat_code
            ,sm.mat_name
            ,sm.mat_name_eng
            ,sm.pack_unit
            ,sm.mat_group_cd
            ,'(' + smg.mat_up_group_nm + ') ' + smg.mat_group_nm as  mat_group_nm
            ,sm.mat_type
            ,sm.use_yn
            ,case when use_yn = 'Y' then '사용'
                else '미사용'
             end as use_yn_nm
            ,sm.create_dt
            ,sm.update_dt
            ,count(*) over(order by (select 1)) as total_cnt
        from SAP_MAT sm
        left outer join sap_mat_group smg
        on sm.mat_group_cd = smg.mat_group_cd
        where 1=1
        and sm.mat_code like '%' + #{matCode} + '%'
        and sm.mat_name like '%' + #{matName} + '%'
        <if test= "matGroupCd != null and !matGroupCd.equals('')">
        and sm.mat_group_cd = #{matGroupCd}
        </if>
        <if test= "useYn != null and !useYn.equals('')">
        and sm.use_yn = #{useYn}
        </if>
        <choose>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_code asc")'>
              order by mat_code
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_code desc")'>
            order by mat_code desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_name asc")'>
            order by mat_name
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_name desc")'>
            order by mat_name desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_name_eng asc")'>
            order by mat_name_eng
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_name_eng desc")'>
            order by mat_name_eng desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_group_nm asc")'>
            order by mat_group_nm
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("mat_group_nm desc")'>
            order by mat_group_nm desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("pack_unit asc")'>
            order by pack_unit
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("pack_unit desc")'>
            order by pack_unit desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("use_yn_nm asc")'>
            order by use_yn_nm
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("use_yn_nm desc")'>
            order by use_yn_nm
          </when>
          <otherwise>
            order by sm.mat_group_cd
          </otherwise>
        </choose>
        <if test= "pageSize != null and pageSize > -1">
        OFFSET ((#{pageNumber} - 1) * #{pageSize}) ROWS
        FETCH NEXT #{pageSize} ROWS ONLY
        </if>
    </select>
    
    <!-- 자재 상세조회 -->
    <select id= "getSapMat" resultType= "com.she.baseInfo.model.SAPMAT">
        /* SAPMATMapper.getSapMat [SAPMAT.xml] */
        select sm.mat_code
            ,sm.mat_name
            ,sm.pack_unit
            ,sm.mat_group_cd
            ,'(' + smg.mat_up_group_nm + ') ' + smg.mat_group_nm as  mat_group_nm
            ,sm.mat_type
            ,sm.use_yn
            ,case when use_yn = 'Y' then '사용'
                else '미사용'
             end as use_yn_nm
            ,sm.create_dt
            ,sm.update_dt
        from SAP_MAT sm
        left outer join sap_mat_group smg
        on sm.mat_group_cd = smg.mat_group_cd
        where 1=1
        and sm.mat_code = #{matCode}
    </select>
    
    <select id="getMatVendor" resultType= "com.she.baseInfo.model.MatVendor">
        /* SAPMATMapper.getMatVendor [SAPMAT.xml] */
        with A as (
            select cc.chem_prod_nm_kr
                ,cc.chem_prod_nm_en
                ,cc.sap_mat_cd
                ,cc.maker_cd
            from com_chemprod cc
            group by cc.maker_cd
                ,cc.sap_mat_cd
                ,cc.chem_prod_nm_kr
                ,cc.chem_prod_nm_en
        )       
        select smv.mat_code
            ,A.chem_prod_nm_kr
            ,A.chem_prod_nm_en
            ,smv.vendor_cd
            ,cvm.vendor_nm
            ,smv.rate
        from sap_mat_vendor smv
        inner join A
        on smv.mat_code = A.sap_mat_cd
        and smv.vendor_cd = A.maker_cd
        inner join com_vendor_mst cvm
        on cvm.vendor_cd = smv.vendor_cd
        where smv.mat_code = #{matCode}
    </select>
    
    <select id="getSapMatVendor" resultType= "com.she.baseInfo.model.MatVendor">
        /* SAPMATMapper.getSapMatVendor [SAPMAT.xml] */
        with A as (
            select cc.chem_prod_nm_kr
                ,cc.chem_prod_nm_en
                ,cc.sap_mat_cd
                ,cc.maker_cd
            from com_chemprod cc
            group by cc.maker_cd
                ,cc.sap_mat_cd
                ,cc.chem_prod_nm_kr
                ,cc.chem_prod_nm_en
        )       
        select
            stuff((
                select ', ' + plant.code_nm
                from com_vendor_plant cvp
                inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
                 on cvp.plant_cd = plant.code
                where cvp.vendor_cd = cvm.vendor_cd
                for xml path('')
            ), 1, 1, '') as plant_nms
            ,A.sap_mat_cd
            ,vendorAtt.code_nm as vendor_att_nm
            ,cvm.vendor_nm
            ,cvm.vendor_cd
            ,co.origin_nm_kr
            ,cvm.biz_num
            ,A.chem_prod_nm_kr
            ,A.chem_prod_nm_en
            ,smv.rate
        from com_vendor_mst cvm
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_VENDOR_ATT') vendorAtt
         on cvm.vendor_att_cd = vendorAtt.code
        inner join chm_origin co
        on cvm.origin_cd = co.origin_cd
        inner join A
        on cvm.vendor_cd = A.maker_cd
        left outer join sap_mat_vendor smv
        on smv.mat_code = A.sap_mat_cd
        and smv.vendor_cd = A.maker_cd
        and cvm.vendor_cd = smv.vendor_cd
        where 1=1
        and cvm.vendor_nm like '%' + #{vendorNm} + '%'
        <if test= "plantCd != null and !plantCd.equals('')">
        and exists (
            select 1
            from com_vendor_plant cvp
            where cvp.vendor_cd = cvm.vendor_cd
            and cvp.plant_cd = #{plantCd}
        )
        </if>
        <if test= "matCode != null and !matCode.equals('')">
        and A.sap_mat_cd = #{matCode}
        </if>
       <!--  <if test= "vendorTypeCd != null and !vendorTypeCd.equals('')">
        and cvm.vendor_type_cd = #{vendorTypeCd}
        </if> -->
    </select>
    
    <delete id="deleteSapMatVendor">
        /* SAPMATMapper.deleteSapMatVendor [SAPMAT.xml] */
        delete from sap_mat_vendor
        where mat_code = #{matCode}
    </delete>
    
    <insert id="createSapMatVendor" parameterType="com.she.baseInfo.model.MatVendor">
        /* SAPMATMapper.createSapMatVendor [SAPMAT.xml] */
        insert into sap_mat_vendor
            (mat_code
            ,vendor_cd
            ,rate)
        values
            (#{matCode}
            ,#{vendorCd}
            ,#{rate})
    </insert>
    
    <!-- 자재 그룹 조회 -->
    <select id= "getSapMatGroups" resultType= "com.she.baseInfo.model.SapMatGroup">
        /* SAPMATMapper.getSapMatGroups [SAPMAT.xml] */
        select smg.mat_group_cd
            ,smg.mat_group_nm
            ,'(' + smg.mat_up_group_nm + ') ' + smg.mat_group_nm as  mat_group_nm_up
            ,smg.mat_up_group_nm
            ,smg.output_order
        from sap_mat_group smg
        where 1=1
        order by smg.output_order
    </select>
    
</mapper>