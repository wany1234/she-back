<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.baseInfo.facility.mapper.FacilityMapper">

    <!-- 안전설비마스터 목록 조회 -->
    <select id= "getFacilityMsts" resultType= "com.she.baseInfo.model.FacilityMst">
        select sfm.saf_facility_cd
            ,sfm.plant_cd
            ,plant.code_nm as plant_nm
            ,sfm.facility_nm
            ,sfm.install_locate
            ,sfm.process_cd
            ,cp.process_nm
            ,sfm.install_ymd
            ,sfm.install_conn
            ,sfm.vol
            ,sfm.vol_unit
            ,sfm.dept_cd
            ,cd.dept_nm
            ,sfm.saf_mgr_psn
            ,sfm.law_chk_yn
            ,sfm.self_chk_yn
            ,sfm.law_chk_ymd
            ,sfm.self_chk_ymd
            ,sfm.insp_chk_ymd
            ,sfm.law_chk_cye_cd
            ,lawcheckcycle.code_nm as law_chk_cye_nm
            ,sfm.self_chk_cye_cd
            ,selfcheckcycle.code_nm as self_chk_cye_nm
            ,sfm.disuse_yn
            ,sfm.disuse_yy
            ,sfm.remark
            ,sfm.saf_facility_type_cd
            ,sft.saf_facility_type_nm
            ,isnull(sfm.facility_psm_cd, 'FPSM0') as facility_psm_cd
            ,facilityPsm.code_nm as facility_psm_nm
            ,sfm.saf_lsn_yn
            ,case when sfm.saf_lsn_yn = 'Y' then '관련'
                else '미관련'
             end as saf_lsn_yn_nm
            ,sfm.saf_lsn_cye_cd
            ,lsnCye.code_nm as saf_lsn_cye_nm
            ,sfm.saf_chk_yn
            ,case when sfm.saf_chk_yn = 'Y' then '관련'
                else '미관련'
             end as saf_chk_yn_nm
            ,sfm.saf_chk_cye_cd
            ,chkCye.code_nm as saf_chk_cye_nm
            ,convert(CHAR(10), sfm.create_dt, 23) as create_dt
            ,sfm.create_user_id
            ,convert(CHAR(10), sfm.update_dt, 23) as update_dt
            ,sfm.update_user_id
            ,sfm.facility_mgr_num
            ,sfm.chk_pass_num
            ,sfm.chk_pass_dt
            , case
                 when dbo.GET_USER_NM(sfm.update_user_id) = '' then dbo.GET_USER_NM(sfm.create_user_id)
                 else dbo.GET_USER_NM(sfm.update_user_id) end as writer_user_nm
            , case when sfm.update_dt is null then convert(date, sfm.create_dt) else convert(date, sfm.update_dt) end   as writer_dt
        from saf_facility_mst sfm
        inner join saf_facility_type sft
        on sfm.saf_facility_type_cd = sft.saf_facility_type_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_LAW_CHK_CYE') lawcheckcycle
         on sfm.law_chk_cye_cd = lawcheckcycle.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_SELF_CHK_CYE') selfcheckcycle
         on sfm.self_chk_cye_cd = selfcheckcycle.code
        left outer join com_dept cd
        on sfm.dept_cd = cd.dept_cd
        left outer join com_process cp
        on sfm.process_cd = cp.process_cd
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on sfm.plant_cd = plant.code
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_FACILITY_PSM') facilityPsm
         on facilityPsm.code = isnull(sfm.facility_psm_cd, 'FPSM0')
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_SELF_CHK_CYE') lsnCye
         on sfm.saf_lsn_cye_cd = lsnCye.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_SELF_CHK_CYE') chkCye
         on sfm.saf_chk_cye_cd = chkCye.code
        where 1=1
        and sfm.facility_nm like '%' + #{facilityNm} + '%'
        and sfm.saf_facility_cd like '%' + #{safFacilityCd} + '%'
        <if test= "installLocate != null and !installLocate.equals('')">
        and sfm.install_locate like '%' + #{installLocate} + '%'
        </if>
        <if test= "safFacilityTypeCd != null and !safFacilityTypeCd.equals('')">
        and sfm.saf_facility_type_cd in (select saf_facility_type_cd from dbo.GET_UNDER_FACILITY_TYPE(#{safFacilityTypeCd}))
        </if>
        <if test= "deptCd != null and !deptCd.equals('')">
        and sfm.dept_cd = #{deptCd}
        </if>
        <if test= "processCd != null and !processCd.equals('')">
        and sfm.process_cd = #{processCd}
        </if>
        <if test= "plantCd != null and !plantCd.equals('')">
        and sfm.plant_cd = #{plantCd}
        </if>
        <if test= "disuseYn != null and !disuseYn.equals('')">
        and isnull(sfm.disuse_yn, 'N') = #{disuseYn}
        </if>
        <if test= "safLsnYn != null and !safLsnYn.equals('')">
        and isnull(sfm.saf_lsn_yn, 'N') = #{safLsnYn}
        </if>
        <if test= "safChkYn != null and !safChkYn.equals('')">
        and isnull(sfm.saf_chk_yn, 'N') = #{safChkYn}
        </if>
        <choose>
            <when test= "safCheckTypeCd == 'LAWCK'">
                and sfm.law_chk_yn = 'Y'
            </when>
            <when test= "safCheckTypeCd == 'SELFC'">
                and sfm.self_chk_yn = 'Y'
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by writer_dt desc, sfm.dept_cd, sfm.process_cd 
    </select>
    
    <!-- 안전설비마스터 상세조회 -->
    <select id= "getFacilityMst" resultType= "com.she.baseInfo.model.FacilityMst">
    /* getFacilityMst [안전설비마스터 상세조회] */
        select sfm.saf_facility_cd
            ,sfm.plant_cd
            ,plant.code_nm as plant_nm
            ,sfm.facility_nm
            ,sfm.install_locate
            ,sfm.process_cd
            ,cp.process_nm
            ,sfm.install_ymd
            ,sfm.install_conn
            ,sfm.vol
            ,sfm.vol_unit
            ,sfm.dept_cd
            ,cd.dept_nm
            ,sfm.saf_mgr_psn
            ,sfm.law_chk_yn
            ,sfm.self_chk_yn
            ,sfm.law_chk_ymd
            ,sfm.self_chk_ymd
            ,sfm.insp_chk_ymd
            ,sfm.law_chk_cye_cd
            ,lawcheckcycle.code_nm as law_chk_cye_nm
            ,sfm.self_chk_cye_cd
            ,selfcheckcycle.code_nm as self_chk_cye_nm
            ,sfm.disuse_yn
            ,sfm.disuse_yy
            ,sfm.remark
            ,sfm.saf_facility_type_cd
            ,sft.saf_facility_type_nm
            ,isnull(sfm.facility_psm_cd, 'FPSM0') as facility_psm_cd
            ,facilityPsm.code_nm as facility_psm_nm
            ,sfm.saf_lsn_yn
            ,sfm.saf_lsn_cye_cd
            ,lsnCye.code_nm as saf_lsn_cye_nm
            ,sfm.saf_chk_yn
            ,sfm.saf_chk_cye_cd
            ,chkCye.code_nm as saf_chk_cye_nm
            ,convert(CHAR(10), sfm.create_dt, 23) as create_dt
            ,sfm.create_user_id
            ,convert(CHAR(10), sfm.update_dt, 23) as update_dt
            ,sfm.update_user_id
            ,sfm.chk_pass_num
            ,sfm.chk_pass_dt
        from saf_facility_mst sfm
        inner join saf_facility_type sft
        on sfm.saf_facility_type_cd = sft.saf_facility_type_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_LAW_CHK_CYE') lawcheckcycle
         on sfm.law_chk_cye_cd = lawcheckcycle.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_SELF_CHK_CYE') selfcheckcycle
         on sfm.self_chk_cye_cd = selfcheckcycle.code
        left outer join com_dept cd
         on sfm.dept_cd = cd.dept_cd
        left outer join com_process cp
         on sfm.process_cd = cp.process_cd
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on sfm.plant_cd = plant.code
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_FACILITY_PSM') facilityPsm
         on facilityPsm.code = isnull(sfm.facility_psm_cd, 'FPSM0')
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_SELF_CHK_CYE') lsnCye
         on sfm.saf_lsn_cye_cd = lsnCye.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_SELF_CHK_CYE') chkCye
         on sfm.saf_chk_cye_cd = chkCye.code
        where saf_facility_cd = #{safFacilityCd}
    </select>
    
    <!-- 안전설비유형 관리항목 조회 -->
    <select id= "getFacilityTypeItems" resultType= "com.she.baseInfo.model.FacilityTypeItem">
        select sfm.saf_facility_cd
            ,sfti.saf_facility_type_cd
            ,sft.saf_facility_type_nm
            ,sftiv.saf_facility_type_item_no
            ,sfti.saf_facility_type_item_nm
            ,sfti.saf_facility_type_item_explain
            ,sftiv.item_value
            ,sftiv.remark
        from saf_facility_type_item_val sftiv
        inner join saf_facility_type_item sfti
        on sftiv.saf_facility_type_item_no = sfti.saf_facility_type_item_no
        inner join saf_facility_mst sfm
        on sftiv.saf_facility_cd = sfm.saf_facility_cd
        inner join saf_facility_type sft
        on sfm.saf_facility_type_cd = sft.saf_facility_type_cd
        where sfm.saf_facility_cd = #{safFacilityCd}
        order by sfti.sort_order
    </select>
    
    <!-- 안전설비유형 관리항목 조회 -->
    <select id= "getNewFacilityTypeItems" resultType= "com.she.baseInfo.model.FacilityTypeItem">
        select sft.saf_facility_type_cd
            ,sft.saf_facility_type_nm
            ,sfti.saf_facility_type_item_no
            ,sfti.saf_facility_type_item_nm
            ,sfti.saf_facility_type_item_explain
        from saf_facility_type_item sfti
        inner join saf_facility_type sft
        on sfti.saf_facility_type_cd = sft.saf_facility_type_cd
        where sfti.use_yn = 'Y'
        and sft.use_yn = 'Y'
        and sfti.saf_facility_type_cd = #{safFacilityTypeCd}
        order by sfti.sort_order
    </select>
    
    <!-- 안전설비마스터 중복검사 -->
    <select id= "countFacilityMst" resultType= "int">
        select count(*)
        from saf_facility_mst
        where saf_facility_cd = #{safFacilityCd}
    </select>
    
    <!-- 안전설비마스터 신규등록 -->
    <insert id= "createFacilityMst" parameterType= "com.she.baseInfo.model.FacilityMst">
        insert into saf_facility_mst
            (saf_facility_cd
            , saf_facility_type_cd
            , process_cd
            , facility_nm
            , install_locate
            , dept_cd
            , install_ymd
            , install_conn
            , vol
            , vol_unit
            , saf_mgr_psn
            , disuse_yn
            , disuse_yy
            , law_chk_yn
            , self_chk_yn
            , law_chk_cye_cd
            , self_chk_cye_cd
            , plant_cd
            , facility_psm_cd
            , remark
            , saf_lsn_yn
            , saf_lsn_cye_cd
            , saf_chk_yn
            , saf_chk_cye_cd
            , chk_pass_num
            , chk_pass_dt
            , create_user_id
            , create_dt)
        values 
            (#{safFacilityCd}
            , #{safFacilityTypeCd}
            , #{processCd}
            , #{facilityNm}
            , #{installLocate}
            , #{deptCd}
            , #{installYmd}
            , #{installConn}
            , #{vol}
            , #{volUnit}
            , #{safMgrPsn}
            , #{disuseYn}
            , #{disuseYy}
            , #{lawChkYn}
            , #{selfChkYn}
            , #{lawChkCyeCd}
            , #{selfChkCyeCd}
            , #{plantCd}
            , #{facilityPsmCd}
            , #{remark}
            , #{safLsnYn}
            , #{safLsnCyeCd}
            , #{safChkYn}
            , #{safChkCyeCd}
            , #{chkPassNum}
            , #{chkPassDt}
            , #{createUserId}
            , getdate()
            )
    </insert>
    
    <!-- 안전설비마스터 수정 -->
    <update id= "updateFacilityMst" parameterType= "com.she.baseInfo.model.FacilityMst">
        update saf_facility_mst
        set process_cd = #{processCd}
            , saf_facility_type_cd = #{safFacilityTypeCd}
            , facility_nm = #{facilityNm}
            , install_locate = #{installLocate}
            , dept_cd = #{deptCd}
            , install_ymd = #{installYmd}
            , install_conn = #{installConn}
            , vol = #{vol}
            , vol_unit = #{volUnit}
            , saf_mgr_psn = #{safMgrPsn}
            , disuse_yn = #{disuseYn}
            , disuse_yy = #{disuseYy}
            , law_chk_yn = #{lawChkYn}
            , self_chk_yn = #{selfChkYn}
            , law_chk_cye_cd = #{lawChkCyeCd}
            , self_chk_cye_cd = #{selfChkCyeCd}
            , remark = #{remark}
            , plant_cd = #{plantCd}
            , facility_psm_cd = #{facilityPsmCd}
            , saf_lsn_yn = #{safLsnYn}
            , saf_lsn_cye_cd = #{safLsnCyeCd}
            , saf_chk_yn = #{safChkYn}
            , saf_chk_cye_cd = #{safChkCyeCd}
            , law_chk_ymd = #{lawChkYmd}
            , self_chk_ymd = #{selfChkYmd}
            , insp_chk_ymd = #{inspChkYmd}
            , chk_pass_num = #{chkPassNum}
            , chk_pass_dt = #{chkPassDt}
            , update_user_id = #{updateUserId}
            , update_dt = getdate()
        where saf_facility_cd = #{safFacilityCd}
    </update>
    
    <!-- 안전설비 관리항목값 신규등록 -->
    <insert id= "createFacilityTypeItemVal" parameterType= "com.she.baseInfo.model.FacilityTypeItemVal">
        insert into saf_facility_type_item_val
            (saf_facility_cd
            , saf_facility_type_item_no
            , item_value
            , remark
            )
        values 
            (#{safFacilityCd}
            , #{safFacilityTypeItemNo}
            , #{itemValue}
            , #{remark}
            )
    </insert>
    
    <!-- 안전설비 관리항목값 삭제 -->
    <delete id= "deleteFacilityTypeItemVal">
        delete saf_facility_type_item_val
        where saf_facility_cd = #{safFacilityCd}
    </delete>
    
    <!-- 유형별 설비현황 조회 -->
    <select id= "getFacilityMstStatus" resultType= "com.she.baseInfo.model.FacilityMst">
        with depttree as (
            select cd.dept_cd
                ,cd.dept_nm
                ,cd.p_dept_cd
            from com_dept cd
            where 1=1
            <choose>
                <when test= "deptCd != null and deptCd != ''">
                    and cd.dept_cd = #{deptCd}
                </when>
                <otherwise>
                    and isnull(cd.p_dept_cd, '') = ''
                </otherwise>
            </choose>
            union all
            select cdd.dept_cd
                ,cdd.dept_nm
                ,cdd.p_dept_cd
            from com_dept cdd
            inner join depttree
            on cdd.p_dept_cd = depttree.dept_cd
        )
        select depttree.dept_cd
            ,depttree.dept_nm
            ,depttree.p_dept_cd
            ,(select count(*)
            from saf_facility_mst sfm
            where depttree.dept_cd = sfm.dept_cd) as facility_count
        from depttree
        where 1=1
        <choose>
            <when test= "specHealth">
            and depttree.dept_cd in (select distinct sfm.dept_cd
                 from saf_facility_mst sfm
                 inner join saf_facility_psm_chemprod sfpc
                 on sfm.saf_facility_cd = sfpc.saf_facility_cd
                 inner join chm_regul_itm_chemprod_val cricv
                 on sfpc.chem_prod_no = cricv.chem_prod_no
                 where regul_itm_no = 180)
            </when>
            <when test= "!specHealth">
            and depttree.dept_cd not in (select distinct sfm.dept_cd
                 from saf_facility_mst sfm
                 inner join saf_facility_psm_chemprod sfpc
                 on sfm.saf_facility_cd = sfpc.saf_facility_cd
                 inner join chm_regul_itm_chemprod_val cricv
                 on sfpc.chem_prod_no = cricv.chem_prod_no
                 where regul_itm_no = 180)
            </when>
            <otherwise>
                
            </otherwise>
        </choose>
        order by depttree.dept_cd
    </select>
    
</mapper>