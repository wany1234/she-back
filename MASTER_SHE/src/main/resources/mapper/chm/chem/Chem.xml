<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.chm.chem.mapper.ChemMapper">

    <select id= "getChems" resultType= "HashMap">
        /* ChemMapper.getChems [Chem.xml] */
        <!-- 보안취약점 점검에서 예외처리가 안 될 경우 SP로 사용 -->
        <!-- EXEC SP_GET_CHEMS #{search}, #{regulItmNoStr}, #{allRegulItmNos}, #{allSelectRegulItmNos}, #{useYn}, #{chemprodNo} -->
        with A as (
            select ccc.chem_no
            from com_chem ccc
            left outer join chm_regul_itm_chem_val cci
            on ccc.chem_no = cci.chem_no
            where 1=1
            and ccc.use_yn = 'Y'
            <if test= "regulItmNos != null and regulItmNos.length > 0">
            and cci.regul_itm_no in
                <foreach collection= "regulItmNos" item= "regulItmNo" separator= "," open= "(" close= ")" >
                #{regulItmNo}
                </foreach>
            </if>
            group by ccc.chem_no
        ), B as (
            select cc.chem_no
                , cc.cas_no
                , cc.chem_nm_kr
                , cc.chem_nm_en
                , cc.use_yn
                , (case when cc.use_yn = 'Y' then '사용'
                else '미사용'
                end) use_yn_nm
                , cc.create_user_id
                ,createUser.user_nm as create_user_nm
                , cc.create_dt
                , cc.update_user_id
                ,updateUser.user_nm as update_user_nm
                , cc.update_dt
                , cc.mole_formula
            from com_chem cc
            left outer join com_user createUser
            on cc.create_user_id = createUser.user_id
            left outer join com_user updateUser
            on cc.update_user_id = updateUser.user_id
            inner join A
            on cc.chem_no = A.chem_no
            where 1=1
            and (cc.chem_nm_kr like '%' + #{search} + '%'
                or cc.chem_nm_en like '%' + #{search} + '%'
                or cc.cas_no like '%' + #{search} + '%')
            <if test= "useYn != null and !useYn.equals('')">
            and cc.use_yn = #{useYn}
            </if>
            <if test= "chemprodNo != null and chemprodNo > 0">
            and exists(select 1
                        from com_chemprod_chem ccc
                        inner join com_chemprod cp
                        on ccc.chem_prod_no = cp.chem_prod_no
                        and cp.use_yn = 'Y'
                        where cc.chem_no = ccc.chem_no
                        and cp.chem_prod_no = #{chemprodNo}
                        )
            </if>
        ),C as (
            select *
            from
            (
                select cri.regul_itm_no,
                    case when isnull(cricv.chem_no, 0) = 0 then 'N' else 'Y' end as value
                    ,cc.chem_no
                from com_chem cc
                left outer join chm_regul_itm_chem_val cricv
                on cc.chem_no = cricv.chem_no
                left outer join chm_regul_itm cri
                on cri.regul_itm_no = cricv.regul_itm_no
                and cri.use_yn = 'Y'
            ) d
            pivot
            (
                max(value)
                for regul_itm_no in (${allRegulItmNos})
            ) piv
        )
        select B.chem_no, B.cas_no, B.chem_nm_kr, B.chem_nm_en, B.use_yn, B.use_yn_nm, B.create_user_id, B.create_user_nm, B.create_dt, B.update_user_id, B.update_user_nm, B.update_dt, B.mole_formula
            ,${allSelectRegulItmNos}
            , case
                 when dbo.GET_USER_NM(B.update_user_id) = '' then dbo.GET_USER_NM(B.create_user_id)
                 else dbo.GET_USER_NM(B.update_user_id) end as writer_user_nm
            , case when B.update_dt is null then convert(varchar(10), B.create_dt, 120) else convert(varchar(10), B.update_dt, 120) end   as writer_dt
        from B
        inner join C
        on B.chem_no = C.chem_no
    </select>

    <select id= "getChemsPage" resultType= "HashMap">
        /* ChemMapper.getChemsPage [Chem.xml] */
        <!-- 보안취약점 점검에서 예외처리가 안 될 경우 SP로 사용 -->
        <!-- EXEC SP_GET_CHEMS_PAGE #{search}, #{regulItmNoStr}, #{allRegulItmNos}, #{allSelectRegulItmNos}, #{useYn}, #{chemprodNo}, #{pageNumber}, #{pageSize}, #{orderByExpression} -->
        with A as (
            select ccc.chem_no
            from com_chem ccc
            left outer join chm_regul_itm_chem_val cci
            on ccc.chem_no = cci.chem_no
            where 1=1
            and ccc.use_yn = 'Y'
            <if test= "regulItmNos != null and regulItmNos.length > 0">
            and cci.regul_itm_no in
                <foreach collection= "regulItmNos" item= "regulItmNo" separator= "," open= "(" close= ")" >
                #{regulItmNo}
                </foreach>
            </if>
            group by ccc.chem_no
        ), B as (
            select cc.chem_no
                , cc.cas_no
                , cc.chem_nm_kr
                , cc.chem_nm_en
                , cc.use_yn
                , (case when cc.use_yn = 'Y' then '사용'
                else '미사용'
                end) use_yn_nm
                , cc.create_user_id
                ,createUser.user_nm as create_user_nm
                , cc.create_dt
                , cc.update_user_id
                ,updateUser.user_nm as update_user_nm
                , cc.update_dt
                , cc.mole_formula
            from com_chem cc
            left outer join com_user createUser
            on cc.create_user_id = createUser.user_id
            left outer join com_user updateUser
            on cc.update_user_id = updateUser.user_id
            inner join A
            on cc.chem_no = A.chem_no
            where 1=1
            and (cc.chem_nm_kr like '%' + #{search} + '%'
                or cc.chem_nm_en like '%' + #{search} + '%'
                or cc.cas_no like '%' + #{search} + '%')
            <if test= "useYn != null and !useYn.equals('')">
            and cc.use_yn = #{useYn}
            </if>
            <if test= "chemprodNo != null and chemprodNo > 0">
            and exists(select 1
                        from com_chemprod_chem ccc
                        inner join com_chemprod cp
                        on ccc.chem_prod_no = cp.chem_prod_no
                        and cp.use_yn = 'Y'
                        where cc.chem_no = ccc.chem_no
                        and cp.chem_prod_no = #{chemprodNo}
                        )
            </if>
        ),C as (
            select *
            from
            (
                select cri.regul_itm_no,
                    case when isnull(cricv.chem_no, 0) = 0 then 'N' else 'Y' end as value
                    ,cc.chem_no
                from com_chem cc
                left outer join chm_regul_itm_chem_val cricv
                on cc.chem_no = cricv.chem_no
                left outer join chm_regul_itm cri
                on cri.regul_itm_no = cricv.regul_itm_no
                and cri.use_yn = 'Y'
            ) d
            pivot
            (
                max(value)
                for regul_itm_no in (${allRegulItmNos})
            ) piv
        )
        select B.chem_no, B.cas_no, B.chem_nm_kr, B.chem_nm_en, B.use_yn, B.use_yn_nm, B.create_user_id, B.create_user_nm, B.create_dt, B.update_user_id, B.update_user_nm, B.update_dt, B.mole_formula
            ,${allSelectRegulItmNos}, count(*) over() as total_cnt
        from B
        inner join C
        on B.chem_no = C.chem_no
        <choose>
          <when test= "orderByExpression != null and orderByExpression != ''">
            ORDER BY ${orderByExpression}
          </when>
          <otherwise>
            order by B.cas_no
          </otherwise>
        </choose>
        <if test= "pageSize != null and pageSize > -1">
        OFFSET ((#{pageNumber} - 1) * #{pageSize}) ROWS
        FETCH NEXT #{pageSize} ROWS ONLY
        </if>
    </select>

    <select id= "getChemsPageTotal" resultType= "HashMap">
        /* ChemMapper.getChemsPageTotal [Chem.xml] */
        <!-- 보안취약점 점검에서 예외처리가 안 될 경우 SP로 사용 -->
        <!--EXEC SP_GET_CHEMS_PAGE_TOTAL #{search}, #{regulItmNoStr}, #{allRegulItmNos}, #{allSelectRegulItmNos}, #{useYn}, #{chemprodNo}, #{orderByExpression}-->
        with A as (
            select ccc.chem_no
            from com_chem ccc
            left outer join chm_regul_itm_chem_val cci
            on ccc.chem_no = cci.chem_no
            where 1=1
            and ccc.use_yn = 'Y'
            <if test= "regulItmNos != null and regulItmNos.length > 0">
            and cci.regul_itm_no in
                <foreach collection= "regulItmNos" item= "regulItmNo" separator= "," open= "(" close= ")" >
                #{regulItmNo}
                </foreach>
            </if>
            group by ccc.chem_no
        ), B as (
            select cc.chem_no
                , cc.cas_no
                , cc.chem_nm_kr
                , cc.chem_nm_en
                , cc.use_yn
                , (case when cc.use_yn = 'Y' then '사용'
                else '미사용'
                end) use_yn_nm
                , cc.create_user_id
                ,createUser.user_nm as create_user_nm
                , cc.create_dt
                , cc.update_user_id
                ,updateUser.user_nm as update_user_nm
                , cc.update_dt
                , cc.mole_formula
            from com_chem cc
            left outer join com_user createUser
            on cc.create_user_id = createUser.user_id
            left outer join com_user updateUser
            on cc.update_user_id = updateUser.user_id
            inner join A
            on cc.chem_no = A.chem_no
            where 1=1
            and (cc.chem_nm_kr like '%' + #{search} + '%'
                or cc.chem_nm_en like '%' + #{search} + '%'
                or cc.cas_no like '%' + #{search} + '%')
            <if test= "useYn != null and !useYn.equals('')">
            and cc.use_yn = #{useYn}
            </if>
            <if test= "chemprodNo != null and chemprodNo > 0">
            and exists(select 1
                        from com_chemprod_chem ccc
                        inner join com_chemprod cp
                        on ccc.chem_prod_no = cp.chem_prod_no
                        and cp.use_yn = 'Y'
                        where cc.chem_no = ccc.chem_no
                        and cp.chem_prod_no = #{chemprodNo}
                        )
            </if>
        ),C as (
            select *
            from
            (
                select cri.regul_itm_no,
                    case when isnull(cricv.chem_no, 0) = 0 then 'N' else 'Y' end as value
                    ,cc.chem_no
                from com_chem cc
                left outer join chm_regul_itm_chem_val cricv
                on cc.chem_no = cricv.chem_no
                left outer join chm_regul_itm cri
                on cri.regul_itm_no = cricv.regul_itm_no
                and cri.use_yn = 'Y'
            ) d
            pivot
            (
                max(value)
                for regul_itm_no in (${allRegulItmNos})
            ) piv
        )
        select B.chem_no, B.cas_no, B.chem_nm_kr, B.chem_nm_en, B.use_yn, B.use_yn_nm, B.create_user_id, B.create_user_nm, B.create_dt, B.update_user_id, B.update_user_nm, B.update_dt, B.mole_formula
            ,${allSelectRegulItmNos}
        from B
        inner join C
        on B.chem_no = C.chem_no
        <choose>
          <when test= "orderByExpression != null and orderByExpression != ''">
            ORDER BY ${orderByExpression}
          </when>
          <otherwise>
            order by B.cas_no
          </otherwise>
        </choose>
    </select>

    <select id= "getChemsTotalSize" resultType= "int">
        /* ChemMapper.getChemsTotalSize [Chem.xml] */
        <!-- 보안취약점 점검에서 예외처리가 안 될 경우 SP로 사용 -->
        <!--EXEC SP_GET_CHEMS_PAGE_TOTAL #{search}, #{regulItmNoStr}, #{allRegulItmNos}, #{allSelectRegulItmNos}, #{useYn}, #{chemprodNo}, '', 'Y'-->
        with A as (
            select ccc.chem_no
            from com_chem ccc
            left outer join chm_regul_itm_chem_val cci
            on ccc.chem_no = cci.chem_no
            where 1=1
            and ccc.use_yn = 'Y'
            <if test= "regulItmNos != null and regulItmNos.length > 0">
            and cci.regul_itm_no in
                <foreach collection= "regulItmNos" item= "regulItmNo" separator= "," open= "(" close= ")" >
                #{regulItmNo}
                </foreach>
            </if>
            group by ccc.chem_no
        ), B as (
            select cc.chem_no
                , cc.cas_no
                , cc.chem_nm_kr
                , cc.chem_nm_en
                , cc.use_yn
                , (case when cc.use_yn = 'Y' then '사용'
                else '미사용'
                end) use_yn_nm
                , cc.create_user_id
                ,createUser.user_nm as create_user_nm
                , cc.create_dt
                , cc.update_user_id
                ,updateUser.user_nm as update_user_nm
                , cc.update_dt
                , cc.mole_formula
            from com_chem cc
            left outer join com_user createUser
            on cc.create_user_id = createUser.user_id
            left outer join com_user updateUser
            on cc.update_user_id = updateUser.user_id
            inner join A
            on cc.chem_no = A.chem_no
            where 1=1
            and (cc.chem_nm_kr like '%' + #{search} + '%'
                or cc.chem_nm_en like '%' + #{search} + '%'
                or cc.cas_no like '%' + #{search} + '%')
            <if test= "useYn != null and !useYn.equals('')">
            and cc.use_yn = #{useYn}
            </if>
            <if test= "chemprodNo != null and chemprodNo > 0">
            and exists(select 1
                        from com_chemprod_chem ccc
                        inner join com_chemprod cp
                        on ccc.chem_prod_no = cp.chem_prod_no
                        and cp.use_yn = 'Y'
                        where cc.chem_no = ccc.chem_no
                        and cp.chem_prod_no = #{chemprodNo}
                        )
            </if>
        ),C as (
            select *
            from
            (
                select cri.regul_itm_no,
                    case when isnull(cricv.chem_no, 0) = 0 then 'N' else 'Y' end as value
                    ,cc.chem_no
                from com_chem cc
                left outer join chm_regul_itm_chem_val cricv
                on cc.chem_no = cricv.chem_no
                left outer join chm_regul_itm cri
                on cri.regul_itm_no = cricv.regul_itm_no
                and cri.use_yn = 'Y'
            ) d
            pivot
            (
                max(value)
                for regul_itm_no in (${allRegulItmNos})
            ) piv
        )
        select COUNT(*)
        from B
        inner join C
        on B.chem_no = C.chem_no
    </select>

    <select id= "getRegulItmNos" resultType= "String">
        /* ChemMapper.getRegulItmNos [Chem.xml] */
        select dbo.CHM_REGUL()
        union all
        select dbo.CHM_QUERY()
    </select>

    <!-- 화학물질 조회 (법규제외) -->
    <select id= "getChemNoReguls" resultType= "com.she.chm.model.Chem">
        /* ChemMapper.getChemNoReguls [Chem.xml] */
        select cc.chem_no
            , cc.cas_no
            , cc.chem_nm_kr
            , cc.chem_nm_en
            , cc.use_yn
            , (case when cc.use_yn = 'Y' then '사용'
                else '미사용'
            end) use_yn_nm
            , cc.create_user_id
            ,createUser.user_nm as create_user_nm
            , cc.create_dt
            , cc.update_user_id
            ,updateUser.user_nm as update_user_nm
            , cc.update_dt
            , cc.mole_formula
          from com_chem cc
        left outer join com_user createUser
        on cc.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cc.update_user_id = updateUser.user_id
        where 1=1
        <if test= "casNo != null and !casNo.equals('')">
        and cc.cas_no like '%' + #{casNo} + '%'
        </if>
        <if test= "chemNmKr != null and !chemNmKr.equals('')">
        and cc.chem_nm_kr like '%' + #{chemNmKr} + '%'
        </if>
        <if test= "chemNmEn != null and !chemNmEn.equals('')">
        and cc.chem_nm_en like '%' + #{chemNmEn} + '%'
        </if>
    </select>


    <!-- 화학물질 조회 (법규제외) 페이징처리  -->
    <select id= "getChemNoRegulsPage" resultType= "com.she.chm.model.Chem">
        /* ChemMapper.getChemNoRegulsPage [Chem.xml] */
        select cc.chem_no
            , cc.cas_no
            , cc.chem_nm_kr
            , cc.chem_nm_en
            , cc.use_yn
            , (case when cc.use_yn = 'Y' then '사용'
                else '미사용'
            end) use_yn_nm
            , cc.create_user_id
            ,createUser.user_nm as create_user_nm
            , cc.create_dt
            , cc.update_user_id
            ,updateUser.user_nm as update_user_nm
            , cc.update_dt
            , cc.mole_formula
          from com_chem cc
        left outer join com_user createUser
        on cc.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cc.update_user_id = updateUser.user_id
        where 1=1
        and cc.use_yn = 'Y'
        <if test= "casNo != null and !casNo.equals('')">
        and cc.cas_no like '%' + #{casNo} + '%'
        </if>
        <if test= "chemNmKr != null and !chemNmKr.equals('')">
        and cc.chem_nm_kr like '%' + #{chemNmKr} + '%'
        </if>
        <if test= "chemNmEn != null and !chemNmEn.equals('')">
        and cc.chem_nm_en like '%' + #{chemNmEn} + '%'
        </if>
        <choose>
          <when test= 'orderByExpression != null and orderByExpression.equals("cas_no asc")'>
            ORDER BY cas_no asc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("cas_no desc")'>
            ORDER BY cas_no desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_kr asc")'>
            ORDER BY chem_nm_kr asc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_kr desc")'>
            ORDER BY chem_nm_kr desc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_en asc")'>
            ORDER BY chem_nm_en asc
          </when>
          <when test= 'orderByExpression != null and orderByExpression.equals("chem_nm_en desc")'>
            ORDER BY chem_nm_en desc
          </when>
          <otherwise>
            order by cc.cas_no
          </otherwise>
        </choose>
        OFFSET ((#{pageNumber} - 1) * #{pageSize}) ROWS
        FETCH NEXT #{pageSize} ROWS ONLY
    </select>


    <!-- 화학물질 조회 (법규제외) 페이징처리  모든 건수 조회  -->
    <select id= "getChemNoRegulsTotalSize" resultType= "int">
        /* ChemMapper.getChemNoRegulsTotalSize [Chem.xml] */
        select COUNT(*)
          from com_chem cc
        inner join com_user createUser
        on cc.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cc.update_user_id = updateUser.user_id
        where 1=1
        and cc.use_yn = 'Y'
        <if test= "casNo != null and !casNo.equals('')">
        and cc.cas_no like '%' + #{casNo} + '%'
        </if>
        <if test= "chemNmKr != null and !chemNmKr.equals('')">
        and cc.chem_nm_kr like '%' + #{chemNmKr} + '%'
        </if>
        <if test= "chemNmEn != null and !chemNmEn.equals('')">
        and cc.chem_nm_en like '%' + #{chemNmEn} + '%'
        </if>
    </select>

    <!-- 화학물질 상세 조회 -->
    <select id= "getChem" resultType= "com.she.chm.model.Chem">
        /* ChemMapper.getChem [Chem.xml] */
        select cc.chem_no
          , cc.cas_no
          , cc.chem_nm_kr
          , cc.chem_nm_en
          , cc.use_yn
          , (case when cc.use_yn = 'Y' then '사용'
              else '미사용'
              end) use_yn_nm
          , cc.create_user_id
          , cc.create_dt
          , cc.update_user_id
          , cc.update_dt
          , cc.mole_formula
          from com_chem cc
        where cc.chem_no = #{chemNo}
    </select>

    <select id= "getChemicalRegulItmChemVals" resultType= "com.she.chm.model.ChemicalRegulItmChemVal">
        /* ChemMapper.getChemicalRegulItmChemVals [Chem.xml] */
        select cricv.regul_itm_chem_val_no
            ,regulLaw.code_nm as regul_law_nm
            ,cri.regul_law_cd
            ,cricv.regul_itm_no
            ,cri.regul_itm_nm
            ,cricv.chem_no
            ,cricv.stnd_val
            ,cricv.unit_no
            ,cu.unit_nm
            ,cricv.stnd_sign
            ,stndSign.code_nm as stnd_sign_nm
            ,cricv.start_dt
            ,cricv.end_dt
            ,case when isnull(cricv.start_dt, '') = '' then ''
                else cricv.start_dt + ' ~ ' + cricv.end_dt
            end as period
            ,cricv.his_yn
            , (case when cricv.his_yn = 'Y' then 'O'
            else 'X'
            end) his_yn_nm
            ,cricv.create_user_id
            ,createUser.user_nm as create_user_nm
            ,cricv.create_dt
            ,cricv.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,cricv.update_dt
        from chm_regul_itm_chem_val cricv
        inner join chm_regul_itm cri
        on cricv.regul_itm_no = cri.regul_itm_no
        and cri.use_yn = 'Y'
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_LAW') regulLaw
        on cri.regul_law_cd = regulLaw.code
        and regulLaw.use_yn = 'Y'
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_STND_SIGN') stndSign
        on cricv.stnd_sign = stndSign.code
        and stndSign.use_yn = 'Y'
        left outer join chm_unit cu
        on cricv.unit_no = cu.unit_no
        and cu.use_yn = 'Y'
        left outer join com_user createUser
        on cricv.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cricv.update_user_id = updateUser.user_id
        where 1=1
        and cricv.chem_no = #{chemNo}
    </select>

    <select id= "getChemicalRegulItmChemValsUnion" resultType= "com.she.chm.model.ChemicalRegulItmChemVal">
        /* ChemMapper.getChemicalRegulItmChemValsUnion [Chem.xml] */
        with dv as (
            select cricv.regul_itm_chem_val_no
            ,regulLaw.code_nm as regul_law_nm
            ,cri.regul_law_cd
            ,cricv.regul_itm_no
            ,cri.regul_itm_nm
            ,cricv.chem_no
            ,cricv.stnd_val
            ,cricv.unit_no
            ,cu.unit_nm
            ,cricv.stnd_sign
            ,stndSign.code_nm as stnd_sign_nm
            ,cricv.start_dt
            ,cricv.end_dt
            ,case when isnull(cricv.start_dt, '') = '' then ''
                else cricv.start_dt + ' ~ ' + cricv.end_dt
            end as period
            ,cricv.his_yn
            , (case when cricv.his_yn = 'Y' then 'O'
            else 'X'
            end) his_yn_nm
            ,cricv.create_user_id
            ,createUser.user_nm as create_user_nm
            ,cricv.create_dt
            ,cricv.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,cricv.update_dt
            from chm_regul_itm_chem_val cricv
            inner join chm_regul_itm cri
                on cricv.regul_itm_no = cri.regul_itm_no
<!--                 and cri.use_yn = 'Y' -->
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_LAW') regulLaw
                on cri.regul_law_cd = regulLaw.code
<!--                 and regulLaw.use_yn = 'Y' -->
            left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_STND_SIGN') stndSign
                on cricv.stnd_sign = stndSign.code
<!--                 and stndSign.use_yn = 'Y' -->
            left outer join chm_unit cu
                on cricv.unit_no = cu.unit_no
<!--                 and cu.use_yn = 'Y' -->
            left outer join com_user createUser
                on cricv.create_user_id = createUser.user_id
            left outer join com_user updateUser
                on cricv.update_user_id = updateUser.user_id
            where 1=1
            and cricv.chem_no = #{chemNo}
            union
            select null as regul_itm_chem_val_no
            ,regulLaw.code_nm as regul_law_nm
            ,cri.regul_law_cd
            ,cri.regul_itm_no
            ,cri.regul_itm_nm
            ,null as chem_no
            ,null as stnd_val
            ,null as unit_no
            ,null as unit_nm
            ,null as stnd_sign
            ,null as stnd_sign_nm
            ,null as start_dt
            ,null as end_dt
            ,null as periodperiod
            ,null as his_yn
            ,null as his_yn_nm
            ,null as create_user_id
            ,null as create_user_nm
            ,null as create_dt
            ,null as update_user_id
            ,null as update_user_nm
            ,null as update_dt
            from chm_regul_itm cri
                inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_LAW') regulLaw on cri.regul_law_cd = regulLaw.code
                and regulLaw.use_yn = 'Y' and cri.use_yn = 'Y'
        )
        select max(dv.regul_itm_chem_val_no) as regul_itm_chem_val_no
        ,dv.regul_law_nm as regul_law_nm
        ,dv.regul_law_cd as regul_law_cd
        ,dv.regul_itm_no as regul_itm_no
        ,dv.regul_itm_nm as regul_itm_nm
        ,max(dv.chem_no) as chem_no
        ,max(dv.stnd_val) as stnd_val
        ,max(dv.unit_no) as unit_no
        ,max(dv.unit_nm) as unit_nm
        ,max(dv.stnd_sign) as stnd_sign
        ,max(dv.stnd_sign_nm) as stnd_sign_nm
        ,max(dv.start_dt) as start_dt
        ,max(dv.end_dt) as end_dt
        ,max(dv.period) as period
        ,max(dv.his_yn) as his_yn
        ,max(dv.his_yn_nm) as his_yn_nm
        ,max(dv.create_user_id) as create_user_id
        ,max(dv.create_user_nm) as create_user_nm
        ,max(dv.create_dt) as create_dt
        ,max(dv.update_user_id) as update_user_id
        ,max(dv.update_user_nm) as update_user_nm
        ,max(dv.update_dt) as update_dt
        from dv
        group by dv.regul_law_nm
        ,dv.regul_law_cd
        ,dv.regul_itm_no
        ,dv.regul_itm_nm
        order by his_yn_nm desc, dv.regul_law_nm, dv.regul_itm_nm
    </select>

    <select id= "getChemicalRegulItmChemVal" resultType= "com.she.chm.model.ChemicalRegulItmChemVal">
        /* ChemMapper.getChemicalRegulItmChemVal [Chem.xml] */
        select cricv.regul_itm_chem_val_no
            ,regulLaw.code_nm as regul_law_nm
            ,cri.regul_law_cd
            ,cricv.regul_itm_no
            ,cri.regul_itm_nm
            ,cricv.chem_no
            ,cricv.stnd_val
            ,cricv.unit_no
            ,cu.unit_nm
            ,cricv.stnd_sign
            ,stndSign.code_nm as stnd_sign_nm
            ,cricv.start_dt
            ,cricv.end_dt
            ,case when isnull(cricv.start_dt, '') = '' then ''
                else cricv.start_dt + ' ~ ' + cricv.end_dt
            end as period
            ,cricv.his_yn
            , (case when cricv.his_yn = 'Y' then 'O'
            else 'X'
            end) his_yn_nm
            ,cricv.create_user_id
            ,createUser.user_nm as create_user_nm
            ,cricv.create_dt
            ,cricv.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,cricv.update_dt
        from chm_regul_itm_chem_val cricv
        inner join chm_regul_itm cri
        on cricv.regul_itm_no = cri.regul_itm_no
<!--             and cri.use_yn = 'Y' -->
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_LAW') regulLaw
        on cri.regul_law_cd = regulLaw.code
<!--             and regulLaw.use_yn = 'Y' -->
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_STND_SIGN') stndSign
        on cricv.stnd_sign = stndSign.code
<!--             and stndSign.use_yn = 'Y' -->
        left outer join chm_unit cu
        on cricv.unit_no = cu.unit_no
<!--             and cu.use_yn = 'Y' -->
        left outer join com_user createUser
        on cricv.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cricv.update_user_id = updateUser.user_id
        where 1=1
        and cricv.regul_itm_chem_val_no = #{regulItmChemValNo}
    </select>

    <!-- casNo 중복검사 -->
    <select id= "checkChem" resultType= "HashMap">
        /* ChemMapper.checkChem [Chem.xml] */
        select 'cas_count' as gubun, count(*) as cnt
        from com_chem ch
        where ch.cas_no = #{casNo}
        <if test= "chemNo != null and chemNo > 0">
        and chem_no not in (#{chemNo})
        </if>
        union all
        select 'chem_nm_kr_count', count(*) as cnt
        from com_chem ch
        where ch.chem_nm_kr = #{chemNmKr}
        <if test= "chemNo != null and chemNo > 0">
        and chem_no not in (#{chemNo})
        </if>
        union all
        select 'chem_nm_en_count', count(*) as cnt
        from com_chem ch
        where ch.chem_nm_en = #{chemNmEn}
        <if test= "chemNo != null and chemNo > 0">
        and chem_no not in (#{chemNo})
        </if>
    </select>

    <!-- 화학물질 신규등록 -->
    <insert id= "createChem" parameterType= "com.she.chm.model.Chem">
        <selectKey keyProperty= "chemNo" resultType= "int" order= "BEFORE">
            select next value for seq_com_chem_no as chem_no
          </selectKey>
          /* ChemMapper.createChem [Chem.xml] */
        insert into com_chem
            (chem_no
            , cas_no
            , chem_nm_kr
            , chem_nm_en
            , use_yn
            , mole_formula
            , create_user_id
            , create_dt)
        values
            (#{chemNo}
            , #{casNo}
            , #{chemNmKr}
            , #{chemNmEn}
            , #{useYn}
            , #{moleFormula}
            , #{createUserId}
            , convert(char(10), getDate(), 23))
    </insert>

    <!-- 화학물질 수정 -->
    <update id= "updateChem" parameterType= "com.she.chm.model.Chem">
        /* ChemMapper.updateChem [Chem.xml] */
        update com_chem
        set cas_no = #{casNo}
            , chem_nm_kr = #{chemNmKr}
            , chem_nm_en = #{chemNmEn}
            , use_yn = #{useYn}
            , mole_formula = #{moleFormula}
            , update_user_id = #{updateUserId}
            , update_dt = convert(char(10), getDate(), 23)
        where chem_no = #{chemNo}
    </update>

    <!-- 화학물질 규제법규별 항목값 신규등록 -->
    <insert id= "createChemicalRegulItmChemVal" parameterType= "com.she.chm.model.ChemicalRegulItmChemVal">
        <selectKey keyProperty= "regulItmChemValNo" resultType= "int" order= "BEFORE">
            select next value for seq_chm_regul_itm_chem_val as regul_itm_chem_val_no
          </selectKey>
          /* ChemMapper.createChemicalRegulItmChemVal [Chem.xml] */
        insert into chm_regul_itm_chem_val
            (regul_itm_chem_val_no
            ,regul_itm_no
            ,chem_no
            ,stnd_val
            ,unit_no
            ,stnd_sign
            ,start_dt
            ,end_dt
            ,his_yn
            ,create_user_id
            ,create_dt)
        values
            (#{regulItmChemValNo}
            , #{regulItmNo}
            , #{chemNo}
            , #{stndVal}
            , #{unitNo}
            , #{stndSign}
            , #{startDt}
            , #{endDt}
            , #{hisYn}
            , #{createUserId}
            , convert(char(10), getDate(), 23))
    </insert>

    <delete id= "deleteChemicalRegulItmChemVal">
        /* ChemMapper.deleteChemicalRegulItmChemVal [Chem.xml] */
        delete from chm_regul_itm_chem_val
        where chem_no = #{chemNo}
    </delete>




    <!-- 화학물질 조회 -->
    <select id= "getChemicals" resultType= "com.she.chm.model.Chem">
        /* ChemMapper.getChemicals [Chem.xml] */
      select cc.chem_no
         , cc.cas_no
         , cc.chem_nm_kr
         , cc.chem_nm_en
         , cc.use_yn
         , (case when cc.use_yn = 'Y' then '사용'
            else '미사용'
            end) use_yn_nm
          , cc.create_user_id
          , cc.create_dt
          , cc.update_user_id
          , cc.update_dt
          , cc.mole_formula
           , convert(numeric, isnull(#{chemProdNo}, '0')) as chem_prod_no
          from com_chem cc
        where 1=1
        and cc.cas_no like '%' + #{casNo} + '%'
        and cc.chem_nm_kr like '%' + #{chemNmKr} + '%'
        and cc.chem_nm_en like '%' + #{chemNmEn} + '%'
        <if test= "useYn != null and !useYn.equals('')">
        and cc.use_yn = #{useYn}
        </if>
        <if test= "chemProdNo != null and chemProdNo > 0">
        and cc.chem_no not in (
            select ccc.chem_no
        from com_chemprod_chem ccc
        inner join com_chem cc on ccc.chem_no = cc.chem_no
        where 1=1
        and cc.use_yn = 'Y'
        and ccc.chem_prod_no = #{chemProdNo}
        )
        </if>
    </select>


</mapper>