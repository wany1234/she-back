<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.chm.chem.mapper.MSDSMapper">

    <select id= "getMsdss" resultType= "com.she.chm.model.MSDS">
        /* MSDSMapper.getMsdss [MSDS.xml] */
        with A AS (
            select cmr.msds_rqst_no
            from chm_msds_rqst cmr
            inner join com_chemprod ccp
            on cmr.chem_prod_no = ccp.chem_prod_no
            inner join com_vendor_mst cvm
            on cmr.vendor_cd = cvm.vendor_cd
            inner join com_vendor_mst make
            on cmr.makecp_cd = make.vendor_cd
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'RSA_PROPERTIES') property
            on ccp.property = property.code
            where 1=1
            and (cmr.chem_prod_nm_kr like '%' + #{search} + '%'
                or cmr.chem_prod_nm_en like '%' + #{search} + '%'
                or cmr.makecp_nm like '%' + #{search} + '%'
                or cmr.vendor_nm like '%' + #{search} + '%'
                )
            <if test= "delYn != null and !delYn.equals('')">
            and isnull(cmr.del_yn, 'N') = #{delYn}
            </if>
            <if test= "newYn != null and !newYn.equals('')">
            and isnull(cmr.new_yn, 'N') = #{newYn}
            </if>
            <if test= "chemProdNo != null and chemProdNo > 0">
            and cmr.chem_prod_no = #{chemProdNo}
            </if>
            <if test= "msdsGrpNo != null and msdsGrpNo > 0">
            and cmr.msds_grp_no = #{msdsGrpNo}
            </if>
            <if test= "plantCd != null and !plantCd.equals('')">
                <choose>
                  <when test= "plantCd.equals('0000')">
                      and isnull(cmr.plant_cd, '') != ''
                  </when>
                  <otherwise>
                      and cmr.plant_cd in (#{plantCd}, '0000')
                  </otherwise>
                </choose>
            </if>
            <if test= "(fromYmd != null and !fromYmd.equals('')) or (toYmd != null and !toYmd.equals(''))">
            and convert(datetime, cmr.write_dt) between convert(datetime, #{fromYmd}) and convert(datetime, #{toYmd})
            </if>
        )
        , B AS (
            SELECT A.msds_rqst_no
            , STRING_AGG(FILEINFO.file_org_nm, ' , ') as file_org_nm
            , STRING_AGG(FILEINFO.file_no, ' , ') as file_no
            , STRING_AGG(FILEINFO.file_ext, ' , ') as file_ext
            FROM A
            LEFT OUTER JOIN COM_ATTACH_FILE FILEINFO ON convert(char(10), A.MSDS_RQST_NO) = FILEINFO.TASK_KEY AND FILEINFO.TASK_CLASS_NM = 'MSDS'
            GROUP BY A.msds_rqst_no
        )
        , T AS (
            SELECT B.file_org_nm, B.file_no, B.file_ext
            ,  STRING_AGG(FILESUMINFO.file_org_nm, ' , ') as summary_file_org_nm
            ,  STRING_AGG(FILESUMINFO.file_no, ' , ') as summary_file_no
            ,  STRING_AGG(FILESUMINFO.file_ext, ' , ') as summary_file_ext
            ,B.msds_rqst_no
            FROM B
            LEFT OUTER JOIN COM_ATTACH_FILE FILESUMINFO ON convert(char(10), B.MSDS_RQST_NO) = FILESUMINFO.TASK_KEY AND FILESUMINFO.TASK_CLASS_NM = 'MSDS_SUMMARY'
            GROUP BY B.msds_rqst_no, B.file_org_nm, B.file_no, B.file_ext
        )
        SELECT cmr.msds_rqst_no
            ,cmr.msds_grp_no
            ,cmr.chem_prod_no
            ,cmr.chem_prod_nm_kr
            ,cmr.chem_prod_nm_en
            ,ccp.sap_mat_cd
            ,ccp.property
            ,property.code_nm as property_nm
            ,ccp.mole_weight
            ,ccp.boilpoint
            ,ccp.melting_pnt
            ,ccp.flashing_pnt
            ,ccp.usage_cd
            ,usage.code_nm as usage_nm
            ,ccp.usage_etc
            ,ccp.stck_area
            ,ccp.specific_gravity
            ,cmr.makecp_cd
            ,cmr.makecp_nm
            ,cmr.vendor_cd
            ,cmr.vendor_nm
            ,cmr.remarks
            ,cmr.rev_type
            ,(case when cmr.rev_type = 'U' then '개정'
                else '신규'
            end) rev_type_nm
            ,cmr.rev_num
            ,cmr.new_yn
            ,cmr.create_user_id
            ,createUser.user_nm as create_user_nm
            ,convert(char(10), cmr.create_dt, 23) as create_dt
            ,cmr.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,convert(char(10), cmr.update_dt, 23) as update_dt
            ,cmr.del_yn
            , (case when cmr.del_yn = 'Y' then 'O'
                else 'X'
            end) del_yn_nm
            ,cmr.plant_cd
            ,plant.code_nm as plant_nm
            ,cmr.auto_ins_yn
            ,(case when cmr.auto_ins_yn = 'Y' then '자동등록O'
                else '자동등록X'
            end) auto_ins_nm
            ,cmr.signal_desc
            ,cmr.haz_danger_desc
            ,cmr.prevent_act_desc
            ,cmr.fst_aid_eye_desc
            ,cmr.fst_aid_skin_desc
            ,cmr.fst_aid_breath_desc
            ,cmr.fst_aid_eat_desc
            ,cmr.strg_mthd_desc
            ,cmr.evas_cond_desc
            ,cmr.evas_mat_desc
            ,cmr.leak_handle_desc
            ,cmr.expl_handle_desc
            ,cmr.fire_handle_desc
            ,cmr.law_expo_stnd_desc
            ,cmr.law_sphk_per_desc
            ,cmr.law_wken_meas_desc
            ,cmr.law_ind_saf_desc
            ,cmr.law_chem_mgr_desc
            ,cmr.law_dngr_mgr_desc
            ,cmr.handle_care_desc
            ,cmr.safety_equip_desc
            ,cmr.etc
            ,cmr.etc_poison_case
            ,T.file_org_nm ,T.file_no ,T.file_ext
            ,T.summary_file_org_nm ,T.summary_file_no ,T.summary_file_ext
            ,convert(char(10), cmr.write_dt, 23) as write_dt
            , case
                 when dbo.GET_USER_NM(cmr.update_user_id) = '' then dbo.GET_USER_NM(cmr.create_user_id)
                 else dbo.GET_USER_NM(cmr.update_user_id) end as writer_user_nm
            , case when cmr.update_dt is null then convert(date, cmr.create_dt) else convert(date, cmr.update_dt) end   as writer_dt
        FROM T
        INNER JOIN chm_msds_rqst cmr ON T.MSDS_RQST_NO = CMR.MSDS_RQST_NO
        inner join com_chemprod ccp on cmr.chem_prod_no = ccp.chem_prod_no
        inner join com_vendor_mst cvm on cmr.vendor_cd = cvm.vendor_cd
        inner join com_vendor_mst make on cmr.makecp_cd = make.vendor_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on cmr.plant_cd = plant.code
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'RSA_PROPERTIES') property on ccp.property = property.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_USAGE') usage on ccp.usage_cd = usage.code
        left outer join com_user createUser on cmr.create_user_id = createUser.user_id
        left outer join com_user updateUser on cmr.update_user_id = updateUser.user_id
        where 1=1
        order by writer_dt desc
    </select>

    <select id= "getMsds" resultType= "com.she.chm.model.MSDS">
        /* MSDSMapper.getMsds [MSDS.xml] */
        with A AS (
            select cmr.msds_rqst_no
            from chm_msds_rqst cmr
            inner join com_chemprod ccp
            on cmr.chem_prod_no = ccp.chem_prod_no
            inner join com_vendor_mst cvm
            on cmr.vendor_cd = cvm.vendor_cd
            inner join com_vendor_mst make
            on cmr.makecp_cd = make.vendor_cd
            inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'RSA_PROPERTIES') property
            on ccp.property = property.code
            where cmr.msds_rqst_no = #{msdsRqstNo}
        )
        , B AS (
            SELECT A.msds_rqst_no
            , STRING_AGG(FILEINFO.file_org_nm, ' , ') as file_org_nm
            , STRING_AGG(FILEINFO.file_no, ' , ') as file_no
            , STRING_AGG(FILEINFO.file_ext, ' , ') as file_ext
            FROM A
            LEFT OUTER JOIN COM_ATTACH_FILE FILEINFO ON convert(char(10), A.MSDS_RQST_NO) = FILEINFO.TASK_KEY AND FILEINFO.TASK_CLASS_NM = 'MSDS'
            GROUP BY A.msds_rqst_no
        )
        , T AS (
            SELECT B.file_org_nm, B.file_no, B.file_ext
            ,  STRING_AGG(FILESUMINFO.file_org_nm, ' , ') as summary_file_org_nm
            ,  STRING_AGG(FILESUMINFO.file_no, ' , ') as summary_file_no
            ,  STRING_AGG(FILESUMINFO.file_ext, ' , ') as summary_file_ext
            ,B.msds_rqst_no
            FROM B
            LEFT OUTER JOIN COM_ATTACH_FILE FILESUMINFO ON convert(char(10), B.MSDS_RQST_NO) = FILESUMINFO.TASK_KEY AND FILESUMINFO.TASK_CLASS_NM = 'MSDS_SUMMARY'
            GROUP BY B.msds_rqst_no, B.file_org_nm, B.file_no, B.file_ext
        )
        SELECT cmr.msds_rqst_no
            ,cmr.msds_grp_no
            ,cmr.chem_prod_no
            ,cmr.chem_prod_nm_kr
            ,cmr.chem_prod_nm_en
            ,ccp.sap_mat_cd
            ,ccp.property
            ,property.code_nm as property_nm
            ,ccp.mole_weight
            ,ccp.boilpoint
            ,ccp.melting_pnt
            ,ccp.flashing_pnt
            ,ccp.usage_cd
            ,usage.code_nm as usage_nm
            ,ccp.usage_etc
            ,ccp.stck_area
            ,ccp.specific_gravity
            ,cmr.makecp_cd
            ,cmr.makecp_nm
            ,cmr.vendor_cd
            ,cmr.vendor_nm
            ,cmr.remarks
            ,cmr.rev_type
            ,(case when cmr.rev_type = 'U' then '개정'
                else '신규'
            end) rev_type_nm
            ,cmr.rev_num
            ,cmr.new_yn
            ,cmr.create_user_id
            ,createUser.user_nm as create_user_nm
            ,convert(char(10), cmr.create_dt, 23) as create_dt
            ,cmr.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,convert(char(10), cmr.update_dt, 23) as update_dt
            ,cmr.del_yn
            , (case when cmr.del_yn = 'Y' then 'O'
                else 'X'
            end) del_yn_nm
            ,cmr.plant_cd
            ,plant.code_nm as plant_nm
            ,cmr.auto_ins_yn
            ,(case when cmr.auto_ins_yn = 'Y' then '자동등록O'
                else '자동등록X'
            end) auto_ins_nm
            ,cmr.signal_desc
            ,cmr.haz_danger_desc
            ,cmr.prevent_act_desc
            ,cmr.fst_aid_eye_desc
            ,cmr.fst_aid_skin_desc
            ,cmr.fst_aid_breath_desc
            ,cmr.fst_aid_eat_desc
            ,cmr.strg_mthd_desc
            ,cmr.evas_cond_desc
            ,cmr.evas_mat_desc
            ,cmr.leak_handle_desc
            ,cmr.expl_handle_desc
            ,cmr.fire_handle_desc
            ,cmr.law_expo_stnd_desc
            ,cmr.law_sphk_per_desc
            ,cmr.law_wken_meas_desc
            ,cmr.law_ind_saf_desc
            ,cmr.law_chem_mgr_desc
            ,cmr.law_dngr_mgr_desc
            ,cmr.handle_care_desc
            ,cmr.safety_equip_desc
            ,cmr.etc
            ,cmr.etc_poison_case
            ,T.file_org_nm ,T.file_no ,T.file_ext
            ,T.summary_file_org_nm ,T.summary_file_no ,T.summary_file_ext
            ,convert(char(10), cmr.write_dt, 23) as write_dt
            , case
                 when dbo.GET_USER_NM(cmr.update_user_id) = '' then dbo.GET_USER_NM(cmr.create_user_id)
                 else dbo.GET_USER_NM(cmr.update_user_id) end as writer_user_nm
            , case when cmr.update_dt is null then convert(date, cmr.create_dt) else convert(date, cmr.update_dt) end   as writer_dt
            ,cmr.msds_num
            ,cmr.secret_num
            ,cmr.secret_approval
            ,cmr.secret_expiration
        FROM T
        INNER JOIN chm_msds_rqst cmr ON T.MSDS_RQST_NO = CMR.MSDS_RQST_NO
        inner join com_chemprod ccp on cmr.chem_prod_no = ccp.chem_prod_no
        inner join com_vendor_mst cvm on cmr.vendor_cd = cvm.vendor_cd
        inner join com_vendor_mst make on cmr.makecp_cd = make.vendor_cd
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on cmr.plant_cd = plant.code
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'RSA_PROPERTIES') property on ccp.property = property.code
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_USAGE') usage on ccp.usage_cd = usage.code
        left outer join com_user createUser on cmr.create_user_id = createUser.user_id
        left outer join com_user updateUser on cmr.update_user_id = updateUser.user_id
        where cmr.msds_rqst_no = #{msdsRqstNo}
        order by writer_dt desc
    </select>

    <!-- 중복검사 -->
    <select id= "checkMsds" resultType= "HashMap">
        /* MSDSMapper.checkMsds [MSDS.xml] */
        select count(*) as cnt
        from chm_msds_rqst cmr
        where cmr.chem_prod_nm_kr = #{chemProdNmKr}
        and cmr.chem_prod_nm_en = #{chemProdNmEn}
        and cmr.makecp_cd = #{makecpCd}
        and cmr.vendor_cd = #{vendorCd}
        <if test= "msdsRqstNo != null and msdsRqstNo > 0">
        and msds_rqst_no not in (#{msdsRqstNo})
        </if>
        <if test= "msdsGrpNo != null and msdsGrpNo > 0">
        and msds_grp_no not in (#{msdsGrpNo})
        </if>
        union all
        select count(*) as cnt
        from chm_msds_rqst cmr
        where 1=1
        and msds_grp_no = #{msdsGrpNo}
        <if test= "revNum != null and !revNum.equals('')">
        and rev_num = #{revNum}
        </if>
    </select>

    <!-- MSDS 신규등록 -->
    <insert id= "createMsds" parameterType= "com.she.chm.model.MSDS">
        <selectKey keyProperty= "msdsRqstNo" resultType= "int" order= "BEFORE">
            select next value for seq_chm_msds_rqst as msds_rqst_no
          </selectKey>
        /* MSDSMapper.createMsds [MSDS.xml] */
        insert into chm_msds_rqst
            (msds_rqst_no
            ,msds_grp_no
            ,chem_prod_no
            ,chem_prod_nm_kr
            ,chem_prod_nm_en
            ,makecp_cd
            ,makecp_nm
            ,vendor_cd
            ,vendor_nm
            ,remarks
            ,write_dt
            ,rev_type
            ,rev_num
            ,new_yn
            ,del_yn
            ,plant_cd
            ,auto_ins_yn
            ,haz_danger_desc
            ,fst_aid_eye_desc
            ,fst_aid_skin_desc
            ,fst_aid_breath_desc
            ,fst_aid_eat_desc
            ,strg_mthd_desc
            ,evas_cond_desc
            ,evas_mat_desc
            ,leak_handle_desc
            ,expl_handle_desc
            ,fire_handle_desc
            ,law_expo_stnd_desc
            ,law_sphk_per_desc
            ,law_wken_meas_desc
            ,law_ind_saf_desc
            ,law_chem_mgr_desc
            ,law_dngr_mgr_desc
            ,handle_care_desc
            ,signal_desc
            ,prevent_act_desc
            ,safety_equip_desc
            ,etc
            ,etc_poison_case
            ,create_user_id
            ,create_dt
            <!-- 20220401 추가 -->
            ,msds_num
            ,secret_num
            ,secret_approval
            ,secret_expiration)
            <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
        values
            (#{msdsRqstNo}
            <if test= "msdsGrpNo != null and msdsGrpNo > 0">
            , #{msdsGrpNo}
            </if>
            <if test= "msdsGrpNo == null or msdsGrpNo == 0">
            , #{msdsRqstNo}
            </if>
            , #{chemProdNo}
            , #{chemProdNmKr}
            , #{chemProdNmEn}
            , #{makecpCd}
            , #{makecpNm}
            , #{vendorCd}
            , #{vendorNm}
            , #{remarks}
            , #{writeDt}
            , #{revType}
            , #{revNum}
            , 'Y'
            , #{delYn}
            , #{plantCd}
            , #{autoInsYn}
            , #{hazDangerDesc}
            , #{fstAidEyeDesc}
            , #{fstAidSkinDesc}
            , #{fstAidBreathDesc}
            , #{fstAidEatDesc}
            , #{strgMthdDesc}
            , #{evasCondDesc}
            , #{evasMatDesc}
            , #{leakHandleDesc}
            , #{explHandleDesc}
            , #{fireHandleDesc}
            , #{lawExpoStndDesc}
            , #{lawSphkPerDesc}
            , #{lawWkenMeasDesc}
            , #{lawIndSafDesc}
            , #{lawChemMgrDesc}
            , #{lawDngrMgrDesc}
            , #{handleCareDesc}
            , #{signalDesc}
            , #{preventActDesc}
            , #{safetyEquipDesc}
            , #{etc}
            , #{etcPoisonCase}
            , #{createUserId}
            , convert(char(10), getDate(), 23)
            <!-- 20220401 추가 -->
            , #{msdsNum}
            , #{secretNum}
            , #{secretApproval}
            , #{secretExpiration})
            <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    </insert>

    <update id= "updateNewMsds">
        /* MSDSMapper.updateNewMsds [MSDS.xml] */
        update chm_msds_rqst
        set new_yn = 'N'
        where msds_grp_no = #{msdsGrpNo}
    </update>

    <!-- MSDS 수정 -->
    <update id= "updateMsds" parameterType= "com.she.chm.model.MSDS">
        /* MSDSMapper.updateMsds [MSDS.xml] */
        update chm_msds_rqst
        set chem_prod_no = #{chemProdNo}
            ,chem_prod_nm_kr = #{chemProdNmKr}
            ,chem_prod_nm_en = #{chemProdNmEn}
            ,makecp_cd = #{makecpCd}
            ,makecp_nm = #{makecpNm}
            ,vendor_cd = #{vendorCd}
            ,vendor_nm = #{vendorNm}
            ,remarks = #{remarks}
            ,write_dt = #{writeDt}
            ,rev_type = #{revType}
            ,rev_num = #{revNum}
            ,del_yn = #{delYn}
            ,plant_cd = #{plantCd}
            ,auto_ins_yn = #{autoInsYn}
            ,haz_danger_desc = #{hazDangerDesc}
            ,fst_aid_eye_desc = #{fstAidEyeDesc}
            ,fst_aid_skin_desc = #{fstAidSkinDesc}
            ,fst_aid_breath_desc = #{fstAidBreathDesc}
            ,fst_aid_eat_desc = #{fstAidEatDesc}
            ,strg_mthd_desc = #{strgMthdDesc}
            ,evas_cond_desc = #{evasCondDesc}
            ,evas_mat_desc = #{evasMatDesc}
            ,leak_handle_desc = #{leakHandleDesc}
            ,expl_handle_desc = #{explHandleDesc}
            ,fire_handle_desc = #{fireHandleDesc}
            ,law_expo_stnd_desc = #{lawExpoStndDesc}
            ,law_sphk_per_desc = #{lawSphkPerDesc}
            ,law_wken_meas_desc = #{lawWkenMeasDesc}
            ,law_ind_saf_desc = #{lawIndSafDesc}
            ,law_chem_mgr_desc = #{lawChemMgrDesc}
            ,law_dngr_mgr_desc = #{lawDngrMgrDesc}
            ,handle_care_desc = #{handleCareDesc}
            ,signal_desc = #{signalDesc}
            ,prevent_act_desc = #{preventActDesc}
            ,safety_equip_desc = #{safetyEquipDesc}
            ,etc = #{etc}
            ,etc_poison_case = #{etcPoisonCase}
            ,update_user_id = #{updateUserId}
            ,update_dt = convert(char(10), getDate(), 23)
            <!-- 20220401 추가 -->
            ,msds_num = #{msdsNum}
            ,secret_num = #{secretNum}
            ,secret_approval = #{secretApproval}
            ,secret_expiration = #{secretExpiration}
            <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
        where msds_rqst_no = #{msdsRqstNo}
    </update>

    <select id= "getMsdsPicGraphs" resultType= "String">
        /* MSDSMapper.getMsdsPicGraphs [MSDS.xml] */
        select pic_graph_cd
        from chm_msds_pic_graph
        where msds_rqst_no = #{msdsRqstNo}
    </select>
    
    <select id= "getMsdsPicGraphNms" resultType= "String">
        /* MSDSMapper.getMsdsPicGraphs [MSDS.xml] */
        select ccm.code_nm as picGraphNm
        from chm_msds_pic_graph cmpg
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_GHS_PIC') ccm
        on ccm.code = cmpg.pic_graph_cd
        where cmpg.msds_rqst_no = #{msdsRqstNo}
    </select>

    <insert id= "createMsdsPicGraphs" parameterType= "com.she.chm.model.MSDSPicGraph">
        /* MSDSMapper.createMsdsPicGraphs [MSDS.xml] */
        insert into chm_msds_pic_graph
            (msds_rqst_no
            ,pic_graph_cd)
        values
            (#{msdsRqstNo}
            ,#{picGraphCd})
    </insert>

    <delete id= "deleteMsdsPicGraphs">
        /* MSDSMapper.deleteMsdsPicGraphs [MSDS.xml] */
        delete from chm_msds_pic_graph
        where msds_rqst_no = #{msdsRqstNo}
    </delete>
    
    <select id="searchFile" resultType="com.she.common.model.AttachFile">
    /* MSDSMapper."searchFile" [MSDS.xml] */
        select 
            attach_file_id, 
            file_no,
            task_class_nm,
            task_key,
            file_org_nm,
            file_save_nm,
            file_ext, 
            file_size, 
            file_path,
            file_down_path,
            content_type, 
            picture_explan,
            encrypt_yn, 
            create_user_id,
            create_dt 
        from com_attach_file 
        where file_no = #{fileNo} 
            and task_class_nm = 'MSDS' 
    </select>
    <delete id = "msdsDeleteLicensingStatus" parameterType = "com.she.chm.model.MSDS">
    /* MSDSMapper.msdsDeleteLicensingStatus [MSDS.xml] */
        DELETE chm_msds_rqst 
        WHERE msds_rqst_no = #{msdsRqstNo}
    </delete>
    <delete id = "deleteLicensingStatus" parameterType = "int">
    /* MSDSMapper.deleteLicensingStatus [MSDS.xml] */
        delete from chm_msds_rqst where msds_rqst_no = #{msdsRqstNo}
    </delete>

</mapper>