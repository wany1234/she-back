<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.impr.mapper.ImprMapper">
    <select id= "getImprActs" parameterType= "HashMap" resultType= "com.she.impr.model.ImprAct">
        /* ImprMapper.getImprActs [Impr.xml] */
        select sia.saf_impr_act_no                --안전개선조치번호
            ,sia.impr_class_cd                  --개선분류코드
            ,SICCode.code_nm as impr_class_nm   --개선분류명
            ,sia.act_class_cd                   --조치처리구분코드
            ,SACCode.code_nm as act_class_nm    --조치처리구분명
            ,sia.impr_rqst_ymd                  --요청일
            , iif(sia.impr_title = '', sia.discover_matter, isnull(sia.impr_title, sia.discover_matter)) as impr_title
            , iif(sia.impr_rqst_contents = '', sia.discover_matter, isnull(sia.impr_rqst_contents, sia.discover_matter)) as impr_rqst_contents    -- 개선요청내용
            ,sia.impr_rqst_dept_cd              --개선요청부서코드
            ,sia.impr_rqst_vendor_cd
            ,case when sia.impr_step_cd = 'IMST5' then '완료' else '미완료' end as completYn
            ,case when isnull(sia.impr_rqst_dept_cd, '') != '' then rqstDept.dept_nm
                else rqstVendor.vendor_nm
            end as impr_rqst_dept_nm                --개선요청부서명
            ,sia.impr_rqst_user_id              --개선요청자사용자ID
            ,rqstUser.user_nm as impr_rqst_user_nm              --개선요청자성명            
            ,sia.impr_step_cd                   --개선진행단계코드
            ,SISCode.code_nm as impr_step_nm    --개선진행단계명
            ,sia.ref_table_id                   --관련테이블PKID
            ,sia.act_sch_ymd                    --조치예정일
            ,sia.act_confirm_ymd                --조치일자
            ,isnull(sia.act_limit_ymd, sia.act_confirm_ymd) as act_limit_ymd --조치기한

            ,sia.act_user_id                    --조치담당자ID
            ,actUser.user_nm as act_user_nm
            ,sia.act_dept_cd
            ,actDept.dept_nm as act_dept_nm
            ,sia.pre_act_dept_cd
            ,preActDept.dept_nm as pre_act_dept_nm
            ,sia.act_vendor_cd
            ,actVendor.vendor_nm as act_vendor_nm
            ,sia.pre_act_vendor_cd
            ,preActVendor.vendor_nm as pre_act_vendor_nm
            ,sia.act_dept_chng_contents
            ,sia.act_vendor_chng_contents
            ,sia.act_vendor_confirm_yn

            ,sia.act_result_contents            --조치결과내용
            ,sia.act_result_review              --조치결과검토
            ,sia.create_user_id                 --등록자ID
            ,sia.create_dt                      --등록일
            ,sia.update_user_id                 --최종수정자ID
            ,sia.update_dt                      --최종수정일
            ,sia.subconn_rqst_yn                --업체개선요청여부
            ,sia.process_cd                     --공정코드
            ,cp.process_nm                      --공정
            ,sia.dtl_locat                      --세부위치
            ,sia.bef_freq
            ,sia.bef_inten
            ,sia.bef_deg_risk
            ,sia.aft_freq
            ,sia.aft_inten
            ,sia.aft_deg_risk
            ,sia.plant_cd
            ,plant.code_nm as plant_nm
            ,sia.appr_rqst_no
            ,car.biz_appr_step_cd
            ,isnull(bizAppr.code_nm, '결재요청전' ) as biz_appr_step_nm
            ,sia.discover_matter
            , case
                 when dbo.GET_USER_NM(sia.update_user_id) = '' then dbo.GET_USER_NM(sia.create_user_id)
                 else dbo.GET_USER_NM(sia.update_user_id) end    as writer_user_nm
            , case when sia.update_dt is null then convert(date, sia.create_dt) else convert(date, sia.update_dt) end   as writer_dt
            ,sia.state_cd
            <if test="imprGubun !=null and !imprGubun.equals('')">
            ,concat(dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'COM_PHASE',#{imprGubun}),'(',
                   <if test='imprGubun.equals("PHASE3")'>                      
                    case when sia.state_cd  &gt; 'IMPR2' then '접수완료'
                        else dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'impr_state',isnull(sia.state_cd,'IMPR1')) end
                   </if>
                   <if test='!imprGubun.equals("PHASE3")'>
                        case when car.biz_appr_step_cd = 'BAPSD' then bizAppr.code_nm else dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'impr_state',isnull(sia.state_cd,'IMPR1')) end
                   </if> 
            ,')') as state_nm
            </if>
            ,case when car.biz_appr_step_cd = 'BAPSD' then bizAppr.code_nm else dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'impr_state',isnull(sia.state_cd,'IMPR1')) end as appr_state_nm
         from saf_impr_act sia
         left outer join com_appr_rqst car
         on sia.appr_rqst_no = car.appr_rqst_no
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') bizAppr
         on car.biz_appr_step_cd = bizAppr.code
         left outer join com_user actUser
         on sia.act_user_id = actUser.user_id
         left outer join com_dept actDept
         on sia.act_dept_cd = actDept.dept_cd
         left outer join com_dept preActDept
         on sia.pre_act_dept_cd = preActDept.dept_cd
         left outer join com_vendor_mst actVendor
         on sia.act_vendor_cd = actVendor.vendor_cd
         left outer join com_vendor_mst preActVendor
         on sia.pre_act_vendor_cd = preActVendor.vendor_cd
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on sia.plant_cd = plant.code
         left outer join com_process cp
         on sia.process_cd = cp.process_cd
         left outer join com_dept rqstDept
         on sia.impr_rqst_dept_cd = rqstDept.dept_cd
         left outer join com_vendor_mst rqstVendor
         on sia.impr_rqst_vendor_cd = rqstVendor.vendor_cd
         left outer join com_user rqstUser
         on sia.impr_rqst_user_id = rqstUser.user_id
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_CLASS') SICCode
         on sia.impr_class_cd = SICCode.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_ACT_CLASS') SACCode
         on sia.act_class_cd = SACCode.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_STEP') SISCode
         on sia.impr_step_cd = SISCode.code
        <!-- 개선 요청/조치사항 메뉴 조회시 각 업무별 결재 완료된 건만 조회 -->
        <if test='apprFlag != null and apprFlag.equals("Y")'>
         inner join impr_act_ref_table_v ref
         on ref.ref_table_id = sia.ref_table_id and ref.impr_class_cd = sia.impr_class_cd
        </if>
         where 1=1
         and del_yn != 'Y'
         <if test= "plantCd != null and !plantCd.equals('')">
            and sia.plant_cd = #{plantCd}
        </if>
        <if test= "subPlantCd != null and !subPlantCd.equals('')">
            and sia.plant_cd = #{subPlantCd}
        </if>
     
        <if test= "imprClassCd != null and !imprClassCd.equals('') and !imprClassCd.equals('ICL01') and !imprClassCd.equals('ICL13')">
            and sia.impr_class_cd = #{imprClassCd}
        </if>
        <if test= "startYmd != null and endYmd != null and !startYmd.equals('') and !endYmd.equals('') and actClassCd.equals('ACL01')">
        -- 즉시조치에 대한 기간 검색
            and sia.act_confirm_ymd between #{startYmd} and #{endYmd}
        </if>
         <if test= "startYmd != null and endYmd != null and !startYmd.equals('') and !endYmd.equals('') and actClassCd.equals('ACL02')">
        -- 개선요청에 대한 기간 검색
            and sia.impr_rqst_ymd between #{startYmd} and #{endYmd}
        </if>
        <if test= "imprStepCd != null and !imprStepCd.equals('')">
            and sia.impr_step_cd = #{imprStepCd}
        </if>
        <if test= "imprTitle != null and !imprTitle.equals('')">
            and sia.impr_title like '%' + #{imprTitle} + '%'
        </if>
        <if test= "imprRqstDeptCd != null and !imprRqstDeptCd.equals('')">
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
            AND EXISTS (SELECT 1 WHERE ISNULL(#{imprRqstDeptCd}, '') = ''
                        UNION ALL
                        SELECT 1 WHERE #{imprRqstDeptSubYn} = 'Y' AND sia.impr_rqst_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{imprRqstDeptCd}))
                        UNION ALL
                        SELECT 1 WHERE #{imprRqstDeptSubYn} = 'N' AND sia.impr_rqst_dept_cd = #{imprRqstDeptCd}
                        )
            <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <if test= "refTableId != null and refTableId != 0">           
            <choose>
               <when test= "imprClassCd != null and !imprClassCd.equals('') and imprClassCd.equals('ICL01')">
                 and ((sia.impr_class_cd = 'ICL01' and sia.ref_table_id = #{refTableId})
                    or (sia.impr_class_cd = 'ICL44' 
                           and sia.ref_table_id in (
                                                   select saf_accident_cau_meas_no
                                                   from saf_accident_cau_meas
                                                   where saf_accident_no = #{refTableId}
                                                   )
                            )                    
                    )      
               </when>
               <when test="imprClassCd != null and !imprClassCd.equals('') and imprClassCd.equals('ICL13')">
                 and ((sia.impr_class_cd = 'ICL43' and  sia.ref_table_id = #{refTableId})
                 or (sia.impr_class_cd = 'ICL13' and  sia.ref_table_id in (
                      select agenda_no
                      from mgt_committee_agenda
                      where committee_conf_no = #{refTableId}
                     ))) 
               </when>
               <otherwise>
                 and sia.ref_table_id = #{refTableId}
               </otherwise>   
            </choose>              
        </if>
        <if test= "actClassCd != null and !actClassCd.equals('')">
            and sia.act_class_cd = #{actClassCd}
        </if>
        <if test= "notImprStepCd != null and !notImprStepCd.equals('')">
            and sia.impr_step_cd != #{notImprStepCd}
        </if>
        <if test= "subconnNm != null and !subconnNm.equals('')">
            and actVendor.vendor_nm like '%' + #{subconnNm} + '%'
        </if>
        <if test= "actDeptCd != null and !actDeptCd.equals('')">
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
            AND EXISTS (SELECT 1 WHERE ISNULL(#{actDeptCd}, '') = ''
                        UNION ALL
                        SELECT 1 WHERE #{actDeptSubYn} = 'Y' AND sia.act_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{actDeptCd}))
                        UNION ALL
                        SELECT 1 WHERE #{actDeptSubYn} = 'N' AND sia.act_dept_cd = #{actDeptCd}
                        )
            <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        
        <if test= "limitStartYmd != null and limitEndYmd != null and !limitStartYmd.equals('') and !limitEndYmd.equals('') and actClassCd.equals('ACL01')">
        -- 즉시조치에 대한 기간 검색
            and sia.act_confirm_ymd between #{limitStartYmd} and #{litmitEndYmd}
        </if>
         <if test= "limitStartYmd != null and limitEndYmd != null and !limitStartYmd.equals('') and !limitEndYmd.equals('') and actClassCd.equals('ACL02')">
        -- 개선요청에 대한 기간 검색
            and sia.act_limit_ymd between #{limitStartYmd} and #{limitEndYmd}
        </if>
        
        <if test='imprChk != null and imprChk.equals("Y")'>
            and 
            ( datediff(day, GETDATE() , sia.act_limit_ymd) &lt; 0 
            and (sia.act_confirm_ymd='' or sia.act_confirm_ymd is null) )
                    
        </if>
    <!--     <if test= "actLimitYmd != null and !actLimitYmd.equals('')">
        and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{actLimitYmd}
        </if> -->
        <if test= "actVendorCd != null and !actVendorCd.equals('')">
            and sia.act_vendor_cd = #{actVendorCd}
        </if>
        <if test= "vendorSearchFlag != null and !vendorSearchFlag.equals('')">
            -- 협력업체 용으로 들어온 경우로 개선조치중, 조치완료 단계만 나온다.
            and sia.impr_step_cd in ('IMST3', 'IMST5')
        </if>

        <if test="startDt != null and !startDt.equals('') and endDt != null and !endDt.equals('')">
            -- 대쉬보드 팝업 기준일 조회
            and iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd) between #{startDt} and #{endDt}
        </if>
        <!-- 개선 요청/조치사항 메뉴 조회시 접수대기상태부터 조회 -->
        <if test="apprFlag != null and !apprFlag.equals('')">
            <!-- 작업위험성평가 현황 사용 시  -->
            <choose>
                <when test= "'requestCnt'.equals(apprFlag)">
                    -- 개선요청
                </when>
                <when test= "'incompletCnt'.equals(apprFlag)">
                    -- 미완료
                    and sia.impr_step_cd != 'IMST5'
                </when>
                <when test= "'overdueCnt'.equals(apprFlag)">
                    -- 기한초과
                    and datediff(day, convert(char(10), GETDATE(), 23) , sia.act_limit_ymd) &lt; 0
                    and sia.impr_step_cd != 'IMST5'
                    and sia.act_class_cd = 'ACL02'
                </when>
                <when test= "'completCnt'.equals(apprFlag)">
                    -- 완료
                    and sia.impr_step_cd = 'IMST5'
                </when>
                <otherwise>
                    and sia.impr_step_cd != 'IMST1'
                </otherwise>
            </choose>
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL01") and !subPlantCd.equals("합계")'>
            and ((sia.impr_class_cd = 'ICL44'
                 and sia.ref_table_id in (
                  select saf_accident_cau_meas_no
                  from saf_accident_cau_meas sac
                  inner join saf_accident sa on sa.saf_accident_no = sac.saf_accident_no
                  where 1=1
              ))
              or (sia.impr_class_cd = 'ICL01'
                 and sia.ref_table_id in (
                  select saf_accident_no
                  from saf_accident sa
                  where 1=1
              ))
            )
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL13") and !subPlantCd.equals("합계")'>
            and ((sia.impr_class_cd = 'ICL13'
                 and sia.ref_table_id in (
                  select mca.agenda_no
                  from mgt_committee_conf mcc 
                  INNER JOIN mgt_committee_agenda mca
                      ON mca.committee_conf_no = mcc.committee_conf_no
                  where 1=1
                  and mcc.progress_step_cd = 'CMS03'
                  and mcc.state_cd = 'STATE4'  
              ))
              or (sia.impr_class_cd = 'ICL43'
                 and sia.ref_table_id in (
                  select mcc.committee_conf_no
                  from mgt_committee_conf mcc
                  where 1=1
                  and mcc.progress_step_cd = 'CMS03'
                  and mcc.state_cd = 'STATE4'  
              ))
            )
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL36") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL37") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL38") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL39") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL40") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL41") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>
        <if test= 'monFlag != null and monFlag != 0 and imprClassCd.equals("ICL42") and !subPlantCd.equals("합계")'>
            and sia.ref_table_id in (
               select ref_table_id from dbo.GET_IMPR_REF_TABLE_IDS(#{imprClassCd}, #{strParam}))
        </if>        

        <if test="year != null and !year.equals('')">            
            <if test= "monFlag != null and monFlag > 0  and monFlag == 200">
                and substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '',  sia.act_confirm_ymd, sia.act_limit_ymd), 23), 1, 4) &lt; #{year}
            </if>
            <if test= "monFlag != null and monFlag > 0  and monFlag == 300">
                and substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '',  sia.act_confirm_ymd, sia.act_limit_ymd), 23), 1, 4) &lt;= #{year}
            </if>   
            <if test= "monFlag != null and monFlag > 0  and monFlag != 200 and monFlag != 300">
                and substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '',  sia.act_confirm_ymd, sia.act_limit_ymd), 23), 1, 4) = #{year}
            </if>      
        </if>
        
        <if test= "monFlag != null and monFlag != 0 and monFlag != 100 and monFlag != 200 and monFlag != 300">
          and substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '',  sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = #{monFlag}
        </if>
        <if test="stateCd != null and !stateCd.equals('')">
        and sia.state_cd = #{stateCd}
        </if>
        
        <choose>
            <when test= "popupMode != null and !popupMode.equals('')">
                order by completYn desc, sia.act_class_cd
            </when>
            <otherwise>
                order by writer_dt desc, sia.impr_rqst_ymd desc
            </otherwise>
        </choose>

    </select>

    <select id= "getImprAct" resultType= "com.she.impr.model.ImprAct">
        /* ImprMapper.getImprAct [Impr.xml] */
        select sia.saf_impr_act_no                --안전개선조치번호
            ,sia.impr_class_cd                  --개선분류코드
            ,SICCode.code_nm as impr_class_nm   --개선분류명
            ,sia.act_class_cd                   --조치처리구분코드
            ,SACCode.code_nm as act_class_nm    --조치처리구분명
            ,sia.impr_rqst_ymd                  --요청일
            , iif(sia.impr_title = '', sia.discover_matter, isnull(sia.impr_title, sia.discover_matter)) as impr_title
            , iif(sia.impr_rqst_contents = '', sia.discover_matter, isnull(sia.impr_rqst_contents, sia.discover_matter)) as impr_rqst_contents    -- 개선요청내용
            ,sia.impr_rqst_dept_cd              --개선요청부서코드
            ,sia.impr_rqst_vendor_cd

            ,case when isnull(sia.impr_rqst_dept_cd, '') != '' then rqstDept.dept_nm
                else rqstVendor.vendor_nm
            end as impr_rqst_dept_nm                --개선요청부서명
            ,isnull(sia.impr_rqst_user_id, sia.create_user_id) as impr_rqst_user_id --개선요청자사용자ID
            ,isnull(rqstUser.user_nm, dbo.GET_USER_NM(sia.update_user_id)) as impr_rqst_user_nm --개선요청자성명            
            ,sia.impr_step_cd                   --개선진행단계코드
            ,SISCode.code_nm as impr_step_nm    --개선진행단계명
            ,sia.ref_table_id                   --관련테이블PKID
            ,sia.act_sch_ymd                    --조치예정일
            ,sia.act_confirm_ymd                --조치일자
            ,sia.act_limit_ymd                  --조치기한

            ,sia.act_user_id                    --조치담당자ID
            ,actUser.user_nm as act_user_nm
            ,sia.act_dept_cd
            ,actDept.dept_nm as act_dept_nm
            ,sia.pre_act_dept_cd
            ,preActDept.dept_nm as pre_act_dept_nm
            ,case when isnull(sia.pre_act_dept_cd, '') = '' then 'N' else 'Y' end as act_change_yn -- 조치부서 변경여부
            ,sia.act_vendor_cd
            ,actVendor.vendor_nm as act_vendor_nm
            ,sia.pre_act_vendor_cd
            ,preActVendor.vendor_nm as pre_act_vendor_nm
            ,sia.act_dept_chng_contents
            ,sia.act_vendor_chng_contents
            ,sia.act_vendor_confirm_yn

            ,sia.act_result_contents            --조치결과내용
            ,sia.act_result_review              --조치결과검토
            ,sia.create_user_id                 --등록자ID
            ,dbo.GET_USER_NM(sia.create_user_id) as createNm -- 작성자
            ,convert(char(10), sia.create_dt, 23) as create_dt--등록일
            ,sia.update_user_id                 --최종수정자ID
            ,sia.update_dt                      --최종수정일
            ,sia.subconn_rqst_yn                --업체개선요청여부
            ,sia.process_cd                     --공정코드
            ,cp.process_nm                      --공정
            ,sia.dtl_locat                      --세부위치
            ,sia.bef_freq
            ,sia.bef_inten
            ,sia.bef_deg_risk
            ,sia.aft_freq
            ,sia.aft_inten
            ,sia.aft_deg_risk
            ,sia.plant_cd
            ,plant.code_nm as plant_nm
            ,sia.appr_rqst_no
            ,car.biz_appr_step_cd
            ,isnull(bizAppr.code_nm, '결재요청전' ) as biz_appr_step_nm
            ,sia.discover_matter
         from saf_impr_act sia
         left outer join com_appr_rqst car
         on sia.appr_rqst_no = car.appr_rqst_no
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') bizAppr
         on car.biz_appr_step_cd = bizAppr.code
         left outer join com_user actUser
         on sia.act_user_id = actUser.user_id
         left outer join com_dept actDept
         on sia.act_dept_cd = actDept.dept_cd
         left outer join com_dept preActDept
         on sia.pre_act_dept_cd = preActDept.dept_cd
         left outer join com_vendor_mst actVendor
         on sia.act_vendor_cd = actVendor.vendor_cd
         left outer join com_vendor_mst preActVendor
         on sia.pre_act_vendor_cd = preActVendor.vendor_cd
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on sia.plant_cd = plant.code
         left outer join com_process cp
         on sia.process_cd = cp.process_cd
         left outer join com_dept rqstDept
         on sia.impr_rqst_dept_cd = rqstDept.dept_cd
         left outer join com_vendor_mst rqstVendor
         on sia.impr_rqst_vendor_cd = rqstVendor.vendor_cd
         left outer join com_user rqstUser
         on sia.impr_rqst_user_id = rqstUser.user_id
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_CLASS') SICCode
         on sia.impr_class_cd = SICCode.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_ACT_CLASS') SACCode
         on sia.act_class_cd = SACCode.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_STEP') SISCode
         on sia.impr_step_cd = SISCode.code
         where 1=1
         and sia.saf_impr_act_no = #{safImprActNo}
    </select>

    <insert id= "createImprAct" parameterType= "com.she.impr.model.ImprAct">
        /* ImprMapper.createImprAct [Impr.xml] */
           <selectKey keyProperty= "safImprActNo" resultType= "com.she.impr.model.ImprAct" order= "BEFORE">
            select next value for seq_saf_impr_act as safImprActNo
          </selectKey>
        insert into saf_impr_act
            (saf_impr_act_no
            ,impr_class_cd
            ,act_class_cd
            ,impr_rqst_ymd
            ,impr_title
            ,impr_rqst_dept_cd
            ,impr_rqst_vendor_cd
            ,impr_rqst_user_id
            ,impr_rqst_contents
            ,impr_step_cd
            ,ref_table_id
            ,act_sch_ymd
            ,act_confirm_ymd
            ,act_limit_ymd
            ,act_dept_cd
            ,act_user_id
            ,act_result_contents
            ,act_result_review
            ,subconn_rqst_yn
            ,process_cd
            ,dtl_locat
            ,bef_freq
            ,bef_inten
            ,bef_deg_risk
            ,aft_freq
            ,aft_inten
            ,aft_deg_risk
            ,pre_act_dept_cd
            ,act_dept_chng_contents
            ,plant_cd
            ,discover_matter
            ,act_vendor_cd
            ,create_user_id
            ,create_dt)
         values
            (#{safImprActNo}
            ,#{imprClassCd}
            ,#{actClassCd}
            <if test= 'actClassCd != null and actClassCd.equals("ACL01")'>
                ,#{actConfirmYmd}
            </if>
            <if test= 'actClassCd != null and actClassCd.equals("ACL02")'>
                ,#{imprRqstYmd}
            </if>
            ,#{imprTitle}
            <if test= 'actClassCd != null and actClassCd.equals("ACL01")'>
                ,#{actDeptCd}
            </if>
            <if test= 'actClassCd != null and actClassCd.equals("ACL02")'>
                ,#{imprRqstDeptCd}
            </if>
            ,#{imprRqstVendorCd}
            ,#{imprRqstUserId}
            ,#{imprRqstContents}
            ,#{imprStepCd}
            ,#{refTableId}
            ,#{actSchYmd}
            ,#{actConfirmYmd}
            ,#{actLimitYmd}
            ,#{actDeptCd}
            ,#{actUserId}
            ,#{actResultContents}
            ,#{actResultReview}
            ,#{subconnRqstYn}
            ,#{processCd}
            ,#{dtlLocat}
            ,#{befFreq}
            ,#{befInten}
            ,#{befDegRisk}
            ,#{aftFreq}
            ,#{aftInten}
            ,#{aftDegRisk}
            ,#{preActDeptCd}
            ,#{actDeptChngContents}
            ,#{plantCd}
            ,#{discoverMatter}
            ,#{actVendorCd}
            ,#{createUserId}
            ,getdate())
    </insert>

    <update id= "updateImprAct" parameterType= "com.she.impr.model.ImprAct">
        /* ImprMapper.updateImprAct [Impr.xml] */
        <selectKey keyProperty= "actDeptNm" resultType= "com.she.impr.model.ImprAct" order= "BEFORE">
            select (select dept_nm from com_dept where dept_cd = #{actDeptCd, jdbcType=VARCHAR}) as actDeptNm
          </selectKey>
        update saf_impr_act
            set impr_class_cd = #{imprClassCd}
                ,act_class_cd = #{actClassCd}
                <if test= 'actClassCd != null and actClassCd.equals("ACL01")'>
                ,impr_rqst_ymd = #{actConfirmYmd}
                </if>
                <if test= 'actClassCd != null and actClassCd.equals("ACL02")'>
                    <if test= 'imprRqstYmd != null and !"".equals(imprRqstYmd)'>
                        ,impr_rqst_ymd = #{imprRqstYmd}
                    </if>
                </if>
                ,impr_title = #{imprTitle}
                <if test= 'actClassCd != null and actClassCd.equals("ACL01")'>
                ,impr_rqst_dept_cd = #{actDeptCd}
                </if>
                <if test= 'actClassCd != null and actClassCd.equals("ACL02")'>
                ,impr_rqst_dept_cd = #{imprRqstDeptCd}
                </if>
                ,impr_rqst_vendor_cd = #{imprRqstVendorCd}
                ,impr_rqst_user_id = #{imprRqstUserId}
                ,impr_rqst_contents = #{imprRqstContents}
                ,impr_step_cd = #{imprStepCd}
                ,ref_table_id = #{refTableId}
                ,act_sch_ymd = #{actSchYmd}
                ,act_confirm_ymd = #{actConfirmYmd}
                ,act_limit_ymd = #{actLimitYmd}
                ,act_dept_cd = #{actDeptCd}
                ,act_vendor_cd = #{actVendorCd}
                ,act_user_id = #{actUserId}
                ,act_result_contents = #{actResultContents}
                ,act_result_review = #{actResultReview}
                ,subconn_rqst_yn = #{subconnRqstYn}
                ,process_cd = #{processCd}
                ,dtl_locat = #{dtlLocat}
                ,bef_freq = #{befFreq}
                ,bef_inten = #{befInten}
                ,bef_deg_risk = #{befDegRisk}
                ,aft_freq = #{aftFreq}
                ,aft_inten = #{aftInten}
                ,aft_deg_risk = #{aftDegRisk}
                ,pre_act_dept_cd = #{preActDeptCd}
                ,act_dept_chng_contents = #{actDeptChngContents}
                ,pre_act_vendor_cd = #{preActVendorCd}
                ,act_vendor_chng_contents = #{actVendorChngContents}
                ,act_vendor_confirm_yn = #{actVendorConfirmYn}
                ,plant_cd = #{plantCd}
                ,discover_matter = #{discoverMatter}
                ,state_cd = #{stateCd}
                ,update_user_id = #{updateUserId}
                ,update_dt = getdate()
        where saf_impr_act_no = #{safImprActNo}
    </update>

    <update id= "cancelImprAct" parameterType= "com.she.impr.model.ImprAct">
        /* ImprMapper.cancelImprAct [Impr.xml] */
        update saf_impr_act
            set del_yn = 'Y'
              , impr_step_cd = 'IMST1'
        where saf_impr_act_no = #{safImprActNo}
    </update>

    <delete id= "deleteImprAct">
        /* ImprMapper.deleteImprAct [Impr.xml] */
        delete saf_impr_act
        where saf_impr_act_no = #{safImprActNo}
    </delete>

    <delete id= "deleteImprActRefTableId">
        /* ImprMapper.deleteImprActRefTableId [Impr.xml] */
        delete saf_impr_act
        where ref_table_id = #{refTableId}
    </delete>

    <select id="getImprActStatus" resultType="com.she.impr.model.ImprAct">
        /* ImprMapper.getImprActStatus [Impr.xml] */
        with imprClass as (
            select impr.code
                ,impr.code_nm
                ,impr.sort_order
            from dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_CLASS') impr
            where impr.code_group_cd = 'SAF_IMPR_CLASS'
            and impr.use_yn = 'Y'
            <if test= "imprClassCd != null and !imprClassCd.equals('')">
                and impr.code = #{imprClassCd}
            </if>
        ), impr as (
            select a.impr_class_cd
                ,a.impr_step_cd
            from saf_impr_act a
            where 1=1
            and a.act_class_cd = 'ACL02'
            and a.del_yn != 'Y'
            <!-- <choose>
                <when test= "actClassCd != null and actClassCd != ''">
                    and a.act_class_cd = 'ACL02'
                </when>
                <otherwise>
                    and a.act_class_cd = 'ACL01'
                </otherwise>
            </choose> -->

            <if test= "plantCd != null and !plantCd.equals('')">
                and a.plant_cd = #{plantCd}
            </if>
            <if test= "imprClassCd != null and !imprClassCd.equals('')">
                and a.impr_class_cd = #{imprClassCd}
            </if>
            <if test= "startYmd != null and endYmd != null and !startYmd.equals('') and !endYmd.equals('')">
                and convert(datetime, a.impr_rqst_ymd) between convert(datetime, #{startYmd}) and convert(datetime, #{endYmd})
            </if>
            <if test= "actDeptCd != null and !actDeptCd.equals('')">
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
            AND EXISTS (SELECT 1 WHERE ISNULL(#{actDeptCd}, '') = ''
                        UNION ALL
                        SELECT 1 WHERE #{actDeptSubYn} = 'Y' AND a.act_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{actDeptCd}))
                        UNION ALL
                        SELECT 1 WHERE #{actDeptSubYn} = 'N' AND a.act_dept_cd = #{actDeptCd}
                        )
            <!-- 하위부서 포함여부 관련 쿼리 끝 -->
            </if>
            <if test= "vendorCd != null and !vendorCd.equals('')">
            and a.act_vendor_cd = #{vendorCd}
            </if>
        ), impr2 as (
            select a.impr_class_cd
                ,a.impr_step_cd
            from saf_impr_act a
            where 1=1
            and a.act_class_cd = 'ACL01'
            and a.del_yn != 'Y'
            <!-- <choose>
                <when test= "actClassCd != null and actClassCd != ''">
                    and a.act_class_cd = 'ACL02'
                </when>
                <otherwise>
                    and a.act_class_cd = 'ACL01'
                </otherwise>
            </choose> -->

            <if test= "plantCd != null and !plantCd.equals('')">
                and a.plant_cd = #{plantCd}
            </if>
            <if test= "imprClassCd != null and !imprClassCd.equals('')">
                and a.impr_class_cd = #{imprClassCd}
            </if>
            <if test= "startYmd != null and endYmd != null and !startYmd.equals('') and !endYmd.equals('')">
                and convert(datetime, a.act_confirm_ymd) between convert(datetime, #{startYmd}) and convert(datetime, #{endYmd})
            </if>
            <if test= "actDeptCd != null and !actDeptCd.equals('')">
            and a.act_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{actDeptCd}))
            </if>
            <if test= "vendorCd != null and !vendorCd.equals('')">
            and a.act_vendor_cd = #{vendorCd}
            </if>
        ), imprNotPlan as (
            select count(*) as cnt
                ,impr.impr_class_cd
            from impr
            inner join imprClass
            on impr.impr_class_cd = imprClass.code
            where impr.impr_step_cd = 'IMST1'
            group by impr.impr_class_cd
        ), imprPlan as (
            select count(*) as cnt
                ,impr.impr_class_cd
            from impr
            inner join imprClass
            on impr.impr_class_cd = imprClass.code
            where impr.impr_step_cd = 'IMST2'
            group by impr.impr_class_cd
        ), imprAct as (
            select count(*) as cnt
                ,impr.impr_class_cd
            from impr
            inner join imprClass
            on impr.impr_class_cd = imprClass.code
            where impr.impr_step_cd = 'IMST3'
            group by impr.impr_class_cd
        ), imprComplete as (
            select count(*) as cnt
                ,impr.impr_class_cd
            from impr
            inner join imprClass
            on impr.impr_class_cd = imprClass.code
            where impr.impr_step_cd = 'IMST5'
            group by impr.impr_class_cd
        ), imprNotPlan2 as (
            select count(*) as cnt
                ,impr2.impr_class_cd
            from impr2
            inner join imprClass
            on impr2.impr_class_cd = imprClass.code
            where impr2.impr_step_cd = 'IMST1'
            group by impr2.impr_class_cd
        ), imprPlan2 as (
            select count(*) as cnt
                ,impr2.impr_class_cd
            from impr2
            inner join imprClass
            on impr2.impr_class_cd = imprClass.code
            where impr2.impr_step_cd = 'IMST2'
            group by impr2.impr_class_cd
        ), imprAct2 as (
            select count(*) as cnt
                ,impr2.impr_class_cd
            from impr2
            inner join imprClass
            on impr2.impr_class_cd = imprClass.code
            where impr2.impr_step_cd = 'IMST3'
            group by impr2.impr_class_cd
        ), imprComplete2 as (
            select count(*) as cnt
                ,impr2.impr_class_cd
            from impr2
            inner join imprClass
            on impr2.impr_class_cd = imprClass.code
            where impr2.impr_step_cd = 'IMST5'
            group by impr2.impr_class_cd
        )
        select imprClass.code as impr_class_cd
            ,imprClass.code_nm as impr_class_nm
            ,isnull(imprNotPlan.cnt, 0) as not_plan_cnt
            ,isnull(imprPlan.cnt, 0) as plan_cnt
            ,isnull(imprAct.cnt, 0) as act_cnt
            ,isnull(imprComplete.cnt, 0) as complete_cnt
            ,isnull(imprNotPlan2.cnt, 0) as not_plan_cnt2
            ,isnull(imprPlan2.cnt, 0) as plan_cnt2
            ,isnull(imprAct2.cnt, 0) as act_cnt2
            ,isnull(imprComplete2.cnt, 0) as complete_cnt2
            ,case when isnull(imprNotPlan.cnt, 0) + isnull(imprPlan.cnt, 0) + isnull(imprAct.cnt, 0) + isnull(imprComplete.cnt, 0) = 0 then 0
                else (isnull(imprComplete.cnt, 0) * 100) / (isnull(imprNotPlan.cnt, 0) + isnull(imprPlan.cnt, 0) + isnull(imprAct.cnt, 0) + isnull(imprComplete.cnt, 0))
            end as transition_rate1
            ,case when isnull(imprNotPlan2.cnt, 0) + isnull(imprPlan2.cnt, 0) + isnull(imprAct2.cnt, 0) + isnull(imprComplete2.cnt, 0) = 0 then 0
                else (isnull(imprComplete2.cnt, 0) * 100) / (isnull(imprNotPlan2.cnt, 0) + isnull(imprPlan2.cnt, 0) + isnull(imprAct2.cnt, 0) + isnull(imprComplete2.cnt, 0))
            end as transition_rate2
            ,case when isnull(imprNotPlan.cnt, 0) + isnull(imprPlan.cnt, 0) + isnull(imprAct.cnt, 0) + isnull(imprComplete.cnt, 0) + isnull(imprNotPlan2.cnt, 0) + isnull(imprPlan2.cnt, 0) + isnull(imprAct2.cnt, 0) + isnull(imprComplete2.cnt, 0) = 0 then 0
                else ((isnull(imprComplete.cnt, 0) + isnull(imprComplete2.cnt, 0)) * 100) / (isnull(imprNotPlan.cnt, 0) + isnull(imprPlan.cnt, 0) + isnull(imprAct.cnt, 0) + isnull(imprComplete.cnt, 0) + isnull(imprNotPlan2.cnt, 0) + isnull(imprPlan2.cnt, 0) + isnull(imprAct2.cnt, 0) + isnull(imprComplete2.cnt, 0))
            end as transition_rate3
        from imprClass
        left outer join imprNotPlan
        on imprClass.code = imprNotPlan.impr_class_cd
        left outer join imprPlan
        on imprClass.code = imprPlan.impr_class_cd
        left outer join imprAct
        on imprClass.code = imprAct.impr_class_cd
        left outer join imprComplete
        on imprClass.code = imprComplete.impr_class_cd
        left outer join imprNotPlan2
        on imprClass.code = imprNotPlan2.impr_class_cd
        left outer join imprPlan2
        on imprClass.code = imprPlan2.impr_class_cd
        left outer join imprAct2
        on imprClass.code = imprAct2.impr_class_cd
        left outer join imprComplete2
        on imprClass.code = imprComplete2.impr_class_cd
        order by imprClass.sort_order
    </select>

    <update id="completeImpr">
        /* ImprMapper.completeImpr [Impr.xml] */
        update saf_impr_act
        set appr_rqst_no = #{apprRqstNo}
        <if test="imprStepCd != null and !imprStepCd.equals('')">
        ,impr_step_cd = #{imprStepCd}                
        </if>
        <if test="stateCd !=null and!stateCd.equals('')">
        ,state_cd = #{stateCd}
        </if>
        where saf_impr_act_no = #{safImprActNo}
    </update>

    <select id="getImprActDashboards" resultType="com.she.impr.model.ImprActDashboard">
        /* ImprMapper.getImprActDashboards [Impr.xml] */
        SELECT sia.saf_impr_act_no
              ,sia.impr_title
              ,cd.dept_nm as act_dept_nm
              ,case when isnull(sia.act_limit_ymd, '') = '' then 'plan'
                    when sia.act_limit_ymd &gt; getdate() then 'delay'
                    when sia.impr_step_cd = 'IMST5' then 'comp'
                    else 'plan'
               end as check_status
              ,SISCode.code_nm as impr_step_nm
          FROM saf_impr_act sia
         INNER JOIN com_dept cd
            ON sia.act_dept_cd = cd.dept_cd
         INNER JOIN dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_STEP') SISCode
            ON sia.impr_step_cd = SISCode.code
         WHERE sia.ref_table_id = #{refTableId}
           AND sia.impr_class_cd = #{imprClassCd}
           AND sia.act_class_cd = 'ACL02'
           AND del_yn != 'Y'
    </select>
    <select id="checkCodeMaster" resultType= "String">
        /* ImprMapper.checkCodeMaster [Impr.xml] */
        SELECT ISNULL(code, '') AS code
          FROM com_code_master
         WHERE 1=1
           AND code_nm = #{codeNm}
           AND code_group_cd = #{codeGroupCd}
    </select>
    <select id="checkDeptMaster" resultType= "String">
        /* ImprMapper.checkDeptMaster [Impr.xml] */
        select isnull(dept_cd, '') as dept_cd
          from com_dept
         where dept_nm = #{deptNm}
           and plant_cd = #{plantCd}
    </select>
    <select id="checkUserMaster" resultType= "String">
        /* ImprMapper.checkUserMaster [Impr.xml] */
        select isnull(user_id, '') as user_id
          from com_user where user_nm = #{actUserNm}
           and dept_cd = #{actDeptCd}
           and user_id = #{actUserId}

    </select>
    <insert id="excelUploadCreateImprAct" parameterType="com.she.impr.model.ImprAct">
        /* ImprMapper.excelUploadCreateImprAct [Impr.xml] */
           <selectKey keyProperty= "safImprActNo" resultType= "com.she.impr.model.ImprAct" order= "BEFORE">
            select next value for seq_saf_impr_act as safImprActNo
          </selectKey>
        insert into saf_impr_act
            (saf_impr_act_no
            ,impr_class_cd
            ,act_class_cd
            ,impr_rqst_ymd
            ,impr_title
            ,impr_rqst_dept_cd
            ,impr_rqst_vendor_cd
            ,impr_rqst_user_id
            ,impr_rqst_contents
            ,impr_step_cd
            ,ref_table_id
            ,act_sch_ymd
            ,act_confirm_ymd
            ,act_limit_ymd
            ,act_dept_cd
            ,act_user_id
            ,act_result_contents
            ,act_result_review
            ,subconn_rqst_yn
            ,process_cd
            ,dtl_locat
            ,bef_freq
            ,bef_inten
            ,bef_deg_risk
            ,aft_freq
            ,aft_inten
            ,aft_deg_risk
            ,pre_act_dept_cd
            ,act_dept_chng_contents
            ,plant_cd
            ,discover_matter
            ,act_vendor_cd
            ,create_user_id
            ,create_dt)
         values
            (#{safImprActNo}
            ,#{imprClassCd}
            ,#{actClassCd}
            <if test= 'actClassCd != null and actClassCd.equals("ACL01")'>
                ,#{imprRqstYmd}
            </if>
            <if test= 'actClassCd != null and actClassCd.equals("ACL02")'>
                ,convert(char(10), getDate(), 23)
            </if>
            ,#{imprTitle}
            ,#{imprRqstDeptCd}
            ,#{imprRqstVendorCd}
            ,#{imprRqstUserId}
            ,#{imprRqstContents}
            ,#{imprStepCd}
            ,#{refTableId}
            ,#{actSchYmd}
            ,#{actConfirmYmd}
            ,#{actLimitYmd}
            ,#{actDeptCd}
            ,#{actUserId}
            ,#{actResultContents}
            ,#{actResultReview}
            ,#{subconnRqstYn}
            ,#{processCd}
            ,#{dtlLocat}
            ,#{befFreq}
            ,#{befInten}
            ,#{befDegRisk}
            ,#{aftFreq}
            ,#{aftInten}
            ,#{aftDegRisk}
            ,#{preActDeptCd}
            ,#{actDeptChngContents}
            ,#{plantCd}
            ,#{discoverMatter}
            ,#{actVendorCd}
            ,#{createUserId}
            ,getdate())
    </insert>
    <select id= "getNewImprActs" parameterType= "HashMap" resultType= "com.she.impr.model.ImprAct">
        /* ImprMapper.getNewImprActs [Impr.xml] */
        select sia.saf_impr_act_no                --안전개선조치번호
            ,sia.impr_class_cd                  --개선분류코드
            ,SICCode.code_nm as impr_class_nm   --개선분류명
            ,sia.act_class_cd                   --조치처리구분코드
            ,SACCode.code_nm as act_class_nm    --조치처리구분명
            ,sia.impr_rqst_ymd                  --요청일
            , iif(sia.impr_title = '', sia.discover_matter, isnull(sia.impr_title, sia.discover_matter)) as impr_title
            , iif(sia.impr_rqst_contents = '', sia.discover_matter, isnull(sia.impr_rqst_contents, sia.discover_matter)) as impr_rqst_contents    -- 개선요청내용
            ,sia.impr_rqst_dept_cd              --개선요청부서코드
            ,sia.impr_rqst_vendor_cd

            ,case when isnull(sia.impr_rqst_dept_cd, '') != '' then rqstDept.dept_nm
                else rqstVendor.vendor_nm
            end as impr_rqst_dept_nm                --개선요청부서명
            ,sia.impr_rqst_user_id              --개선요청자사용자ID
            ,rqstUser.user_nm as impr_rqst_user_nm              --개선요청자성명
            ,sia.impr_step_cd                   --개선진행단계코드
            ,SISCode.code_nm as impr_step_nm    --개선진행단계명
            ,sia.ref_table_id                   --관련테이블PKID
            ,sia.act_sch_ymd                    --조치예정일
            ,sia.act_confirm_ymd                --조치일자
            ,isnull(sia.act_limit_ymd, sia.act_confirm_ymd) as act_limit_ymd --조치기한

            ,sia.act_user_id                    --조치담당자ID
            ,actUser.user_nm as act_user_nm
            ,sia.act_dept_cd
            ,actDept.dept_nm as act_dept_nm
            ,sia.pre_act_dept_cd
            ,preActDept.dept_nm as pre_act_dept_nm
            ,sia.act_vendor_cd
            ,actVendor.vendor_nm as act_vendor_nm
            ,sia.pre_act_vendor_cd
            ,preActVendor.vendor_nm as pre_act_vendor_nm
            ,sia.act_dept_chng_contents
            ,sia.act_vendor_chng_contents
            ,sia.act_vendor_confirm_yn

            ,sia.act_result_contents            --조치결과내용
            ,sia.act_result_review              --조치결과검토
            ,sia.create_user_id                 --등록자ID
            ,sia.create_dt                      --등록일
            ,sia.update_user_id                 --최종수정자ID
            ,sia.update_dt                      --최종수정일
            ,sia.subconn_rqst_yn                --업체개선요청여부
            ,sia.process_cd                     --공정코드
            ,cp.process_nm                      --공정
            ,sia.dtl_locat                      --세부위치
            ,sia.bef_freq
            ,sia.bef_inten
            ,sia.bef_deg_risk
            ,sia.aft_freq
            ,sia.aft_inten
            ,sia.aft_deg_risk
            ,sia.plant_cd
            ,plant.code_nm as plant_nm
            ,sia.appr_rqst_no
            ,car.biz_appr_step_cd
            ,isnull(bizAppr.code_nm, '결재요청전' ) as biz_appr_step_nm
            ,sia.discover_matter
            , case
                 when dbo.GET_USER_NM(sia.update_user_id) = '' then dbo.GET_USER_NM(sia.create_user_id)
                 else dbo.GET_USER_NM(sia.update_user_id) end    as writer_user_nm
            , case when sia.update_dt is null then convert(date, sia.create_dt) else convert(date, sia.update_dt) end   as writer_dt
         from saf_impr_act sia
         left outer join com_appr_rqst car
         on sia.appr_rqst_no = car.appr_rqst_no
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') bizAppr
         on car.biz_appr_step_cd = bizAppr.code
         left outer join com_user actUser
         on sia.act_user_id = actUser.user_id
         left outer join com_dept actDept
         on sia.act_dept_cd = actDept.dept_cd
         left outer join com_dept preActDept
         on sia.pre_act_dept_cd = preActDept.dept_cd
         left outer join com_vendor_mst actVendor
         on sia.act_vendor_cd = actVendor.vendor_cd
         left outer join com_vendor_mst preActVendor
         on sia.pre_act_vendor_cd = preActVendor.vendor_cd
         left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
         on sia.plant_cd = plant.code
         left outer join com_process cp
         on sia.process_cd = cp.process_cd
         left outer join com_dept rqstDept
         on sia.impr_rqst_dept_cd = rqstDept.dept_cd
         left outer join com_vendor_mst rqstVendor
         on sia.impr_rqst_vendor_cd = rqstVendor.vendor_cd
         left outer join com_user rqstUser
         on sia.impr_rqst_user_id = rqstUser.user_id
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_CLASS') SICCode
         on sia.impr_class_cd = SICCode.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_ACT_CLASS') SACCode
         on sia.act_class_cd = SACCode.code
         inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_IMPR_STEP') SISCode
         on sia.impr_step_cd = SISCode.code
         where 1=1
         and del_yn != 'Y'
         <if test= "imprClassCd != null and !imprClassCd.equals('')">
           <choose>
              <when test='imprClassCd.equals("ICL43")'>
                and ((sia.impr_class_cd = 'ICL43' and sia.ref_table_id = #{refTableId})
                or (sia.impr_class_cd = 'ICL13' 
                    and sia.ref_table_id in (
                        select agenda_no
                        from mgt_committee_agenda
                        where committee_conf_no = #{refTableId}
                        )
                    )
                )
              </when>     
              <when test='imprClassCd.equals("ICL01")'>
                 and ((sia.impr_class_cd = 'ICL01' and sia.ref_table_id = #{refTableId})
                 or (sia.impr_class_cd = 'ICL44' 
                        and sia.ref_table_id in (
                                                select saf_accident_cau_meas_no
                                                from saf_accident_cau_meas
                                                where saf_accident_no = #{refTableId}
                                                )
                         )                    
                 )      
              </when>       
              <otherwise>
                and sia.impr_class_cd = #{imprClassCd}
              </otherwise>
           </choose>                    
        </if>

        <if test= 'refTableId != null and refTableId != 0 and !imprClassCd.equals("ICL43") and !imprClassCd.equals("ICL01")'>
            <choose>               
                <when test ="imprClassCd.equals('ICL13')">
                    and sia.ref_table_id in (
                         select agenda_no
                         from mgt_committee_agenda
                         where committee_conf_no = #{refTableId}
                         )
                    
                </when>
                <otherwise>
                    and sia.ref_table_id = #{refTableId}
                </otherwise>
            </choose>                      
        </if>
         order by writer_dt desc, sia.impr_rqst_ymd desc
    </select>
</mapper>