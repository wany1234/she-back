<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.rsa.assess.mapper.RiskAssessDeptMapper">

    <!-- 대상부서 목록 조회 -->
    <select id= "getRiskAssessDepts" resultType= "com.she.rsa.model.RiskAssessDept">
        /* RiskAssessDeptMapper.getRiskAssessDepts [RiskAssessDept.xml] */
        select rrap.assess_plan_no
            ,rrap.process_cd
            ,cp.process_nm
            <!-- ,rrap.user_id
            ,cu.user_nm
            ,rrap.assess_plan_contents -->
            ,rrap.create_user_id
            ,createUser.user_nm as create_user_nm
            ,rrap.create_dt
            ,rrap.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,rrap.update_dt
            
            <!-- 유해위험요인이 들어있는 작업의 수를 세아린다. -->
            ,(select count(*)
                from (select max(trj.job_revno) as job_id
                        from rsa_job trj
                       inner join rsa_job_step trrj on trj.job_id = trrj.job_id
                       inner join rsa_job_riskhazard rjr on trrj.job_step_id = rjr.job_step_id
                       inner join rsa_risk_hazard rrh on rjr.risk_hazard_no = rrh.risk_hazard_no
                       where rrap.process_cd = trj.process_cd
                    group by trj.process_cd, trj.process_cd, trj.job_revno) as A
            ) as job_count
        from rsa_risk_assess_process rrap
        inner join com_process cp
        on rrap.process_cd = cp.process_cd
        <!-- inner join com_user cu 
        on rrap.user_id = cu.user_id -->
        inner join com_user createUser 
        on rrap.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on rrap.update_user_id = updateUser.user_id
        where 1=1
        and rrap.assess_plan_no = #{assessPlanNo}
    </select>
    
    <!-- 대상부서 상세 조회 -->
    <select id= "getRiskAssessDept" resultType= "com.she.rsa.model.RiskAssessDept">
        /* RiskAssessDeptMapper.getRiskAssessDept [RiskAssessDept.xml] */
        select rrap.assess_plan_no
            ,rrap.process_cd
            ,cp.process_nm
            <!-- ,rrap.user_id
            ,cu.user_nm
            ,rrap.assess_plan_contents -->
            ,rrap.create_user_id
            ,createUser.user_nm as create_user_nm
            ,rrap.create_dt
            ,rrap.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,rrap.update_dt
            ,(select count(*)
            from (select max(trj.job_revno) as job_id
            from rsa_job trj
            inner join rsa_job_step trrj
            on trj.job_id = trrj.job_id
            inner join rsa_job_riskhazard rjr
            on trrj.job_step_id = rjr.job_step_id
            inner join rsa_risk_hazard rrh
            on rjr.risk_hazard_no = rrh.risk_hazard_no
            where rrap.process_cd = trj.process_cd
            group by trj.dept_cd, trj.process_cd, trj.job_revno) as A) as job_count
        from rsa_risk_assess_process rrap
        inner join com_process cp
        on rrap.process_cd = cp.process_cd
        <!-- inner join com_user cu 
        on rrap.user_id = cu.user_id -->
        inner join com_user createUser 
        on rrap.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on rrap.update_user_id = updateUser.user_id
        where 1=1
        <if test= "assessPlanNo != null and assessPlanNo > 0">
        and rrap.assess_plan_no = #{assessPlanNo}
        </if>
        <if test= "processCd != null and !''.equals(processCd)">
        and rrap.process_cd = #{processCd}
        </if>
        <if test= "userId != null and !''.equals(userId)">
        and rrap.user_id = #{userId}
        </if>
    </select>
    
    <!-- 대상부서 등록 -->
    <insert id= "createRiskAssessDept" parameterType= "com.she.rsa.model.RiskAssessDept">
        /* RiskAssessDeptMapper.createRiskAssessDept [RiskAssessDept.xml] */
        insert into rsa_risk_assess_process
            (assess_plan_no
            ,process_cd
            <!-- ,user_id
            ,assess_plan_contents -->
            ,create_user_id
            ,create_dt)
        values
            (#{assessPlanNo}
            ,#{processCd}
            <!-- ,#{userId}
            ,#{assessPlanContents} -->
            ,#{createUserId}
            ,convert(char(10), getDate(), 23))
    </insert>
    
    <!-- 대상부서 수정 -->
    <update id= "updateRiskAssessDept" parameterType= "com.she.rsa.model.RiskAssessDept">
        /* RiskAssessDeptMapper.updateRiskAssessDept [RiskAssessDept.xml] 이제 안 씀]*/
        update rsa_risk_assess_process
        set user_id = #{userId}
            ,assess_plan_contents = #{assessPlanContents}
            ,update_user_id = #{updateUserId}
            ,update_dt = convert(char(10), getDate(), 23)
        where assess_plan_no = #{assessPlanNo}
        and process_cd = #{processCd}
    </update>
    
    <!-- 대상부서 삭제 -->
    <delete id= "deleteRiskAssessDept" >
        /* RiskAssessDeptMapper.deleteRiskAssessDept [RiskAssessDept.xml] */
        delete from rsa_risk_assess_process
        where assess_plan_no = #{assessPlanNo}
        and process_cd = #{processCd}
    </delete>
    
</mapper>