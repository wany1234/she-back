<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.chm.baseInfo.mapper.ChemicalRegulItemMapper">

    <select id= "getChemicalRegulItems" resultType= "com.she.chm.model.ChemicalRegulItem">
        /* ChemicalRegulItemMapper.getChemicalRegulItems [ChemicalRegulItem.xml] */
        select cri.regul_itm_no
            ,cri.regul_itm_cd
            ,cri.regul_itm_nm
            ,cri.contents
            ,cri.regul_law_cd
            ,regulLaw.code_nm as regul_law_nm
            ,cri.regul_org_cd
            ,regulOrg.code_nm as regul_org_nm
            ,cri.use_yn
            ,case
                when cri.use_yn = 'Y' then '사용'
                else '미사용'
            end as use_yn_nm
            ,cri.sort_order
            ,cri.create_user_id
            ,createUser.user_nm as create_user_nm
            ,cri.create_dt
            ,cri.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,cri.update_dt
            , case
                 when dbo.GET_USER_NM(cri.update_user_id) = '' then dbo.GET_USER_NM(cri.create_user_id)
                 else dbo.GET_USER_NM(cri.update_user_id) end as writer_user_nm
            , case when cri.update_dt is null then convert(date, cri.create_dt) else convert(date, cri.update_dt) end   as writer_dt
        from chm_regul_itm cri
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_LAW') regulLaw
        on cri.regul_law_cd = regulLaw.code
        and regulLaw.use_yn = 'Y'
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_ORG') regulOrg
        on cri.regul_org_cd = regulOrg.code
        and regulOrg.use_yn = 'Y'
        inner join com_user createUser
        on cri.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cri.update_user_id = updateUser.user_id
        where 1=1
        and cri.regul_itm_nm like '%' + #{regulItmNm} + '%'
        <if test= "regulLawCd != null and !regulLawCd.equals('')">
        and cri.regul_law_cd = #{regulLawCd}
        </if>
        <if test= "useYn != null and !useYn.equals('')">
        and cri.use_yn = #{useYn}
        </if>
        order by writer_dt desc, cri.regul_law_cd, cri.sort_order
    </select>

    <select id= "getChemicalRegulItem" resultType= "com.she.chm.model.ChemicalRegulItem">
        /* ChemicalRegulItemMapper.getChemicalRegulItem [ChemicalRegulItem.xml] */
        select cri.regul_itm_no
            ,cri.regul_itm_cd
            ,cri.regul_itm_nm
            ,cri.contents
            ,cri.regul_law_cd
            ,regulLaw.code_nm as regul_law_nm
            ,cri.regul_org_cd
            ,regulOrg.code_nm as regul_org_nm
            ,cri.use_yn
            ,case
                when cri.use_yn = 'Y' then '사용'
                else '미사용'
            end as use_yn_nm
            ,cri.sort_order
            ,cri.create_user_id
            ,createUser.user_nm as create_user_nm
            ,cri.create_dt
            ,cri.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,cri.update_dt
        from chm_regul_itm cri
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_LAW') regulLaw
        on cri.regul_law_cd = regulLaw.code
        and regulLaw.use_yn = 'Y'
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'CHM_REGUL_ORG') regulOrg
        on cri.regul_org_cd = regulOrg.code
        and regulOrg.use_yn = 'Y'
        inner join com_user createUser
        on cri.create_user_id = createUser.user_id
        left outer join com_user updateUser
        on cri.update_user_id = updateUser.user_id
        where 1=1
        and cri.regul_itm_no = #{regulItmNo}
    </select>

    <insert id= "createChemicalRegulItem" parameterType= "com.she.chm.model.ChemicalRegulItem">
        <selectKey keyProperty= "regulItmNo" resultType= "int" order= "BEFORE">
            select next value for seq_chm_regul_itm as regul_itm_no
          </selectKey>
          /* ChemicalRegulItemMapper.createChemicalRegulItem [ChemicalRegulItem.xml] */
        insert into chm_regul_itm
            (regul_itm_no
            ,regul_itm_cd
            ,regul_itm_nm
            ,contents
            ,regul_law_cd
            ,regul_org_cd
            ,use_yn
            ,sort_order
            ,create_user_id
            ,create_dt)
        values
            (#{regulItmNo}
            ,#{regulItmCd}
            ,#{regulItmNm}
            ,#{contents}
            ,#{regulLawCd}
            ,#{regulOrgCd}
            ,#{useYn}
            ,#{sortOrder}
            ,#{createUserId}
            ,convert(char(10), getDate(), 23))
    </insert>

    <update id= "updateChemicalRegulItem" parameterType= "com.she.chm.model.ChemicalRegulItem">
        /* ChemicalRegulItemMapper.updateChemicalRegulItem [ChemicalRegulItem.xml] */
        update chm_regul_itm
        set regul_itm_cd = #{regulItmCd}
            ,regul_itm_nm = #{regulItmNm}
            ,contents = #{contents}
            ,regul_law_cd = #{regulLawCd}
            ,regul_org_cd = #{regulOrgCd}
            ,sort_order = #{sortOrder}
            ,use_yn = #{useYn}
            ,update_user_id = #{updateUserId}
            ,update_dt = convert(char(10), getDate(), 23)
        where regul_itm_no = #{regulItmNo}
    </update>

    <select id= "getCheckChemicalRegulItem" resultType= "HashMap">
        /* ChemicalRegulItemMapper.getCheckChemicalRegulItem [ChemicalRegulItem.xml] */
        select count(*) as cnt
            ,'regulItmNm' as gubun
        from chm_regul_itm
        where 1=1
        and regul_itm_nm = #{regulItmNm}
        <if test= "regulItmNo != null and regulItmNo > 0">
        and regul_itm_no not in (#{regulItmNo})
        </if>
    </select>

</mapper>