<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.she.baseInfo.preoper.mapper.PreOperCheckItemMapper">

    <select id="getFacilityCheckItems" resultType="com.she.baseInfo.model.FacilityCheckItem">
        /* FacilityCheckItemMapper.getFacilityCheckItems [FacilityCheckItem.xml] */
        select a.saf_facility_check_item_no
            ,a.saf_facility_check_nm
            ,a.plant_cd
            ,plant.code_nm as plant_nm
            ,a.saf_check_type_cd
            ,c.code_nm as saf_check_type_nm
            ,a.sort_order
            ,a.use_yn
            ,case when a.use_yn = 'Y'
                        then '사용'else '미사용'
                        end as use_yn_nm
            ,'수정' as updating
        from saf_pre_operation_check_item a
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_PREOPERATION_CHECK') c
        on a.saf_check_type_cd = c.code
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant
        on a.plant_cd = plant.code
        where 1=1
        <if test="plantCd != null and !plantCd.equals('')">
            and a.plant_cd in (select value from dbo.FN_GET_Split(#{plantCd},','))
        </if>
        <if test="safCheckTypeCd != null and !safCheckTypeCd.equals('')">
            and a.saf_check_type_cd = #{safCheckTypeCd}
        </if>
        <if test="dataLvlCd != null and !dataLvlCd.equals('')">
            and a.data_lvl_cd = #{dataLvlCd}
        </if>
        order by a.plant_cd, a.saf_check_type_cd, a.sort_order
    </select>

    <select id="getFacilityCheckItem" resultType="com.she.baseInfo.model.FacilityCheckItem">
        /* FacilityCheckItemMapper.getFacilityCheckItem [FacilityCheckItem.xml] */
        WITH categorytree  AS (
            SELECT mdc.saf_facility_check_item_no
                 , mdc.p_saf_facility_check_nm
            FROM saf_pre_operation_check_item mdc
            WHERE 1=1
              AND mdc.saf_facility_check_item_no = #{safFacilityCheckItemNo}
            UNION ALL
            SELECT p.saf_facility_check_item_no
                 , p.p_saf_facility_check_nm
            FROM saf_pre_operation_check_item p
             INNER JOIN categorytree ct
              ON ct.p_saf_facility_check_nm = p.saf_facility_check_item_no
        )
        select a.saf_facility_check_item_no
             ,a.saf_facility_check_nm
             ,a.saf_check_type_cd
             ,a.use_yn
             ,a.data_lvl_cd
             ,a.sort_order
             ,a.plant_cd
             ,a.p_saf_facility_check_nm
             ,(select
               b.saf_facility_check_item_no from saf_pre_operation_check_item b
                 inner join categorytree t
                    on t.saf_facility_check_item_no = b.saf_facility_check_item_no
               where b.p_saf_facility_check_nm is null) as ppSafFacilityCheckNm

        from saf_pre_operation_check_item a
        where 1=1
        and a.saf_facility_check_item_no = #{safFacilityCheckItemNo}
    </select>


    <insert id="createFacilityCheckItem" parameterType="com.she.baseInfo.model.FacilityCheckItem">
        /* FacilityCheckItemMapper.createFacilityCheckItem [FacilityCheckItem.xml] */
        <selectKey keyProperty="safFacilityCheckItemNo" resultType="int" order="BEFORE">
            select next value for seq_saf_pre_operation_check_item  as safFacilityCheckItemNo
        </selectKey>
      insert into saf_pre_operation_check_item
           (saf_facility_check_item_no
           ,plant_cd
           ,saf_check_type_cd
           ,p_saf_facility_check_nm
           ,saf_facility_check_nm
           ,data_lvl_cd
           ,sort_order
           ,use_yn)
     values
           (#{safFacilityCheckItemNo}
           ,#{plantCd}
           ,#{safCheckTypeCd}
           ,#{pSafFacilityCheckNm}
           ,#{safFacilityCheckNm}
           ,#{dataLvlCd}
           ,#{sortOrder}
           ,#{useYn})
    </insert>

    <update id="updateFacilityCheckItem" parameterType="com.she.baseInfo.model.FacilityCheckItem">
        /* FacilityCheckItemMapper.updateFacilityCheckItem [FacilityCheckItem.xml] */
        update saf_pre_operation_check_item
        set plant_cd = #{plantCd}
            ,saf_check_type_cd = #{safCheckTypeCd}
            ,p_saf_facility_check_nm = #{pSafFacilityCheckNm}
            ,saf_facility_check_nm = #{safFacilityCheckNm}
            ,sort_order = #{sortOrder}
            ,use_yn =   #{useYn}
        where saf_facility_check_item_no = #{safFacilityCheckItemNo}
    </update>

    <select id="checkFacilityCheckItem" resultType="int">
        /* FacilityCheckItemMapper.checkFacilityCheckItem [FacilityCheckItem.xml] */
        select count(*) as cnt
        from saf_pre_operation_check_item
        where 1=1
        and plant_cd = #{plantCd}
        and saf_check_type_cd = #{safCheckTypeCd}
        and saf_facility_check_nm = #{safFacilityCheckNm}
        <if test="safFacilityCheckItemNo != null and safFacilityCheckItemNo > 0">
        and saf_facility_check_item_no != #{safFacilityCheckItemNo}
        </if>
    </select>

    <select id="getDataCategoryItems" resultType="com.she.baseInfo.model.FacilityCheckItem">
        /* FacilityCheckItemMapper.getDataCategoryItems [ActDataMaster.xml] */
        select saf_facility_check_item_no
        ,saf_facility_check_nm
        ,use_yn
        ,saf_check_type_cd
        ,'수정' as updating
        ,sort_order
        from saf_pre_operation_check_item
        where saf_check_type_cd = #{safCheckTypeCd}
            and data_lvl_cd = #{dataLvlCd}
        <if test="pSafFacilityCheckNm != 'null' and !pSafFacilityCheckNm.equals('')">
            and p_saf_facility_check_nm = #{pSafFacilityCheckNm}
        </if>
        <if test="useYn != 'null' and !useYn.equals('')">
            and use_yn = #{useYn}
        </if>
        <if test="plantCd != 'null' and !plantCd.equals('')">
            and plant_cd = #{plantCd}
        </if>
        order by sort_order
    </select>

</mapper>