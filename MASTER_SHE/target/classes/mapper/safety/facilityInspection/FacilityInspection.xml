<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.facilityInspection.mapper.FacilityInspectionMapper">

    <select id= "getFacilityInspectionSchedules" resultType= "com.she.safety.model.FacilityInspectionMaster">
        /* FacilityInspectionMapper.getFacilityInspectionSchedules [FacilityInspection.xml] */
        select   a.*
            , case when step_status = 'ING' then '진행중'
                    else '점검완료'
                end as step_status_nm
        from(
            select   case when (select count(b.com_facility_check_schedule_no)
                                    from com_facility_check_schedule b
                                    where a.com_facility_check_no = b.com_facility_check_no) >
                                (select count(b.com_facility_check_schedule_no)
                                    from com_facility_check_schedule b
                                    where a.com_facility_check_no = b.com_facility_check_no
                                    and b.check_step_cd = 'CHS04')
                            then 'ING'
                            else 'CMPLT'
                        end as step_status
                    , a.*
                from (
            select 
            cfcm.com_facility_check_no 
            , cfcm.com_facility_check_cd
            , facilityCheck.code_nm as com_facility_check_nm
            , cfcm.plant_cd
            , plant.code_nm as plant_nm
            , cfcm.com_facility_check_title
            , cfcm.com_facility_check_plan_symd
            , cfcm.com_facility_check_plan_eymd
            , cfcm.dept_cd
            , dept.dept_nm
            , car.appr_rqst_no
            , isnull(apprStep.code_nm, '결재요청전' ) as appr_rqst_nm
            ,apprStep.code as appr_rqst_cd
          
            ,(select stuff((select ',' + c.com_facility_type_nm
                    from com_facility_check_schedule a
                    inner join com_facility_mst_v b
                    on b.facility_cd = a.facility_cd
                    and b.saf_facility_type_cd = a.com_facility_type_cd
                    inner join com_facility_type c
                    on b.saf_facility_type_cd = c.com_facility_type_cd
                    where a.com_facility_check_no = cfcm.com_facility_check_no
                    group by c.com_facility_type_nm
                    for xml path('')
                    ), 1, 1, '')
            ) as com_facility_type_nms
		   , (select stuff((select ',' + b.dept_nm
                                                  from com_facility_check_schedule a
                                                 inner join com_dept b
                                                    on a.tgt_dept_cd = b.dept_cd
                                                 where a.com_facility_check_no = cfcm.com_facility_check_no
                                                 group by b.dept_nm
                                                   for xml path('')
                                               ), 1, 1, '')
                                 ) as tgt_dept_nm
            , (select stuff((select ',' +  b.dept_nm from com_facility_check_schedule a
                                                 inner join com_dept b
                                                    on a.pfm_dept_cd = b.dept_cd
													 where a.com_facility_check_no = cfcm.com_facility_check_no
													  group by b.dept_nm
													  for xml path('')
                                               ), 1, 1, '')
								) as pfm_dept_nm 
            , cfcm.create_user_id
            , createUser.user_nm as create_user_nm
            , FORMAT(cfcm.create_dt, 'yyyy-MM-dd') as create_dt
            , cfcm.update_user_id
            , updateUser.user_nm as update_user_nm
            , FORMAT(cfcm.update_dt, 'yyyy-MM-dd') as update_dt
            ,(select count(*)
                    from com_facility_check_schedule cfcsv
                    where cfcsv.com_facility_check_no = cfcm.com_facility_check_no
                    and cfcsv.check_step_cd != 'CHS00') as cnt
            , case
                 when dbo.GET_USER_NM(cfcm.update_user_id) = '' then dbo.GET_USER_NM(cfcm.create_user_id)
                 else dbo.GET_USER_NM(cfcm.update_user_id) end    as writer_user_nm
            , case when cfcm.update_dt is null then convert(date, cfcm.create_dt) else convert(date, cfcm.update_dt) end   as writer_dt
        from com_facility_check_master cfcm
        inner join com_dept dept
        on dept.dept_cd = cfcm.dept_cd
        inner join com_code_master plant
        on plant.code = cfcm.plant_cd
        and plant.code_group_cd = 'COM_PLANT_CD'
        inner join com_code_master facilityCheck
        on facilityCheck.code = cfcm.com_facility_check_cd
        and facilityCheck.code_group_cd = 'SAF_FACILITY_CHECK'
        inner join com_user createUser 
        on cfcm.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on cfcm.update_user_id = updateUser.user_id
        left outer join com_appr_rqst car
        on car.appr_rqst_no = cfcm.appr_rqst_no
        left join com_code_master apprStep
        on apprStep.code = car.biz_appr_step_cd
        and apprStep.code_group_cd = 'COM_BIZ_APPR_STEP'
        and apprStep.use_yn = 'Y'
        where 1=1 and isnull(cfcm.no_sch_yn, 'N') = 'N' 
		and exists (
		select cfcs.com_facility_check_no from com_facility_check_schedule cfcs
		where cfcs.com_facility_check_no = cfcm.com_facility_check_no
		 and isnull(cfcs.no_plan_yn, 'N') = 'N' 
		)
        <!-- 검색어  -->
        <if test= "facilityNm != null and !facilityNm.equals('')">
        and ( exists (select 1
                    from com_facility_check_schedule a
                    inner join com_facility_mst_v b
                    on a.facility_cd = b.facility_cd
                    and a.com_facility_type_cd = b.saf_facility_type_cd
                    where a.com_facility_check_no = cfcm.com_facility_check_no
                    and b.facility_nm like '%'+ #{facilityNm} + '%')
              or
              cfcm.com_facility_check_title like '%'+ #{facilityNm} + '%'
            )
        </if>
        <!-- 사업장  -->
        <if test= "plantCd != null and !plantCd.equals('')">
          and cfcm.plant_cd = #{plantCd}
        </if>
        <!-- 기간  -->
        <if test= "startYmd != null and !startYmd.equals('') and endYmd != null and !endYmd.equals('')">
          and convert(date, cfcm.com_facility_check_plan_symd) between convert(date, #{startYmd}) and convert(date, #{endYmd})
        </if>
        <!-- 시설유형 -->
        <if test= "comFacilityTypeCd != null and !comFacilityTypeCd.equals('')">
          and exists (select 1
                    from com_facility_check_schedule a
                    inner join com_facility_mst_v b
                    on a.facility_cd = b.facility_cd
                    and a.com_facility_type_cd = b.saf_facility_type_cd
                    where a.com_facility_check_no = cfcm.com_facility_check_no
                    and b.saf_facility_type_cd = #{comFacilityTypeCd})
        </if>
        <!-- 진행단계  -->
        <!--
        <if test= "checkStepCd != null and !checkStepCd.equals('')">
         and cfcs.check_step_cd = #{checkStepCd}
        </if>-->
        <!-- 점검부서  -->
        <if test= "deptCd != null and !deptCd.equals('')">
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
            AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                        UNION ALL
                        SELECT 1 WHERE #{deptSubYn} = 'Y' AND cfcm.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                        UNION ALL
                        SELECT 1 WHERE #{deptSubYn} = 'N' AND cfcm.dept_cd = #{deptCd}
                        )
            <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        
                <!-- 점검대상부서  -->
        <if test= "tgtDeptCd != null and !tgtDeptCd.equals('')">
                           and exists (
                                       select 1
                                         from com_facility_check_schedule a
                                        where a.com_facility_check_no = cfcm.com_facility_check_no
                                        
                                        <choose>
                                            <when test='tgtDeptSubYn == "Y"'>
                                                and a.tgt_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                                            </when>
                                            <when test='tgtDeptSubYn == "N"'>
                                                and a.tgt_dept_cd = #{tgtDeptCd}
                                            </when>
                                        </choose>
                                      )
        </if>
        
                <!-- 점검수행부서  -->
        <if test= "pfmDeptCd != null and !pfmDeptCd.equals('')">
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                           and exists (
                                       select 1
                                         from com_facility_check_schedule a
                                        where a.com_facility_check_no = cfcm.com_facility_check_no
                                        
                                        <choose>
                                            <when test='pfmDeptSubYn == "Y"'>
                                                and a.pfm_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{pfmDeptCd}))
                                            </when>
                                            <when test='pfmDeptSubYn == "N"'>
                                                and a.pfm_dept_cd = #{pfmDeptCd}
                                            </when>
                                        </choose>
                                      )
            <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        
        <!-- 점검종류  -->
        <if test= "comFacilityCheckCd != null and !comFacilityCheckCd.equals('')">
          and cfcm.com_facility_check_cd = #{comFacilityCheckCd}
        </if> 
            ) a 
        ) a
        <if test= "stepStatus != null and !stepStatus.equals('')">
        where a.step_status = #{stepStatus}
        </if>
        order by writer_dt desc, a.com_facility_check_plan_symd desc
    </select>
    
    <!-- 시설유형 콤보박스 조회 -->
    <select id="getComFacilityTypes" resultType="HashMap">
      select com_facility_type_cd as code
          ,com_facility_type_nm as codeNm
          ,case when use_yn = 'Y' then '사용' else '미사용' end as useYnNm
      from com_facility_type 
      where 1=1
      <if test= "facilityCd != null and !facilityCd.equals('')">
      where upper(com_facility_type_cd) like upper(#{facilityCd})
      </if>
      <if test= "facilityNm != null and !facilityNm.equals('')">
      where com_facility_type_nm like #{facilityNm}
      </if>
      <choose>
          <when test = 'useYn != null and useYn.equals("N")'>
          and use_yn = 'N'
          </when>
          <otherwise>
          and use_yn = 'Y'
          </otherwise>
      </choose>
      order by sort_order
    </select>
    
    <select id= "getFacilityInspectionMaster" resultType= "com.she.safety.model.FacilityInspectionMaster">
        /* FacilityInspectionMapper.getFacilityInspectionMaster [FacilityInspection.xml] */
        select cfcm.com_facility_check_no
            ,cfcm.plant_cd
            ,plant.code_nm as plant_nm
            ,cfcm.dept_cd
            ,cfcm.com_facility_check_cd
            ,checkType.code_nm as com_facility_check_nm
            ,cfcm.com_facility_check_title
            ,cfcm.com_facility_check_plan_symd
            ,cfcm.com_facility_check_plan_eymd
            ,cfcm.com_facility_check_perd
            ,checkCycle.code_nm as com_facility_check_perd_nm
            ,cfcm.create_user_id
            ,createUser.user_nm as create_user_nm
            ,convert(CHAR(10), cfcm.create_dt, 23) as create_dt
            ,cfcm.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,convert(CHAR(10), cfcm.update_dt, 23) as update_dt
            ,cfcm.appr_rqst_no
        from com_facility_check_master cfcm
        inner join com_code_master plant
        on cfcm.plant_cd = plant.code
        and plant.code_group_cd = 'COM_PLANT_CD'
        inner join com_code_master checkType
        on cfcm.com_facility_check_cd = checkType.code
        and checkType.code_group_cd = 'SAF_FACILITY_CHECK'
        inner join com_code_master checkCycle
        on cfcm.com_facility_check_perd = checkCycle.code
        and checkCycle.code_group_cd = 'SAF_FAC_CHK_CYE'
        inner join com_user createUser 
        on cfcm.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on cfcm.update_user_id = updateUser.user_id
        where 1=1
        and cfcm.com_facility_check_no = #{comFacilityCheckNo}
    </select>
    
    <select id= "getFacilityInspectionSchedule" resultType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper.getFacilityInspectionSchedule [FacilityInspection.xml] */
        select cfcs.com_facility_check_schedule_no
            ,cfcm.com_facility_check_cd
            ,cfcs.facility_check_nm
            ,cfcs.facility_check_sch_ymd
            ,cfcs.com_facility_type_cd
            ,cft.com_facility_type_nm
            ,cfcs.facility_cd
            ,cfmv.facility_nm
            ,cfmv.mg_dept_cd as tgt_dept_cd
			,tgtDept.dept_nm as tgt_dept_nm
			,cfcs.pfm_dept_cd as pfm_dept_cd
			,pfmDept.dept_nm as pfm_dept_nm
            ,cfcs.check_step_cd
            ,checkStep.code_nm as check_step_nm
            ,cfcs.create_user_id
            ,createUser.user_nm as create_user_nm
            ,convert(CHAR(10), cfcs.create_dt, 23) as create_dt
            ,cfcs.update_user_id
            ,updateUser.user_nm as update_user_nm
            ,convert(CHAR(10), cfcs.update_dt, 23) as update_dt
            ,cfmv.plant_cd
            ,cfcm.dept_cd
            ,cfcs.p_appr_rqst_no
            ,cfcs.r_appr_rqst_no
        from com_facility_check_schedule cfcs
        inner join com_facility_check_master m
        on cfcs.com_facility_check_no = m.com_facility_check_no
        inner join com_facility_mst_v cfmv
        on cfmv.saf_facility_type_cd = cfcs.com_facility_type_cd
        and cfmv.facility_cd = cfcs.facility_cd
        inner join com_facility_type cft
        on cft.com_facility_type_cd = cfcs.com_facility_type_cd
        inner join com_code_master checkStep
        on checkStep.code = cfcs.check_step_cd
        and checkStep.code_group_cd = 'SAF_CHK_STEP'
        inner join com_user createUser 
        on cfcs.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on cfcs.update_user_id = updateUser.user_id
        inner join com_facility_check_master cfcm
        on cfcm.com_facility_check_no = cfcs.com_facility_check_no
        left outer join com_dept tgtDept
		on tgtDept.dept_cd = cfmv.mg_dept_cd
		left outer join com_dept pfmDept
		on pfmDept.dept_cd = cfcs.pfm_dept_cd
        where 1=1
        and cfcs.com_facility_check_no = #{comFacilityCheckNo}
        and m.plant_cd = #{plantCd}
        
        order by cfcs.facility_check_sch_ymd, cfcs.facility_cd
    </select>
    
    <insert id= "createFacilityInspectionMaster" parameterType= "com.she.safety.model.FacilityInspectionMaster">
        /* FacilityInspectionMapper."createFacilityInspectionMaster" [FacilityInspection.xml] */
        <selectKey keyProperty= "comFacilityCheckNo" resultType= "int" order= "BEFORE">
            select next value for seq_com_facility_check_master as comFacilityCheckNo
          </selectKey>
        insert into com_facility_check_master
            (
             com_facility_check_no
            ,plant_cd
            ,dept_cd
            ,no_sch_yn
            ,com_facility_check_cd
            ,com_facility_check_title
            ,com_facility_check_plan_symd
            ,com_facility_check_plan_eymd
            ,com_facility_check_perd
            ,create_user_id
            ,create_dt
            ,create_dept_cd
            ,create_dept_nm
            ,create_position_cd
            ,create_position_nm
            )
        values
            (#{comFacilityCheckNo}
            ,#{plantCd}
            ,#{deptCd}
            ,#{noSchYn}
            ,#{comFacilityCheckCd}
            ,#{comFacilityCheckTitle}
            ,#{comFacilityCheckPlanSymd}
            ,#{comFacilityCheckPlanEymd}
            ,#{comFacilityCheckPerd}
            ,#{createUserId}
            ,getdate()
            ,(select dept_cd from com_user where user_id = #{createUserId})
            ,(select dbo.GET_DEPT_NM(dept_cd) from com_user where user_id = #{createUserId})
            ,(select position_cd from com_user where user_id = #{createUserId})
            ,(select position_nm from com_user where user_id = #{createUserId})
            )
    </insert>
    
    <update id= "updateFacilityInspectionMaster" parameterType= "com.she.safety.model.FacilityInspectionMaster">
        /* FacilityInspectionMapper."updateFacilityInspectionMaster" [FacilityInspection.xml] */
        update com_facility_check_master
        set plant_cd = #{plantCd}
            ,dept_cd = #{deptCd}
            ,com_facility_check_cd = #{comFacilityCheckCd}
            ,com_facility_check_title = #{comFacilityCheckTitle}
            ,com_facility_check_plan_symd = #{comFacilityCheckPlanSymd}
            ,com_facility_check_plan_eymd = #{comFacilityCheckPlanEymd}
            ,com_facility_check_perd = #{comFacilityCheckPerd}
            ,appr_rqst_no = #{apprRqstNo}
            ,update_user_id = #{updateUserId}
            ,update_dt = getdate()
            ,update_dept_cd = (select dept_cd from com_user where user_id = #{updateUserId})
            ,update_dept_nm = (select dbo.GET_DEPT_NM(dept_cd) from com_user where user_id = #{updateUserId})
            ,update_position_cd = (select position_cd from com_user where user_id = #{updateUserId})
            ,update_position_nm = (select position_nm from com_user where user_id = #{updateUserId})
        where com_facility_check_no = #{comFacilityCheckNo}
    </update>
    
    <insert id= "createFacilityCheckSchedule" parameterType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper."createFacilityCheckSchedule" [FacilityInspection.xml] */
        <selectKey keyProperty= "comFacilityCheckScheduleNo" resultType= "int" order= "BEFORE">
            select next value for seq_com_facility_check_schedule as comFacilityCheckScheduleNo
          </selectKey>
        insert into com_facility_check_schedule
           (com_facility_check_schedule_no
           ,com_facility_check_no
           ,com_facility_type_cd
           ,tgt_dept_cd
           ,pfm_dept_cd
           ,facility_check_nm
           ,facility_cd
           ,facility_check_sch_ymd
           ,facility_check_ymd
           ,check_result_cd
           ,facility_check_result
           ,no_plan_yn
           ,check_step_cd
           ,create_user_id
           ,create_dept_cd
           ,create_dept_nm
           ,create_position_cd
           ,create_position_nm
           ,create_dt)
        values
            (#{comFacilityCheckScheduleNo}
            ,#{comFacilityCheckNo}
            ,#{comFacilityTypeCd}
            ,#{tgtDeptCd}
            ,#{pfmDeptCd}
            ,#{facilityCheckNm}
            ,#{facilityCd}
            ,#{facilityCheckSchYmd}
            ,#{facilityCheckYmd}
            ,#{checkResultCd}
            ,#{facilityCheckResult}
            ,#{noPlanYn}
            ,#{checkStepCd}
            ,#{createUserId}
            ,(select dept_cd from com_user where user_id = #{createUserId})
            ,(select dbo.GET_DEPT_NM(dept_cd) from com_user where user_id = #{createUserId})
            ,(select position_cd from com_user where user_id = #{createUserId})
            ,(select position_nm from com_user where user_id = #{createUserId})
            ,getdate())
    </insert>
    
    <update id= "updateFacilityCheckSchedule" parameterType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper."updateFacilityCheckSchedule" [FacilityInspection.xml] */
        update com_facility_check_schedule
        set com_facility_type_cd = #{comFacilityTypeCd}
            ,facility_check_nm = #{facilityCheckNm}
            ,facility_cd = #{facilityCd}
            ,facility_check_sch_ymd = #{facilityCheckSchYmd}
            ,facility_check_ymd = #{facilityCheckYmd}
            ,facility_check_result = #{facilityCheckResult}
            ,pfm_dept_cd = #{pfmDeptCd}
            ,tgt_dept_cd = #{tgtDeptCd}
            ,check_step_cd = #{checkStepCd}
            ,p_appr_rqst_no = #{pApprRqstNo}
            ,r_appr_rqst_no = #{rApprRqstNo}
            ,update_user_id = #{updateUserId}
            ,update_dt = getdate()
        where com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </update>
    
    <delete id= "deleteFacilityCheckSchedule">
        /* FacilityInspectionMapper.deleteFacilityCheckSchedule [FacilityInspection.xml] */
        delete from com_facility_check_schedule
        where com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </delete>
    
    <delete id= "deleteFacilityCheckSchedules">
        /* FacilityInspectionMapper.deleteFacilityCheckSchedules [FacilityInspection.xml] */
        delete from com_facility_check_schedule
        where com_facility_check_no = #{comFacilityCheckNo}
    </delete>
   
    <delete id= "deleteFacilityInspectionMaster">
        /* FacilityCheckResultMapper.deleteFacilityInspectionMaster [FacilityInspection.xml] */
        delete from com_facility_check_master
        where com_facility_check_no = #{comFacilityCheckNo}
    </delete>
    
    <select id= "getFacilityInspectionPlans" resultType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper.getFacilityInspectionPlans [FacilityInspection.xml] */
        select cfcs.com_facility_check_schedule_no
            , cfcs.check_step_cd
            , checkStep.code_nm as check_step_nm
            , cfcm.com_facility_check_cd
            , facilityCheck.code_nm as com_facility_check_nm
            , cfcm.plant_cd
            , plant.code_nm as plant_nm
            ,cfcs.facility_check_sch_ymd
            ,cfcs.facility_check_ymd
            , cfcm.com_facility_check_plan_symd
            , cfcm.com_facility_check_plan_eymd
            , cfcm.com_facility_check_title
            , cfcs.facility_check_nm
            , cfcm.dept_cd
            , dept.dept_nm
            , cfcs.tgt_dept_cd 
            , tgtDept.dept_nm as tgt_dept_nm
            , cfcs.pfm_dept_cd  
            , pfmDept.dept_nm as pfm_dept_nm
            , cfcs.com_facility_type_cd
            , facilityType.com_facility_type_nm
            , cfmv.facility_cd
            , cfmv.facility_nm
            , cfcs.create_user_id
            , createUser.user_nm as create_user_nm
            , cfcs.create_dt
            , cfcs.update_user_id
            , updateUser.user_nm
            , cfcs.update_dt
            , car.biz_appr_step_cd            
            , isnull(apprStep.code_nm, '결재요청전' ) as biz_appr_step_nm
            , car.appr_rqst_no as rApprRqstNo
            , case
                 when dbo.GET_USER_NM(cfcs.update_user_id) = '' then dbo.GET_USER_NM(cfcs.create_user_id)
                 else dbo.GET_USER_NM(cfcs.update_user_id) end    as writer_user_nm
            , case when cfcs.update_dt is null then convert(date, cfcs.create_dt) else convert(date, cfcs.update_dt) end   as writer_dt
        from com_facility_check_master cfcm
        inner join com_facility_check_schedule cfcs
        on cfcs.com_facility_check_no = cfcm.com_facility_check_no
        inner join com_dept dept
        on dept.dept_cd = cfcm.dept_cd
        LEFT OUTER join com_dept tgtDept
        on tgtDept.dept_cd = cfcs.tgt_dept_cd
        LEFT OUTER join com_dept pfmDept
        on pfmDept.dept_cd = cfcs.pfm_dept_cd
        inner join com_facility_type facilityType
        on facilityType.com_facility_type_cd = cfcs.com_facility_type_cd
        inner join com_facility_mst_v cfmv
        on cfmv.saf_facility_type_cd = cfcs.com_facility_type_cd
        and cfcs.facility_cd=cfmv.facility_cd
        inner join com_code_master plant
        on plant.code = cfcm.plant_cd
        and plant.code_group_cd = 'COM_PLANT_CD'
        inner join com_code_master facilityCheck
        on facilityCheck.code = cfcm.com_facility_check_cd
        and facilityCheck.code_group_cd = 'SAF_FACILITY_CHECK'
        inner join com_code_master checkStep
        on checkStep.code = cfcs.check_step_cd
        and cfcs.check_step_cd in ('CHS01','CHS02')
        and checkStep.code_group_cd = 'SAF_CHK_STEP'
        inner join com_user createUser 
        on cfcs.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on cfcs.update_user_id = updateUser.user_id
        left outer join com_appr_rqst car
        on car.appr_rqst_no = cfcs.p_appr_rqst_no
        left join com_code_master apprStep
        on apprStep.code = car.biz_appr_step_cd
        and apprStep.code_group_cd = 'COM_BIZ_APPR_STEP'
        and apprStep.use_yn = 'Y'
        where 1=1 and isnull(cfcm.no_sch_yn, 'N') = 'N'         
        <!-- 검색어  -->
        <if test= "facilityNm != null and !facilityNm.equals('')">
          and ( cfmv.facility_nm like '%' + #{facilityNm} + '%'
                or
                cfcm.com_facility_check_title like '%' + #{facilityNm} + '%'
                or
                cfcs.facility_check_nm like '%' + #{facilityNm} + '%'
              )
        </if>
        <!-- 사업장  -->
        <if test= "plantCd != null and !plantCd.equals('')">
          and cfcm.plant_cd = #{plantCd}
        </if>
        <!-- 기간  -->
        <if test= "startYmd != null and !startYmd.equals('') and endYmd != null and !endYmd.equals('')">
          and convert(date, cfcs.facility_check_sch_ymd) between convert(date, #{startYmd}) and convert(date, #{endYmd})
        </if>
        <!-- 시설유형 -->
        <if test= "comFacilityTypeCd != null and !comFacilityTypeCd.equals('')">
          and cfcs.com_facility_type_cd = #{comFacilityTypeCd}
        </if>
        <!-- 진행단계  -->
        <if test= "checkStepCd != null and !checkStepCd.equals('')">
          and cfcs.check_step_cd = #{checkStepCd}
        </if>
        <!-- 점검주관부서  -->
        <if test= "deptCd != null and !deptCd.equals('')">
          <!-- 하위부서 포함여부 관련 쿼리 시작 -->
          AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                      UNION ALL
                      SELECT 1 WHERE #{deptSubYn} = 'Y' AND cfcm.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                      UNION ALL
                      SELECT 1 WHERE #{deptSubYn} = 'N' AND cfcm.dept_cd = #{deptCd}
                      )
          <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
          <!-- 점검대상부서  -->
        <if test= "tgtDeptCd != null and !tgtDeptCd.equals('')">
            <!-- 하위부서 포함여부 관련 쿼리 시작 -->
          AND EXISTS (SELECT 1 WHERE ISNULL(#{tgtDeptCd}, '') = ''
                      UNION ALL
                      SELECT 1 WHERE #{tgtDeptSubYn} = 'Y' AND cfcs.tgt_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                      UNION ALL
                      SELECT 1 WHERE #{tgtDeptSubYn} = 'N' AND cfcs.tgt_dept_cd = #{tgtDeptCd}
                      )
          <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <!-- 점검수행부서  -->
        <if test= "pfmDeptCd != null and !pfmDeptCd.equals('')">
           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
          AND EXISTS (SELECT 1 WHERE ISNULL(#{pfmDeptCd}, '') = ''
                      UNION ALL
                      SELECT 1 WHERE #{pfmDeptSubYn} = 'Y' AND cfcs.pfm_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{pfmDeptCd}))
                      UNION ALL
                      SELECT 1 WHERE #{pfmDeptSubYn} = 'N' AND cfcs.pfm_dept_cd = #{pfmDeptCd}
                      )
          <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <!-- 점검종류  -->
        <if test= "comFacilityCheckCd != null and !comFacilityCheckCd.equals('')">
          and cfcm.com_facility_check_cd = #{comFacilityCheckCd}
        </if>
        <!-- 시설점검마스터번호  -->
        <if test= "comFacilityCheckNo != null and comFacilityCheckNo > 0">
        and cfcs.com_facility_check_no = #{comFacilityCheckNo}
        </if>
        order by writer_dt desc, cfcs.facility_check_sch_ymd desc
    </select>
    
    <select id= "getFacilityInspectionResults" resultType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper.getFacilityInspectionResults [FacilityInspection.xml] */
        select cfcs.com_facility_check_schedule_no
            , cfcs.check_step_cd
            , checkStep.code_nm as check_step_nm
            , cfcm.com_facility_check_cd
            , facilityCheck.code_nm as com_facility_check_nm
            , cfcm.plant_cd
            , plant.code_nm as plant_nm
            ,cfcs.facility_check_sch_ymd
            ,cfcs.facility_check_ymd
            , cfcm.com_facility_check_plan_symd
            , cfcm.com_facility_check_plan_eymd
            , cfcm.com_facility_check_title
            , cfcs.facility_check_nm
            , result.code_nm as check_result_nm
            , cfcm.dept_cd
            , dept.dept_nm
            , cfcs.tgt_dept_cd
            , tgtDept.dept_nm as tgt_dept_nm
            , cfcs.pfm_dept_cd
            , pfmDept.dept_nm as pfm_dept_nm
            , cfcs.com_facility_type_cd
            , facilityType.com_facility_type_nm
            , cfmv.facility_cd
            , cfmv.facility_nm
            , cfcs.create_user_id
            , createUser.user_nm as create_user_nm
            , cfcs.create_dt
            , cfcs.update_user_id
            , updateUser.user_nm
            , cfcs.update_dt
            , car.biz_appr_step_cd            
            , isnull(apprStep.code_nm, '결재요청전' ) as biz_appr_step_nm
            , car.appr_rqst_no as rApprRqstNo
            , case
                 when dbo.GET_USER_NM(cfcs.update_user_id) = '' then dbo.GET_USER_NM(cfcs.create_user_id)
                 else dbo.GET_USER_NM(cfcs.update_user_id) end    as writer_user_nm
            , case when cfcs.update_dt is null then convert(date, cfcs.create_dt) else convert(date, cfcs.update_dt) end   as writer_dt
        from com_facility_check_master cfcm
        inner join com_facility_check_schedule cfcs
        on cfcs.com_facility_check_no = cfcm.com_facility_check_no
        inner join com_dept dept
        on dept.dept_cd = cfcm.dept_cd
        left outer join com_dept tgtDept
        on tgtDept.dept_cd = cfcs.tgt_dept_cd
        left outer join com_dept pfmDept
        on pfmDept.dept_cd = cfcs.pfm_dept_cd
        inner join com_facility_type facilityType
        on facilityType.com_facility_type_cd = cfcs.com_facility_type_cd
        inner join com_facility_mst_v cfmv
        on cfmv.saf_facility_type_cd = cfcs.com_facility_type_cd
        and cfcs.facility_cd=cfmv.facility_cd
        inner join com_code_master plant
        on plant.code = cfcm.plant_cd
        and plant.code_group_cd = 'COM_PLANT_CD'
        inner join com_code_master facilityCheck
        on facilityCheck.code = cfcm.com_facility_check_cd
        and facilityCheck.code_group_cd = 'SAF_FACILITY_CHECK'
        inner join com_code_master checkStep
        on checkStep.code = cfcs.check_step_cd
        and checkStep.code_group_cd = 'SAF_CHK_STEP'
        inner join com_user createUser 
        on cfcs.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on cfcs.update_user_id = updateUser.user_id
        left outer join com_appr_rqst car
        on car.appr_rqst_no = cfcs.r_appr_rqst_no
        left join com_code_master apprStep
        on apprStep.code = car.biz_appr_step_cd
        and apprStep.code_group_cd = 'COM_BIZ_APPR_STEP'
        and apprStep.use_yn = 'Y'
        left join dbo.LANG_CODE_MASTER('kr', 'SAF_F_CHK_RSLT_CLS') result
		on result.code = cfcs.check_result_cd
        where 1=1
        <!-- 검색어  -->
        <if test= "facilityNm != null and !facilityNm.equals('')">
          and ( cfmv.facility_nm like '%' + #{facilityNm} + '%'
                or
                cfcm.com_facility_check_title like '%' + #{facilityNm} + '%'
                or
                cfcs.facility_check_nm like '%' + #{facilityNm} + '%'
              )
        </if>
        <!-- 사업장  -->
        <if test= "plantCd != null and !plantCd.equals('')">
          and cfcm.plant_cd = #{plantCd}
        </if>
        <!-- 시설유형 -->
        <if test= "comFacilityTypeCd != null and !comFacilityTypeCd.equals('')">
          and cfcs.com_facility_type_cd = #{comFacilityTypeCd}
        </if>
        <!-- 진행단계  -->
        <choose>
            <when test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkStepCd)">
            <if test='checkStepCd.equals("CHS00")'>
                and cfcs.check_step_cd = #{checkStepCd}
                <!-- 기간  -->
        		<if test= "startYmd != null and !startYmd.equals('') and endYmd != null and !endYmd.equals('')">
          		and convert(date, cfcs.facility_check_sch_ymd) between convert(date, #{startYmd}) and convert(date, #{endYmd})
        		</if>
        	</if>
        	<if test='checkStepCd.equals("CHS04")'>
        		and cfcs.check_step_cd = #{checkStepCd}
                <!-- 기간  -->
        		<if test= "startYmd != null and !startYmd.equals('') and endYmd != null and !endYmd.equals('')">
          		and convert(date, cfcs.facility_check_ymd) between convert(date, #{startYmd}) and convert(date, #{endYmd})
        		</if>
        	</if>
            </when>
            <otherwise>
            	and cfcs.check_step_cd in ('CHS02', 'CHS03', 'CHS04')
            	<!-- 기간  -->
        		<if test= "startYmd != null and !startYmd.equals('') and endYmd != null and !endYmd.equals('')">
          		and convert(date, cfcs.facility_check_sch_ymd) between convert(date, #{startYmd}) and convert(date, #{endYmd})
        		</if>
            </otherwise>
        </choose>
        <!-- 점검주관부서  -->
        <if test= "deptCd != null and !deptCd.equals('')">
          <!-- 하위부서 포함여부 관련 쿼리 시작 -->
          AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                      UNION ALL
                      SELECT 1 WHERE #{deptSubYn} = 'Y' AND cfcm.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                      UNION ALL
                      SELECT 1 WHERE #{deptSubYn} = 'N' AND cfcm.dept_cd = #{deptCd}
                      )
          <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
          <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(tgtDeptCd)">


           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{tgtDeptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{tgtDeptSubYn} = 'Y' AND cfcs.tgt_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{tgtDeptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{tgtDeptSubYn} = 'N' AND cfcs.tgt_dept_cd = #{tgtDeptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->

        </if>
         <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(pfmDeptCd)">

           <!-- 하위부서 포함여부 관련 쿼리 시작 -->
           AND EXISTS (SELECT 1 WHERE ISNULL(#{pfmDeptCd}, '') = ''
                       UNION ALL
                       SELECT 1 WHERE #{pfmDeptSubYn} = 'Y' AND cfcs.pfm_dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{pfmDeptCd}))
                       UNION ALL
                       SELECT 1 WHERE #{pfmDeptSubYn} = 'N' AND cfcs.pfm_dept_cd = #{pfmDeptCd}
                       )
           <!-- 하위부서 포함여부 관련 쿼리 끝 -->
        </if>
        <!-- 점검결과 -->
         <if test= "@org.apache.commons.lang3.StringUtils@isNotBlank(checkResultCd)">
           and cfcs.check_result_cd  = #{checkResultCd}
        </if>
        <!-- 점검종류  -->
        <if test= "comFacilityCheckCd != null and !comFacilityCheckCd.equals('')">
          and cfcm.com_facility_check_cd = #{comFacilityCheckCd}
        </if>
        <!-- 시설점검마스터번호  -->
        <if test= "comFacilityCheckNo != null and comFacilityCheckNo > 0">
        and cfcs.com_facility_check_no = #{comFacilityCheckNo}
        </if>
        order by writer_dt desc, cfcs.create_dt desc
    </select>
    
    <select id= "getFacilityInspectionPlan" resultType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper.getFacilityInspectionPlan [FacilityInspection.xml] */
        select cfcs.com_facility_check_schedule_no
            , cfcs.com_facility_check_no
            , cfcs.check_step_cd
            , checkStep.code_nm as check_step_nm
            , cfcm.com_facility_check_cd
            , facilityCheck.code_nm as com_facility_check_nm
            , cfcm.plant_cd
            , plant.code_nm as plant_nm
            ,cfcs.facility_check_sch_ymd
            ,cfcs.facility_check_ymd
            ,cfcs.check_result_cd
            ,cfcs.facility_check_result
            , cfcm.com_facility_check_plan_symd
            , cfcm.com_facility_check_plan_eymd
            , cfcm.com_facility_check_title
            , cfcs.facility_check_nm
            , cfcm.dept_cd
            , dept.dept_nm
            , cfcs.tgt_dept_cd 
            , tgtDept.dept_nm as tgt_dept_nm
            , cfcs.pfm_dept_cd  
            , pfmDept.dept_nm as pfm_dept_nm
            , cfcs.com_facility_type_cd
            , facilityType.com_facility_type_nm
            , cfmv.facility_cd
            , cfmv.facility_nm
            , cfcs.create_user_id
            , createUser.user_nm as create_user_nm
            , cfcs.create_dt
            , cfcs.update_user_id
            , updateUser.user_nm
            , cfcs.update_dt
            , cfcs.p_appr_rqst_no
            , cfcs.r_appr_rqst_no
        from com_facility_check_master cfcm
        inner join com_facility_check_schedule cfcs
        on cfcs.com_facility_check_no = cfcm.com_facility_check_no
        inner join com_dept dept
        on dept.dept_cd = cfcm.dept_cd
        LEFT OUTER join com_dept tgtDept
        on tgtDept.dept_cd = cfcs.tgt_dept_cd
        LEFT OUTER join com_dept pfmDept
        on pfmDept.dept_cd = cfcs.pfm_dept_cd
        inner join com_facility_type facilityType
        on facilityType.com_facility_type_cd = cfcs.com_facility_type_cd
        inner join com_facility_mst_v cfmv
        on cfmv.saf_facility_type_cd = cfcs.com_facility_type_cd
        and cfcs.facility_cd=cfmv.facility_cd
        and cfcm.plant_cd = cfmv.plant_cd
        inner join com_code_master plant
        on plant.code = cfcm.plant_cd
        and plant.code_group_cd = 'COM_PLANT_CD'
        inner join com_code_master facilityCheck
        on facilityCheck.code = cfcm.com_facility_check_cd
        and facilityCheck.code_group_cd = 'SAF_FACILITY_CHECK'
        inner join com_code_master checkStep
        on checkStep.code = cfcs.check_step_cd
        and checkStep.code_group_cd = 'SAF_CHK_STEP'
        inner join com_user createUser 
        on cfcs.create_user_id = createUser.user_id
        left outer join com_user updateUser 
        on cfcs.update_user_id = updateUser.user_id
        where 1=1
        and cfcs.com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </select>
    
    <update id= "updateFacilityInspectionPlan" parameterType= "com.she.safety.model.FacilityInspectionSchedule">
        /* FacilityInspectionMapper.updateFacilityInspectionPlan [FacilityInspection.xml] */
        update com_facility_check_schedule
        set facility_check_nm = #{facilityCheckNm}
            ,facility_cd = #{facilityCd}
            ,facility_check_sch_ymd = #{facilityCheckSchYmd}
            ,facility_check_ymd = #{facilityCheckYmd}
            ,facility_check_result = #{facilityCheckResult}
            ,p_appr_rqst_no = #{pApprRqstNo}
            ,r_appr_rqst_no = #{rApprRqstNo}
            ,check_result_cd = #{checkResultCd}
            ,tgt_dept_cd = #{tgtDeptCd}
            ,pfm_dept_cd = #{pfmDeptCd}
            ,check_step_cd = #{checkStepCd}
            ,update_user_id = #{updateUserId}
            ,update_dt = getdate()
            ,update_dept_cd = (select dept_cd from com_user where user_id = #{updateUserId})
            ,update_dept_nm = (select dbo.GET_DEPT_NM(dept_cd) from com_user where user_id = #{updateUserId})
            ,update_position_cd = (select position_cd from com_user where user_id = #{updateUserId})
            ,update_position_nm = (select position_nm from com_user where user_id = #{updateUserId})
        where com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </update>
    
    <select id= "getFacilityInsInspectors" resultType= "com.she.safety.model.FacilityInspectionInspector">
        /* FacilityInspectionMapper.getFacilityInsInspectors [FacilityInspection.xml] */
        select cfci.com_facility_check_no
            ,cfci.com_facility_check_schedule_no
            ,cfci.com_facility_check_inspector_no
            ,cfci.inspector_class_cd
            ,inspectorclass.code_nm as inspector_class_nm
            ,cfci.user_id
            ,cfci.user_nm
            ,cfci.dept_cd
            ,cfci.dept_nm
            ,cfci.duty_nm
            ,cfci.check_sch_hour
            ,cfci.check_sch_minute
            ,cfci.check_sch_ehour
            ,cfci.check_sch_eminute
            ,cfci.remark
        from com_facility_check_inspector cfci
        inner join com_code_master inspectorclass
        on cfci.inspector_class_cd = inspectorclass.code
        and inspectorclass.code_group_cd = 'SAF_INSPECTOR_CLASS'
        where 1=1
        <if test= "comFacilityCheckScheduleNo != null and comFacilityCheckScheduleNo > 0">
        and cfci.com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
        </if>
        <if test= "inspectorClassCd != null and !inspectorClassCd.equals('')">
        and cfci.inspector_class_cd = #{inspectorClassCd}
        </if>
    </select>
    
    <insert id= "createFacilityInsInspector" parameterType= "com.she.safety.model.FacilityInspectionInspector">
        <selectKey keyProperty= "comFacilityCheckInspectorNo" resultType= "int" order= "BEFORE">
            select (next value for seq_com_facility_check_inspector) as comFacilityCheckInspectorNo
          </selectKey>
         /* FacilityInspectionMapper.createFacilityInsInspector [FacilityInspection.xml] */ 
        insert into com_facility_check_inspector
            (com_facility_check_inspector_no
            ,com_facility_check_no
            ,com_facility_check_schedule_no
            ,inspector_class_cd
            ,user_id
            ,user_nm
            ,dept_cd
            ,dept_nm
            ,duty_nm
            ,check_sch_hour
            ,check_sch_minute
            ,check_sch_ehour
            ,check_sch_eminute
            ,remark)
        values
            (#{comFacilityCheckInspectorNo}
            ,#{comFacilityCheckNo}
            ,#{comFacilityCheckScheduleNo}
            ,#{inspectorClassCd}
            ,#{userId}
            ,#{userNm}
            ,#{deptCd}
            ,#{deptNm}
            ,#{dutyNm}
            ,#{checkSchHour}
            ,#{checkSchMinute}
            ,#{checkSchEhour}
            ,#{checkSchEminute}
            ,#{remark})
    </insert>
    
    <delete id= "deleteFacilityInsInspector">
        /* FacilityInspectionMapper.deleteFacilityInsInspector [FacilityInspection.xml] */
        delete from com_facility_check_inspector
        where com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </delete>
    
    <select id= "getFacilityInsItemResults" resultType= "com.she.safety.model.FacilityInspectionItemResult">
        /* FacilityInspectionMapper.getFacilityInsItemResults [FacilityInspection.xml] */
        select 
            cfmv.facility_cd
            ,cft.com_facility_type_cd
            ,cft.com_facility_type_nm
            ,cfcir.com_facility_check_no
            ,cfcir.com_facility_check_schedule_no
            ,cfcir.com_facility_check_item_no
            ,cfci.com_facility_check_nm
            ,cfcir.check_result
            ,cfcir.remark
        from com_facility_check_item_result cfcir
        inner join com_facility_check_item cfci
        on cfci.com_facility_check_item_no = cfcir.com_facility_check_item_no
        inner join com_facility_check_schedule cfcs
        on cfcs.com_facility_check_schedule_no = cfcir.com_facility_check_schedule_no
        inner join com_facility_mst_v cfmv
        on cfmv.facility_cd = cfcs.facility_cd
        and cfmv.saf_facility_type_cd = cfcs.com_facility_type_cd
        inner join com_facility_type cft
        on cft.com_facility_type_cd = cfci.com_facility_type_cd
        where cfcir.com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
        and cfci.com_facility_type_cd = #{comFacilityTypeCd}
        and cfci.plant_cd = #{plantCd}
        <!--   with A as
        (
            select cfcir.*
            from com_facility_check_item_result cfcir
            inner join com_facility_check_schedule cfcs
            on cfcir.com_facility_check_schedule_no = cfcs.com_facility_check_schedule_no
            where cfcs.com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
        )
        select cfci.com_facility_check_item_no
            ,cfci.com_facility_type_cd
            ,cfci.com_facility_check_cd
            ,cfci.com_facility_check_nm
            ,cfci.sort_order
            ,A.com_facility_check_no
            ,A.com_facility_check_schedule_no
            ,A.check_result
            ,A.remark
        from A
        left join com_facility_check_item cfci
        on cfci.com_facility_check_item_no = A.com_facility_check_item_no
        where 1=1
        and cfci.com_facility_check_cd = #{comFacilityCheckCd}
        and cfci.com_facility_type_cd = #{comFacilityTypeCd}
        order by cfci.sort_order -->
    </select>
    
    <select id= "getNewFacilityInsItemResults" resultType= "com.she.safety.model.FacilityInspectionItemResult">
        /* FacilityInspectionMapper.getNewFacilityInsItemResults [FacilityInspection.xml] */
        select 
            cft.com_facility_type_cd
            ,cft.com_facility_type_nm
            ,cfci.com_facility_check_item_no
            ,cfci.com_facility_check_nm
        from com_facility_check_item cfci
        inner join com_facility_type cft
        on cft.com_facility_type_cd = cfci.com_facility_type_cd
        where cfci.use_yn = 'Y'
        and cft.use_yn = 'Y'
        and cfci.com_facility_type_cd = #{comFacilityTypeCd}
        and cfci.com_facility_check_cd = #{comFacilityCheckCd}
        and cfci.plant_cd = #{plantCd}
        order by cfci.sort_order
    </select>
    
    <insert id= "createFacilityInsItemResult" parameterType= "com.she.safety.model.FacilityInspectionItemResult">
        /* FacilityInspectionMapper.getFacilityInsItemResults [FacilityInspection.xml] */
        insert into com_facility_check_item_result
            (com_facility_check_no
            ,com_facility_check_schedule_no
           ,com_facility_check_item_no
           ,check_result
           ,remark
           ,create_user_id
            ,create_dt)
        values
            (#{comFacilityCheckNo}
            ,#{comFacilityCheckScheduleNo}
            ,#{comFacilityCheckItemNo}
            ,#{checkResult}
            ,#{remark}
            ,#{createUserId}
            ,getdate())
    </insert>
    
    <update id= "updateFacilityInsItemResult" parameterType= "com.she.safety.model.FacilityInspectionItemResult">
        /* FacilityInspectionMapper.updateFacilityInsItemResults [FacilityInspection.xml] */
         update com_facility_check_item_result
        set check_result = #{checkResult}
            ,remark = #{remark}
            ,update_user_id = #{updateUserId}
            ,update_dt = getdate()
        where com_facility_check_item_no = #{comFacilityCheckItemNo}
    </update>
    
    <delete id= "deleteFacilityInsItemResult">
        /* FacilityInspectionMapper.updateFacilityInsItemResults [FacilityInspection.xml] */
        delete from com_facility_check_item_result
        where com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </delete>
     
     <update id= "updateFacilityInspectionStepCd">
       /* FacilityInspectionMapper.updateFacilityInspectionStepCd [FacilityInspection.xml] */
        update com_facility_check_schedule
        set check_step_cd = #{checkStepCd}
            ,update_user_id = #{updateUserId}
            ,update_dt = getdate()
        where com_facility_check_schedule_no = #{comFacilityCheckScheduleNo}
    </update>
    
    <select id="getFacilityInspectionResultStatus" resultType="HashMap">
       /* FacilityInspectionMapper.getFacilityInspectionResultStatus [FacilityInspection.xml] */
        with b AS
        (
            SELECT 1 mon
             UNION ALL
            SELECT mon + 1
              FROM b
             WHERE mon + 1 &lt;= 12
        ), p as (
            select cfcm.plant_cd
<!--                 ,cfcs.facility_check_ymd -->
                ,cfcs.facility_check_sch_ymd as facility_check_ymd
            from com_facility_check_master cfcm
            inner join com_facility_check_schedule cfcs
            on cfcm.com_facility_check_no = cfcs.com_facility_check_no
            where cfcs.check_step_cd in ('CHS02','CHS03','CHS04')
        ), r as (
            select cfcm.plant_cd
                ,cfcs.facility_check_ymd
            from com_facility_check_master cfcm
            inner join com_facility_check_schedule cfcs
            on cfcm.com_facility_check_no = cfcs.com_facility_check_no
            where cfcs.check_step_cd = 'CHS04'
        ), a as (
            select  *
            from (
                    select p.plant_cd
                        ,convert(varchar, b.mon) + '_plan' as mon
                        ,count(p.facility_check_ymd) as cnt
                    from b
                    left outer join p
                    on DATEPART(yy, p.facility_check_ymd) = #{year}
                    and DATEPART(mm, p.facility_check_ymd) = b.mon
                    where isnull(p.plant_cd, '') != ''
                    group by p.plant_cd
                            ,b.mon
                    union all
                    select r.plant_cd
                        ,convert(varchar, b.mon) + '_result' as mon
                        ,count(r.facility_check_ymd) as cnt
                    from b
                    left outer join r
                    on DATEPART(yy, r.facility_check_ymd) = #{year}
                    and DATEPART(mm, r.facility_check_ymd) = b.mon
                    where isnull(r.plant_cd, '') != ''
                    group by r.plant_cd
                            ,b.mon
                ) d
            pivot
            (
                sum(cnt)
                for mon in ([1_plan], [1_result], [2_plan], [2_result], [3_plan], [3_result], [4_plan], [4_result], [5_plan], [5_result], [6_plan], [6_result], [7_plan], [7_result], [8_plan], [8_result], [9_plan], [9_result], [10_plan], [10_result], [11_plan], [11_result], [12_plan], [12_result])
            ) piv
        )
        select  plant.code as plant_cd, plant.code_nm as plant_nm
            ,isnull([1_plan], 0) as '01_plan', isnull([2_plan], 0) as '02_plan', isnull([3_plan], 0) as '03_plan', isnull([4_plan], 0) as '04_plan', isnull([5_plan], 0) as '05_plan' 
            ,isnull([6_plan], 0) as '06_plan', isnull([7_plan], 0) as '07_plan', isnull([8_plan], 0) as '08_plan', isnull([9_plan], 0) as '09_plan', isnull([10_plan], 0) as '10_plan' 
            ,isnull([11_plan], 0) as '11_plan', isnull([12_plan], 0) as '12_plan'
            ,isnull([1_result], 0) as '01_result', isnull([2_result], 0) as '02_result', isnull([3_result], 0) as '03_result', isnull([4_result], 0) as '04_result', isnull([5_result], 0) as '05_result' 
            ,isnull([6_result], 0) as '06_result', isnull([7_result], 0) as '07_result', isnull([8_result], 0) as '08_result', isnull([9_result], 0) as '09_result', isnull([10_result], 0) as '10_result' 
            ,isnull([11_result], 0) as '11_result', isnull([12_result], 0) as '12_result'
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) as sum_plan
            ,isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum_result
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) +
            isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum
        from com_code_master plant 
        left outer join a
        on a.plant_cd = plant.code
        where plant.code_group_cd = 'COM_PLANT_CD'
        and plant.code != '0000'
        <if test= "plantCd != null and !''.equals(plantCd)">
        and plant.code = #{plantCd}
        </if>
    </select>
    
    <select id="getFacilityInspectionResultStatusSub" resultType="HashMap">
       /* FacilityInspectionMapper.getFacilityInspectionResultStatusSub [FacilityInspection.xml] */
        with b AS
        (
            SELECT 1 mon
             UNION ALL
            SELECT mon + 1
              FROM b
             WHERE mon + 1 &lt;= 12
        ), p as (
            select cfcm.plant_cd
                ,cfcm.com_facility_check_cd
                ,cfcs.com_facility_type_cd
                ,cfcm.dept_cd
                ,cfcs.facility_check_sch_ymd as facility_check_ymd
            from com_facility_check_master cfcm
            inner join com_facility_check_schedule cfcs
            on cfcm.com_facility_check_no = cfcs.com_facility_check_no
            where cfcs.check_step_cd in ('CHS02','CHS03','CHS04')
        ), r as (
            select cfcm.plant_cd
                ,cfcm.com_facility_check_cd
                ,cfcs.com_facility_type_cd
                ,cfcm.dept_cd
                ,cfcs.facility_check_ymd
            from com_facility_check_master cfcm
            inner join com_facility_check_schedule cfcs
            on cfcm.com_facility_check_no = cfcs.com_facility_check_no
            where cfcs.check_step_cd = 'CHS04'
        ), a as (
            select  *
            from (
                    select p.plant_cd 
					    ,p.com_facility_check_cd
                        ,p.com_facility_type_cd
                        ,p.dept_cd
                        ,convert(varchar, b.mon) + '_plan' as mon
                        ,count(p.facility_check_ymd) as cnt
                    from b
                    left outer join p
                    on DATEPART(yy, p.facility_check_ymd) = #{year}
                    and DATEPART(mm, p.facility_check_ymd) = b.mon
                    where 1=1 
                    <if test= "plantCd != null and !''.equals(plantCd)">
                    and r.plant_cd = #{plantCd}
                    </if>
                    <if test= "comFacilityCheckCd != null and !''.equals(comFacilityCheckCd)">
                    and p.com_facility_check_cd = #{comFacilityCheckCd}
                    </if>
                    <if test= "comFacilityTypeCd != null and !''.equals(comFacilityTypeCd)">
                    and p.com_facility_type_cd = #{comFacilityTypeCd}
                    </if>
					<if test= "deptCd != null and !''.equals(deptCd)">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'Y' AND p.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'N' AND p.dept_cd = #{deptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                    </if>
                    group by p.plant_cd 
					        ,p.com_facility_check_cd
                            ,p.com_facility_type_cd
                            ,p.dept_cd
                            ,b.mon
                    union all
                    select  r.plant_cd 
					    ,r.com_facility_check_cd
                        ,r.com_facility_type_cd
                        ,r.dept_cd
                        ,convert(varchar, b.mon) + '_result' as mon
                        ,count(r.facility_check_ymd) as cnt
                    from b
                    left outer join r
                    on DATEPART(yy, r.facility_check_ymd) = #{year}
                    and DATEPART(mm, r.facility_check_ymd) = b.mon
                    where 1=1 
                     <if test= "plantCd != null and !''.equals(plantCd)">
                    and r.plant_cd = #{plantCd}
                    </if>
                    <if test= "comFacilityCheckCd != null and !''.equals(comFacilityCheckCd)">
                    and r.com_facility_check_cd = #{comFacilityCheckCd}
                    </if>
                    <if test= "comFacilityTypeCd != null and !''.equals(comFacilityTypeCd)">
                    and r.com_facility_type_cd = #{comFacilityTypeCd}
                    </if>
                    <if test= "deptCd != null and !''.equals(deptCd)">
                    <!-- 하위부서 포함여부 관련 쿼리 시작 -->
                    AND EXISTS (SELECT 1 WHERE ISNULL(#{deptCd}, '') = ''
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'Y' AND p.dept_cd IN (SELECT dept_cd FROM dbo.GET_UNDER_DEPTS(#{deptCd}))
                                UNION ALL
                                SELECT 1 WHERE #{deptSubYn} = 'N' AND p.dept_cd = #{deptCd}
                                )
                    <!-- 하위부서 포함여부 관련 쿼리 끝 -->
                    </if>
                    group by  r.plant_cd 
					        ,r.com_facility_check_cd
                            ,r.com_facility_type_cd
                            ,r.dept_cd
                            ,b.mon
                ) d
            pivot
            (
                sum(cnt)
                for mon in ([1_plan], [1_result], [2_plan], [2_result], [3_plan], [3_result], [4_plan], [4_result], [5_plan], [5_result], [6_plan], [6_result], [7_plan], [7_result], [8_plan], [8_result], [9_plan], [9_result], [10_plan], [10_result], [11_plan], [11_result], [12_plan], [12_result])
            ) piv
        )
        select plant.code_nm as plant_nm , a.com_facility_check_cd, checkType.code_nm as com_facility_check_nm
            ,a.com_facility_type_cd, cft.com_facility_type_nm
            ,a.dept_cd, cd.dept_nm
            ,isnull([1_plan], 0) as '01_plan', isnull([2_plan], 0) as '02_plan', isnull([3_plan], 0) as '03_plan', isnull([4_plan], 0) as '04_plan', isnull([5_plan], 0) as '05_plan' 
            ,isnull([6_plan], 0) as '06_plan', isnull([7_plan], 0) as '07_plan', isnull([8_plan], 0) as '08_plan', isnull([9_plan], 0) as '09_plan', isnull([10_plan], 0) as '10_plan' 
            ,isnull([11_plan], 0) as '11_plan', isnull([12_plan], 0) as '12_plan'
            ,isnull([1_result], 0) as '01_result', isnull([2_result], 0) as '02_result', isnull([3_result], 0) as '03_result', isnull([4_result], 0) as '04_result', isnull([5_result], 0) as '05_result' 
            ,isnull([6_result], 0) as '06_result', isnull([7_result], 0) as '07_result', isnull([8_result], 0) as '08_result', isnull([9_result], 0) as '09_result', isnull([10_result], 0) as '10_result' 
            ,isnull([11_result], 0) as '11_result', isnull([12_result], 0) as '12_result'
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) as sum_plan
            ,isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum_result
            ,isnull([1_plan], 0) + isnull([2_plan], 0) + isnull([3_plan], 0) + isnull([4_plan], 0) + isnull([5_plan], 0) + isnull([6_plan], 0) + isnull([7_plan], 0) + isnull([8_plan], 0) + isnull([9_plan], 0) + isnull([10_plan], 0) + isnull([11_plan], 0) + isnull([12_plan], 0) +
            isnull([1_result], 0) + isnull([2_result], 0) + isnull([3_result], 0) + isnull([4_result], 0) + isnull([5_result], 0) + isnull([6_result], 0) + isnull([7_result], 0) + isnull([8_result], 0) + isnull([9_result], 0) + isnull([10_result], 0) + isnull([11_result], 0) + isnull([12_result], 0) as sum
        from a
        inner join com_code_master checkType
        on a.com_facility_check_cd = checkType.code
        and checkType.code_group_cd = 'SAF_FACILITY_CHECK'
        inner join com_facility_type cft
        on a.com_facility_type_cd = cft.com_facility_type_cd
        inner join com_dept cd
        on a.dept_cd = cd.dept_cd
        inner join com_code_master plant 
		on a.plant_cd = plant.code
    </select>
    
    <update id="updateFacilityInspectionItemRsltFileKey" parameterType="hashMap">
    	update com_attach_file
		set task_key = replace(task_key, #{checkItemTaskTempKey}, #{taskKey})
		where task_class_nm = 'FACILITY_INSPECTION_ITEM_RSLT'
		and task_key like #{checkItemTaskTempKey} + ',%'
    </update>
    
</mapper>