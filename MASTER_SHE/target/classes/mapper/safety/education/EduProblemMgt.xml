<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.education.mapper.EduProblemMgtMapper">
    <select id= "getEduProblemMgts" resultType= "com.she.safety.model.EduProblemMgt">
         select 
             m.edu_mat_no
            ,m.mat_grp_no
            ,co.edu_att_cd
            ,co.edu_course_nm            
            ,c1.code_nm  as edu_att_nm                   
            ,m.saf_edu_course_no
            ,c2.edu_type_cd
            ,cc2.code_nm as edu_type_nm
            ,m.title
            ,m.rev_num
            ,m.rev_ymd
            ,m.enf_ymd
            ,m.contents
            ,m.rev_contents
            ,m.use_yn
            ,m.del_yn
            ,m.create_user_id
            ,convert(char(10), m.create_dt, 23)  as createDt
            ,m.update_user_id
            ,convert(char(10), m.update_dt, 23)  as updateDt
            ,m.plant_cd
            ,plant.code_nm as plant_nm
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm  
            , case
                 when dbo.GET_USER_NM(m.update_user_id) = '' then dbo.GET_USER_NM(m.create_user_id)
                 else dbo.GET_USER_NM(m.update_user_id) end    as writer_user_nm
            , case when m.update_dt is null then convert(date, m.create_dt) else convert(date, m.update_dt) end   as writer_dt          
        From saf_edu_mat m
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code        
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join saf_edu_course c2 on c2.saf_edu_course_no = m.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on c2.edu_type_cd = cc2.code        
        left outer join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id
        where 1=1
        <if test='safEduCourseNo != null and safEduCourseNo != 0'>    
        and m.saf_edu_course_no = #{safEduCourseNo}
        </if>
        <if test='plantCd != null and plantCd != ""'>        
        and m.plant_cd = #{plantCd}
        </if>
        <if test='eduAttCd != null and eduAttCd != ""'>        
        and co.edu_att_cd = #{eduAttCd}
        </if>
        <if test='eduNm != null and eduNm != ""'>
        and title like '%' + #{eduNm} + '%'        
        </if>
        <if test='eduTypeCd != null and eduTypeCd != ""'>
        and c2.edu_type_cd = #{eduTypeCd}
        </if>        
        order by writer_dt desc, m.plant_cd
    </select>
    <select id= "getEduProblemMgtsNew" resultType= "com.she.safety.model.EduProblemMgt">
         select 
             ECM.edu_course_mat_no
            ,ECM.edu_mat_no
            ,ECM.mat_grp_no
            ,co.edu_att_cd
            ,co.edu_course_nm            
            ,c1.code_nm  as edu_att_nm                   
            ,ECM.saf_edu_course_no
            ,c2.edu_type_cd
            ,cc2.code_nm as edu_type_nm
            ,ECM.title
            ,ECM.rev_num
            ,ECM.rev_ymd
            ,ECM.enf_ymd
            ,ECM.contents
            ,ECM.rev_contents
            ,ECM.create_user_id
            ,convert(char(10), ECM.create_dt, 23)  as createDt
            ,ECM.plant_cd
            ,plant.code_nm as plant_nm
            ,cu.user_nm as create_user_nm
        From saf_edu_course_mat ECM
        Join saf_edu_mst MST On MST.saf_edu_mst_no = ECM.saf_edu_mst_no
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on ECM.plant_cd = plant.code        
        left outer join saf_edu_course co on ECM.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join saf_edu_course c2 on c2.saf_edu_course_no = ECM.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on c2.edu_type_cd = cc2.code        
        left outer join com_user cu on ECM.create_user_id = cu.user_id
        where 1=1
        <if test='safEduMstNo != null and safEduMstNo != 0'>    
        and ECM.saf_edu_mst_no = #{safEduMstNo}
        </if>
        <if test='plantCd != null and plantCd != ""'>        
        and ECM.plant_cd = #{plantCd}
        </if>
        <if test='eduAttCd != null and eduAttCd != ""'>        
        and co.edu_att_cd = #{eduAttCd}
        </if>
        <if test='eduNm != null and eduNm != ""'>
        and title like '%' + #{eduNm} + '%'        
        </if>
        <if test='eduTypeCd != null and eduTypeCd != ""'>
        and c2.edu_type_cd = #{eduTypeCd}
        </if>        
        order by ECM.plant_cd
    </select>
    <select id= "getEduProblemMgtResults" resultType= "com.she.safety.model.EduProblemMgt">
         select 
             m.edu_mat_no
            ,m.mat_grp_no
            ,co.edu_att_cd
            ,co.edu_course_nm            
            ,c1.code_nm  as edu_att_nm                   
            ,m.saf_edu_course_no
            ,c2.edu_type_cd
            ,cc2.code_nm as edu_type_nm
            ,m.title
            ,m.rev_num
            ,m.rev_ymd
            ,m.enf_ymd
            ,m.contents
            ,m.rev_contents
            ,m.use_yn
            ,m.del_yn
            ,m.create_user_id
            ,convert(char(10), m.create_dt, 23)  as createDt
            ,m.update_user_id
            ,convert(char(10), m.update_dt, 23)  as updateDt
            ,m.plant_cd
            ,plant.code_nm as plant_nm
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm          
        from saf_edu_mst b 
        right outer join saf_edu_mst_mat a on b.saf_edu_mst_no= a.saf_edu_mst_no
        left outer join saf_edu_mat m on m.edu_mat_no = a.edu_mat_no
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code        
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join saf_edu_course c2 on c2.saf_edu_course_no = m.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on c2.edu_type_cd = cc2.code        
        left outer join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id
        where a.saf_edu_mst_no = #{safEduMstNo}
        
    </select>
    
    <delete id = "deleteEduPlanProblems" >
        Delete From saf_edu_course_mat
        Where saf_edu_mst_no = #{safEduMstNo}
    </delete>
    
    <insert id ="insertEduPlanProblemMat" >
        Insert Into com_attach_file
        (file_no, task_class_nm, task_key
            , file_org_nm, file_save_nm, file_ext
            , file_size, file_path, file_down_path
            , content_type, picture_explan, create_user_id, create_dt)
        Select (next value for seq_file_no),'EDU_REG_REFERENCE', task_key
            , file_org_nm, file_save_nm, file_ext
            , file_size, file_path, file_down_path
            , content_type, picture_explan, create_user_id, GETDATE()
        From com_attach_file
        Where task_class_nm = 'EDU_REFERENCE'
            and task_key = #{taskKey}
    </insert>
    
    <delete id = "deleteEduPlanProblemMat" >
        Delete From com_attach_file
        Where task_class_nm = 'EDU_REG_REFERENCE' And task_key = #{taskKey}
    </delete>
    
    <select id = "getMatFileData" resultType= "com.she.common.model.AttachFile">
        Select *
        From com_attach_file
        Where task_class_nm = 'EDU_REFERENCE' And task_key = #{taskKey}
    </select>
    
    <insert id = "insertEduPlanProblems" >
        Insert Into saf_edu_course_mat
            ( edu_mat_no
            , saf_edu_mst_no
            , mat_grp_no
            , saf_edu_course_no
            , title
            , rev_num
            , rev_ymd
            , enf_ymd
            , contents
            , rev_contents
            , plant_cd
            , create_user_id
            , create_dt) 
        Values
            ( #{eduMatNo}
            , #{safEduMstNo}
            , #{matGrpNo}
            , #{safEduCourseNo}
            , #{title}
            , #{revNum}
            , #{revYmd}
            , #{enfYmd}
            , #{contents}
            , #{revContents}
            , #{plantCd}
            , #{createUserId}
            , getdate() )
    </insert>
    
    
    <select id = "getEduProblemMgtRevisions"  resultType= "com.she.safety.model.EduProblemMgt">
         select * from (
         select 
             m.edu_mat_no
            ,m.mat_grp_no
            ,co.edu_att_cd
            ,co.edu_course_nm            
            ,c1.code_nm  as edu_att_nm                   
            ,m.saf_edu_course_no
            ,c2.edu_type_cd
            ,cc2.code_nm as edu_type_nm
            ,m.title
            ,m.rev_num
            ,m.rev_ymd
            ,m.enf_ymd
            ,m.contents
            ,m.rev_contents
            ,m.use_yn
            ,m.del_yn
            ,m.create_user_id
            ,convert(char(10), m.create_dt, 23)  as createDt
            ,m.update_user_id
            ,convert(char(10), m.update_dt, 23)  as updateDt
            ,m.plant_cd
            ,plant.code_nm as plant_nm
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm            
        from saf_edu_mat m
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code        
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join saf_edu_course c2 on c2.saf_edu_course_no = m.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on c2.edu_type_cd = cc2.code        
        left outer join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id
        where 1=1
        ) A 
        where revisionNo > 1 
        and revisionNo = (select mat_grp_no from saf_edu_mat where edu_mat_no = #{eduMatNo} ) 
    </select>
    
    
    <select id= "getEduProblemMgt" resultType= "com.she.safety.model.EduProblemMgt">
         select 
             m.edu_mat_no
            ,m.mat_grp_no
            ,co.edu_att_cd
            ,co.edu_course_nm            
            ,c1.code_nm  as edu_att_nm                   
            ,m.saf_edu_course_no
            ,c2.edu_type_cd
            ,cc2.code_nm as edu_type_nm
            ,m.title
            ,m.rev_num
            ,m.rev_ymd
            ,m.enf_ymd
            ,m.contents
            ,m.rev_contents
            ,m.use_yn
            ,m.del_yn
            ,m.create_user_id
            ,convert(char(10), m.create_dt, 23)  as createDt
            ,m.update_user_id
            ,convert(char(10), m.update_dt, 23)  as updateDt
            ,m.plant_cd
            ,plant.code_nm as plant_nm
            ,cu.user_nm as create_user_nm
            ,uu.user_nm as update_user_nm            
        from saf_edu_mat m
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code        
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join saf_edu_course c2 on c2.saf_edu_course_no = m.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on c2.edu_type_cd = cc2.code        
        left outer join com_user cu on m.create_user_id = cu.user_id
        left outer join com_user uu on m.update_user_id = uu.user_id
        where 1=1
        and m.edu_mat_no = #{eduMatNo}
    </select>
    
    <select id= "getEduRegProblemMgt" resultType= "com.she.safety.model.EduProblemMgt">
         select 
             m.edu_mat_no
            ,m.mat_grp_no
            ,co.edu_att_cd
            ,co.edu_course_nm            
            ,c1.code_nm  as edu_att_nm                   
            ,m.saf_edu_course_no
            ,c2.edu_type_cd
            ,cc2.code_nm as edu_type_nm
            ,m.title
            ,m.rev_num
            ,m.rev_ymd
            ,m.enf_ymd
            ,m.contents
            ,m.rev_contents
            ,m.create_user_id
            ,convert(char(10), m.create_dt, 23)  as createDt
            ,m.plant_cd
            ,plant.code_nm as plant_nm
            ,cu.user_nm as create_user_nm
        from saf_edu_course_mat m
        inner join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_PLANT_CD') plant on m.plant_cd = plant.code        
        left outer join saf_edu_course co on m.saf_edu_course_no = co.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_ATT') c1 on co.edu_att_cd = c1.code
        left outer join saf_edu_course c2 on c2.saf_edu_course_no = m.saf_edu_course_no
        left outer join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'SAF_EDU_COURSE') cc2 on c2.edu_type_cd = cc2.code        
        left outer join com_user cu on m.create_user_id = cu.user_id
        where 1=1
        and m.edu_course_mat_no = #{eduCourseMatNo}
    </select>

    <insert id= "createEduProblemMgt" parameterType= "com.she.safety.model.EduProblemMgt">
        <selectKey keyProperty= "eduMatNo" resultType= "int" order= "BEFORE">
            select next value for seq_saf_edu_mat as eduMatNo
        </selectKey>
            insert into saf_edu_mat
            (
                edu_mat_no
                ,mat_grp_no
                ,plant_cd
                ,saf_edu_course_no
                ,title
                ,rev_num
                ,rev_ymd
                ,enf_ymd
                ,contents
                ,rev_contents
                ,use_yn
                ,del_yn
                ,create_user_id
                ,create_dt
            ) values ( 
                #{eduMatNo}
                ,#{matGrpNo}
                ,#{plantCd}
                ,#{safEduCourseNo}
                ,#{title}
                ,#{revNum}
                ,#{revYmd}
                ,#{enfYmd}
                ,#{contents}
                ,#{revContents}
                ,#{useYn}
                ,#{delYn}
                ,#{createUserId}
                ,getDate()    
            )
    </insert>

    <update id= "updateEduProblemMgt" parameterType= "com.she.safety.model.EduProblemMgt">
        update saf_edu_mat
        SET 
             mat_grp_no          = #{matGrpNo}
            ,plant_cd            = #{plantCd}
            ,saf_edu_course_no   = #{safEduCourseNo}
            ,title               = #{title}
            ,rev_num             = #{revNum}
            ,rev_ymd             = #{revYmd}
            ,enf_ymd             = #{enfYmd}
            ,contents            = #{contents}
            ,rev_contents        = #{revContents}
            ,use_yn              = #{useYn}
            ,update_user_id         = #{updateUserId}
            ,update_dt = getDate()
        WHERE edu_mat_no = #{eduMatNo}
    </update>
    
    
    <delete id= "deleteEduProblemMgt">
        delete from saf_edu_mat where edu_mat_no = #{eduMatNo}
    </delete>
    
</mapper>