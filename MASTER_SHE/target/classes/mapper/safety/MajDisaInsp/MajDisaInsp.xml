<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.majDisaInsp.Mapper.MajDisaInspMapper">

     <insert id="insertMajDisaInsp" parameterType="com.she.safety.model.MajDisaInsp">
        /* MajDisaInspMapper.insertMajDisaInsp [MajDisaInsp.xml] */
        <selectKey keyProperty="majDisaInspNo" order="BEFORE" resultType="int">
                select next value for seq_saf_maj_disa_insp as majDisaInspNo
        </selectKey>
              insert into saf_maj_disa_insp(
                      maj_disa_insp_no
                      ,insp_dt
                      ,plant_cd
                      ,main_dept_cd
                      ,chk_nm
                      ,proc_step_cd
                      ,state_cd
                      ,step_cd
                      ,appr_rqst_no
                      ,create_user_id
                      ,create_dt      
                      ,create_dept_nm
                      ,create_dept_cd
                      ,update_dept_nm
                      ,update_dept_cd
                      ,create_position_nm
                      ,create_position_cd
                      ,update_position_nm
                      ,update_position_cd
              ) 
               values(
                       #{majDisaInspNo}
                       ,#{inspDt}
                       ,#{plantCd}
                       ,#{mainDeptCd}
                       ,#{chkNm}
                       ,#{procStepCd}
                       ,#{stateCd}
                       ,#{stepCd}
                       ,#{apprRqstNo}
                       ,#{createUserId}
                       ,getdate()
                       ,#{createDeptNm}
                       ,#{createDeptCd}
                       ,#{updateDeptNm}
                       ,#{updateDeptCd}
                       ,#{createPositionNm}
                       ,#{createPositionCd}
                       ,#{updatePositionNm}
                       ,#{updatePositionCd}
               )
    </insert>
    
    <update id="updateMajDisaInsp" parameterType="com.she.safety.model.MajDisaInsp">
            /* MajDisaInspMapper.updateMajDisaInsp [MajDisaInsp.xml] */
            update saf_maj_disa_insp
             set 
                 insp_dt = #{inspDt}
                 ,plant_cd = #{plantCd}
                 ,main_dept_cd = #{mainDeptCd}
                 ,chk_nm = #{chkNm}
                 ,proc_step_cd = #{procStepCd}
                 ,state_cd = #{stateCd}
                 ,step_cd = #{stepCd}
                 ,appr_rqst_no = #{apprRqstNo}   
                 ,update_user_id = #{updateUserId}
                 ,update_dt = #{updateDt}
                 ,create_dept_nm = #{createDeptNm}
                 ,create_dept_cd = #{createDeptCd}
                 ,update_dept_nm = #{updateDeptNm}
                 ,update_dept_cd = #{updateDeptCd}
                 ,create_position_nm = #{createPositionNm}
                 ,create_position_cd = #{createPositionCd}
                 ,update_position_nm = #{updatePositionNm}
                 ,update_position_cd = #{updatePositionCd}
             where maj_disa_insp_no = #{majDisaInspNo}
    </update>
    
    <select id="getMajDisaInsps" resultType="com.she.safety.model.MajDisaInsp"> 
        /* MajDisaInspMapper.getMajDisaInsps [MajDisaInsp.xml] */     
          select 
              di.maj_disa_insp_no
              ,year(di.insp_dt) as year
              ,convert(varchar(10), di.insp_dt,23)  as insp_dt
              ,di.plant_cd
              ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_PLANT_CD', di.plant_cd) as plant_nm
              ,di.main_dept_cd
              ,dbo.GET_DEPT_NM(main_dept_cd) as main_dept_nm
              ,di.chk_nm
              ,di.proc_step_cd
              ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_STEP', proc_step_cd) as proc_step_nm
              ,di.state_cd           
              ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang}, 'COM_STEP', proc_step_cd)+'('+ case when di.step_cd = 'BAPSD' then dbo.GET_CODE_NM(di.step_cd, 'COM_BIZ_APPR_STEP') else dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'COM_STATE', di.state_cd) end +')' as state_nm
              ,di.step_cd
              ,dbo.GET_CODE_NM_LANG(#{defaultParam.lang},'COM_BIZ_APPR_STEP', step_cd) as step_nm
              ,di.appr_rqst_no
              ,di.create_user_id
              ,dbo.GET_USER_NM(create_user_id) as  create_user_nm
              ,convert(varchar(10),di.create_dt,23) as create_dt
              ,di.update_user_id
              ,dbo.GET_USER_NM(update_user_id) as  update_user_nm
              ,convert(varchar(10),di.update_dt,23) as update_dt   
              ,di.create_dept_nm
              ,di.create_dept_cd
              ,di.update_dept_nm
              ,di.update_dept_cd
              ,di.create_position_nm
              ,di.create_position_cd
              ,di.update_position_nm
              ,di.update_position_cd
              -- 개선요청 건수
              ,(select count(*) from saf_impr_act sia where sia.ref_table_id = di.maj_disa_insp_no
               and sia.impr_class_cd = 'ICL40') as requestCnt
              -- 조치 미완료 건수
              ,(select count(*)
               from saf_impr_act sia where sia.ref_table_id = di.maj_disa_insp_no
               and sia.impr_class_cd = 'ICL40'
               and sia.impr_step_cd != 'IMST5'
               and (sia.act_class_cd = 'ACL01' or sia.act_class_cd = 'ACL02')
               ) as incompletCnt
              -- 조치기한 초과
               ,(select count(*)
               from saf_impr_act sia where sia.ref_table_id = di.maj_disa_insp_no
               and datediff(day, convert(char(10), GETDATE(), 23) , sia.act_limit_ymd) <![CDATA[<]]> 0
               and sia.act_class_cd = 'ACL02'
               and sia.impr_class_cd = 'ICL40'
               and sia.impr_step_cd != 'IMST5'
               ) as overdueCnt
               -- 조치 완료
                ,(select count(*) from saf_impr_act sia where sia.ref_table_id = di.maj_disa_insp_no
               and sia.impr_class_cd = 'ICL40'
               and sia.impr_step_cd = 'IMST5'
               ) as completCnt
          from saf_maj_disa_insp di
          where 1=1
          <if test="plantCd !=null and !plantCd.equals('')">
          and di.plant_cd = #{plantCd}
          </if> 
          <if test="startDt !=null and endDt!=null and !startDt.equals('') and !endDt.equals('')">
          and di.insp_dt between #{startDt} and #{endDt}
          </if> 
          <if test="mainDeptCd !=null and !mainDeptCd.equals('')">
          and di.main_dept_cd = #{mainDeptCd}
          </if>
          <if test="chkNm !=null and !chkNm.equals('')">
          and di.chk_nm like '%' + #{chkNm} + '%'
          </if>
          <if test="stateCd !=null and !stateCd.equals('')">
                and di.state_cd = #{stateCd}
          </if>
          <if test='imprChk !=null and imprChk.equals("Y")'>
            and di.maj_disa_insp_no in (
            select ref_table_id
               from saf_impr_act sia 
               where datediff(day, convert(char(10), GETDATE(), 23) , sia.act_limit_ymd)  <![CDATA[<]]>  0
               and sia.act_class_cd = 'ACL02'
               and sia.impr_class_cd = 'ICL40'
               and sia.impr_step_cd != 'IMST5'
          )
          </if>
               
          order by di.create_dt desc      
    </select>
    
    <select id="getMajDisaInsp" resultType="com.she.safety.model.MajDisaInsp">
        /* MajDisaInspMapper.getMajDisaInsp [MajDisaInsp.xml] */       
          select 
              di.maj_disa_insp_no
              ,di.insp_dt
              ,di.plant_cd
              ,di.main_dept_cd
              ,dbo.GET_DEPT_NM(main_dept_cd) as main_dept_nm
              ,di.chk_nm
              ,di.proc_step_cd
              ,di.state_cd              
              ,di.step_cd              
              ,di.appr_rqst_no
              ,di.create_user_id
              ,dbo.GET_USER_NM(create_user_id) as  create_user_nm
              ,di.create_dt
              ,di.update_user_id
              ,dbo.GET_USER_NM(update_user_id) as  update_user_nm
              ,di.update_dt   
              ,di.create_dept_nm
              ,di.create_dept_cd
              ,di.update_dept_nm
              ,di.update_dept_cd
              ,di.create_position_nm
              ,di.create_position_cd
              ,di.update_position_nm
              ,di.update_position_cd
          from saf_maj_disa_insp di          
          where 1=1
          and maj_disa_insp_no = #{majDisaInspNo}         
    </select>
    
    <insert id="insertMajDisaInspSafe" parameterType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.insertMajDisaInspSafe [MajDisaInsp.xml] */ 
        <selectKey keyProperty="majDisaInspSafeNo" order="BEFORE" resultType="int">
            select next value for seq_saf_maj_disa_insp_safe as majDisaInspSafeNo
        </selectKey>
         insert into saf_maj_disa_insp_safe(
             maj_disa_insp_safe_no
             ,maj_disa_insp_no
             ,plan_target_val
             ,plan_val
             ,plan_rate
             ,safe_desc
         )
         values(
             #{majDisaInspSafeNo}
             ,#{majDisaInspNo}
             ,#{planTargetVal}
             ,#{planVal}
             ,#{planRate}
             ,#{safeDesc}
         )
    </insert>
    
    <update id="updateMajDisaInspSafe" parameterType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.updateMajDisaInspSafe [MajDisaInsp.xml] */
         update saf_maj_disa_insp_safe
             set 
                 plan_target_val = #{planTargetVal}
                 ,plan_val = #{planVal}
                 ,plan_rate = #{planRate}
                 ,safe_desc = #{safeDesc}
         where maj_disa_insp_safe_no = #{majDisaInspSafeNo}
    </update>
    <select id="getMajDisaInspSafe" resultType="com.she.safety.model.MajDisaInspSafe">        
        /* MajDisaInspMapper.getMajDisaInspSafe [MajDisaInsp.xml] */
         select
            maj_disa_insp_safe_no
              ,maj_disa_insp_no
              ,plan_target_val
              ,plan_val
              ,plan_rate
              ,safe_desc
          from saf_maj_disa_insp_safe
          where maj_disa_insp_no = #{majDisaInspNo}    
    </select>
    
    <insert id="insertMajDisaInspRaw" parameterType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.insertMajDisaInspRaw [MajDisaInsp.xml]  */
        <selectKey keyProperty="majDisaInspRawNo" order="BEFORE" resultType="int">
            select next value for seq_saf_maj_disa_insp_raw as majDisaInspRawNo 
        </selectKey>        
        insert into saf_maj_disa_insp_raw(
            maj_disa_insp_raw_no
            ,maj_disa_insp_no
            ,plan_target_val
            ,plan_val
            ,plan_rate
            ,chk_val
            ,chk_rate
            ,raw_desc
        )
        values(
            #{majDisaInspRawNo}
            ,#{majDisaInspNo}
            ,#{planTargetVal}
            ,#{planVal}
            ,#{planRate}
            ,#{chkVal}
            ,#{chkRate}
            ,#{rawDesc}
        )
    </insert>
    
    <update id="updateMajDisaInspRaw" parameterType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.updateMajDisaInspRaw [MajDisaInsp.xml]  */
        update saf_maj_disa_insp_raw
        set     
            plan_target_val = #{planTargetVal}
            ,plan_val = #{planVal}
            ,plan_rate = #{planRate}
            ,chk_val = #{chkVal}
            ,chk_rate = #{chkRate}
            ,raw_desc = #{rawDesc}
        where maj_disa_insp_no = #{majDisaInspNo}
    </update>
    
    <select id="getMajDisaInspRaw" resultType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.getMajDisaInspRaw [MajDisaInsp.xml]  */
        select 
          maj_disa_insp_raw_no
          ,maj_disa_insp_no
          ,plan_target_val
          ,plan_val
          ,plan_rate
          ,chk_val
          ,chk_rate
          ,raw_desc
      from saf_maj_disa_insp_raw
      where maj_disa_insp_no = #{majDisaInspNo}
    </select>
    
    <insert id="insertMajDisaInspAct" parameterType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.insertMajDisaInspAct [MajDisaInsp.xml]  */
        <selectKey keyProperty="majDisaInspActNo" order="BEFORE" resultType="int">
            select next value for seq_saf_maj_disa_insp_act as majDisaInspActNo
        </selectKey>
        insert into saf_maj_disa_insp_act(
            maj_disa_insp_act_no
            ,maj_disa_insp_no
            ,con_act_val
            ,civil_dis_act_val
            ,civil_dis_impr_val
            ,act_desc
        )
        values(
            #{majDisaInspActNo}
            ,#{majDisaInspNo}
            ,#{conActVal}
            ,#{civilDisActVal}
            ,#{civilDisImprVal}
            ,#{actDesc}
        )
    </insert>
    
    <update id="updateMajDisaInspAct" parameterType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.updateMajDisaInspAct [MajDisaInsp.xml]  */
        update saf_maj_disa_insp_act
            set 
                maj_disa_insp_act_no = #{majDisaInspActNo}
                ,maj_disa_insp_no = #{majDisaInspNo}
                ,con_act_val = #{conActVal}
                ,civil_dis_act_val = #{civilDisActVal}
                ,civil_dis_impr_val = #{civilDisImprVal}
                ,act_desc = #{actDesc}
        where maj_disa_insp_no = #{majDisaInspNo}
    </update>
    
    <select id="getMajDisaInspAct" resultType="com.she.safety.model.MajDisaInspSafe">
        /* MajDisaInspMapper.getMajDisaInspAct [MajDisaInsp.xml]  */
        select 
           maj_disa_insp_act_no
           ,maj_disa_insp_no
           ,con_act_val
           ,civil_dis_act_val
           ,civil_dis_impr_val
           ,act_desc
       from saf_maj_disa_insp_act
       where maj_disa_insp_no = #{majDisaInspNo}    
    </select>
    
    <delete id="delMajDisaInsp">
        /* MajDisaInspMapper.delMajDisaInsp [MajDisaInsp.xml]  */
        delete from saf_maj_disa_insp
        where maj_disa_insp_no = #{majDisaInspNo}
    </delete>
    <delete id="delMajDisaInspSaf">
        delete from saf_maj_disa_insp_safe
        where maj_disa_insp_no = #{majDisaInspNo}
    </delete>
    <delete id="delMajDisaInspRaw">
        /* MajDisaInspMapper.delMajDisaInspRaw [MajDisaInsp.xml]  */
        delete from saf_maj_disa_insp_raw
        where maj_disa_insp_no = #{majDisaInspNo}
    </delete>
    <delete id="delMajDisaInspAct">
        /* MajDisaInspMapper.delMajDisaInspAct [MajDisaInsp.xml]  */
        delete from saf_maj_disa_insp_act
        where maj_disa_insp_no = #{majDisaInspNo}
    </delete>
    
    <update id="updateAppr">
        /* MajDisaInspMapper.updateAppr [MajDisaInsp.xml]  */
        update saf_maj_disa_insp
            set appr_rqst_no = #{apprRqstNo}
                <if test='apprStepCd !=null and apprStepCd.equals("BAPSA")'>
                ,state_cd = 'STATE3'
                </if>  
                <if test='apprStepCd !=null and apprStepCd.equals("BAPSG")'>
                ,state_cd = 'STATE4'
                </if>
                <if test='apprStepCd !=null and apprStepCd.equals("BAPSD")'>
                ,state_cd = 'STATE2'
                </if>
                ,step_cd = #{apprStepCd}
        where maj_disa_insp_no in (select value from FN_GET_Split(#{majDisaInspNo}, ','))
    </update>
    
    <select id="getStatusList" resultType="HashMap">
        /* MajDisaInspMapper.getStatusList [MajDisaInsp.xml]  */
            with getPlant as (
                select code as plantCd, code_nm as plantNm
                from com_code_master
                where code_group_cd ='com_plant_cd' and code != '0000'
                <if test = "plantCd !=null and !plantCd.equals('')">
                and code = #{plantCd}
                </if>
            ) , gubunList as(
                    select p.plantCd
                         ,g.gubun_type
                         ,g.gubun
                         ,g.sort_order           
                    from getPlant p
                    inner join (
                         select '안전계획' as gubun_type
                                     ,'수립대상(개소)' as gubun
                                     ,1 as sort_order
                             union
                             select '안전계획' as gubun_type
                                     ,'수립(개소)' as gubun
                                     ,2 as sort_order
                             union
                             select '안전계획' as gubun_type
                                     ,'계획 수립율(%)' as gubun
                                     ,3 as sort_order
                             union
                             select '법정점검계획' as gubun_type
                                     ,'수립대상(개소)' as gubun
                                     ,4 as sort_order
                             union
                             select '법정점검계획' as gubun_type
                                     ,'수립(개소)' as gubun
                                     ,5 as sort_order
                             union
                             select '법정점검계획' as gubun_type
                                     ,'계획 수립율(%)' as gubun
                                     ,6 as sort_order
                             union
                             select '법정점검계획' as gubun_type
                                     ,'점검실시(개소)' as gubun
                                     ,7 as sort_order
                             union
                             select '법정점검계획' as gubun_type
                                     ,'점검 실시율(%)' as gubun
                                     ,8 as sort_order
                             union
                             select '우려사항 조치' as gubun_type
                                     ,'우려사항 조치(건수)' as gubun
                                     ,9 as sort_order
                             union
                             select '우려사항 조치' as gubun_type
                                     ,'시민재해 조치(건수)' as gubun
                                     ,10 as sort_order
                             union
                             select '우려사항 조치' as gubun_type
                                     ,'시민재해 개선(건수)' as gubun
                                     ,11 as sort_order
                            union
                            select '개선현황' as gubun_type
                                     ,'요청(건수)' as gubun
                                     ,12 as sort_order
                            union
                            select '개선현황' as gubun_type
                                     ,'조치미완료(건수)' as gubun
                                     ,13 as sort_order
                            union
                            select '개선현황' as gubun_type
                                    ,'조치기한 초과(건수)' as gubun
                                    ,14 as sort_order
                            union
                            select '개선현황' as gubun_type
                                    ,'조치완료(건수)' as gubun
                                    ,15 as sort_order
                            union
                            select '개선현황' as gubun_type
                                    ,'개선 조치율(%)' as gubun
                                    ,16 as sort_order
                    ) g on 1=1
            ) ,t as (
                    select 
                     plant_cd
                     , substring(convert(char(10), di.insp_dt, 23), 1, 7) as mons
                    --- 안전계획
                     , convert(float, sum(ds.plan_target_val)) as plan_target_val -- 수립대상(개소)
                     , convert(float, sum(ds.plan_val)) as plan_val  -- 수립(개소)
                     , convert(float, dbo.GET_DIVIDE(sum(ds.plan_val) ,sum(ds.plan_target_val))) as plan_rate -- 계획 수립율(%)              
                     , convert(float, sum(ds.plan_target_val)) as temp_plan_target_val
                     , convert(float, sum(ds.plan_val)) as temp_plan_val        
                     --- 법정점검 계획
                     , convert(float, sum(dr.plan_target_val)) as raw_plan_target_val -- 계획수립대상(개소)
                     , convert(float, sum(dr.plan_val)) as raw_plan_val -- 계획수립(개소)
                     , convert(float, dbo.GET_DIVIDE(sum(dr.plan_val) ,sum(dr.plan_target_val))) as raw_plan_rate -- 계획 수립율(%)
                     , convert(float, sum(dr.chk_val)) as chk_val -- 점검실시(개소)        
                     , convert(float, sum(dr.plan_target_val)) as temp_raw_plan_target_val -- 계획수립대상(개소)
                     , convert(float, sum(dr.plan_val)) as temp_raw_plan_val -- 계획수립(개소)
                     , convert(float, sum(dr.chk_val)) as temp_chk_val -- 점검실시(개소)       
                     , convert(float, dbo.GET_DIVIDE(sum(dr.chk_val) ,sum(dr.plan_val))) as raw_chk_rate -- 점검 실시율(%)  
                     , convert(float, sum(dr.plan_val)) as sum_raw_plan_val -- 계획수립대상(개소)        
                     , convert(float, sum(dr.chk_val)) as sum_chk_val -- 계획수립대상(개소)
                     --- 우려사항 조치
                     , convert(float, sum(da.con_act_val)) as con_act_val -- 우려사항 조치(건수)
                     , convert(float, sum(da.civil_dis_act_val)) as civil_dis_act_val  -- 시민재해 조치(건수)
                     , convert(float, sum(da.civil_dis_impr_val)) as civil_dis_impr_val  -- 시민재해 개선(건수)
                     , convert(float, sum(da.con_act_val)) as temp_con_act_val 
                     , convert(float, sum(da.civil_dis_act_val)) as temp_civil_dis_act_val 
                     , convert(float, sum(da.civil_dis_impr_val)) as temp_civil_dis_impr_val  
                 from saf_maj_disa_insp di 
                 inner join saf_maj_disa_insp_safe ds
                 on di.maj_disa_insp_no = ds.maj_disa_insp_no
                 inner join saf_maj_disa_insp_raw dr
                 on di.maj_disa_insp_no = dr.maj_disa_insp_no   
                 inner join saf_maj_disa_insp_act da
                 on di.maj_disa_insp_no = da.maj_disa_insp_no     
                 where 1=1
                 <if test="plantCd !=null and !plantCd.equals('')">
                 and  di.plant_cd = #{plantCd}
                 </if>
                 group by plant_cd , substring(convert(char(10), di.insp_dt, 23), 1, 7)      
            ),safeT as (
                    select      
                    unpvt.[plant_cd]
                    ,unpvt.[mons] 
                    ,unpvt.[gubun]
                    ,unpvt.[calSum]         
                    ,unpvt.[temp_plan_target_val]       
                    ,unpvt.[temp_plan_val]      
                    ,unpvt.[temp_raw_plan_target_val]       
                    ,unpvt.[temp_raw_plan_val]
                    ,unpvt.[temp_chk_val]    
                    ,unpvt.[temp_con_act_val]      
                    ,unpvt.[temp_civil_dis_act_val]
                    ,unpvt.[temp_civil_dis_impr_val]   
                    ,case when unpvt.[gubun] = 'plan_target_val'  or unpvt.[gubun] = 'plan_val' or unpvt.[gubun] = 'plan_rate' then '안전계획'
                         when unpvt.[gubun] = 'raw_plan_target_val'  or unpvt.[gubun] = 'raw_plan_val' or unpvt.[gubun] = 'raw_plan_rate' or unpvt.[gubun] = 'chk_val'
                              or unpvt.[gubun] = 'raw_chk_rate' then '법정점검계획' 
                         when unpvt.[gubun] = 'sum_raw_plan_val' or unpvt.[gubun] = 'sum_chk_val' then '법정검검계획(실시율)'
                         when unpvt.[gubun] = 'con_act_val' or unpvt.[gubun] = 'civil_dis_act_val' or unpvt.[gubun] = 'civil_dis_impr_val' then '우려사항 조치' end as gubun_type        
                    from t
                 unpivot([calSum] for [gubun] in ([plan_target_val],[plan_val],[plan_rate],[raw_plan_target_val], [raw_plan_val],[raw_plan_rate], [chk_val],[raw_chk_rate]
                        ,[sum_raw_plan_val], [sum_chk_val],[con_act_val], [civil_dis_act_val],[civil_dis_impr_val])) as unpvt         
                 ), impr as (
                    select         
                          di.plant_cd   
                          ,'개선현황' as gubun_type
                          ,substring(convert(char(10), iif(isnull(impr.act_limit_ymd, '') = '',  impr.act_confirm_ymd, impr.act_limit_ymd), 23), 1, 7) as mons   
                          ,convert(float,count(*)) as requestCnt -- 개선요청 건수
                          ,convert(float,sum(case when impr.impr_step_cd != 'IMST5' and (impr.act_class_cd = 'ACL01' or impr.act_class_cd = 'ACL02') then 1 
                            else 0 end)) incompletCnt -- 조치 미완료 건수
                          ,convert(float, sum(case when datediff(day, convert(char(10), GETDATE(), 23) , impr.act_limit_ymd) <![CDATA[<]]>  0
                                and impr.act_class_cd = 'ACL02' and impr.impr_step_cd != 'IMST5' then 1 else 0 end)) as overdueCnt -- 조치기한 초과
                          ,convert(float,sum(case when impr.impr_step_cd = 'IMST5' then 1 else 0 end)) as completCnt -- 조치완료             
                          ,count(*) as tempRequestCnt -- 개선요청 건수
                          ,sum(case when impr.impr_step_cd != 'IMST5' and (impr.act_class_cd = 'ACL01' or impr.act_class_cd = 'ACL02') then 1 
                            else 0 end) tempIncompletCnt -- 조치 미완료 건수
                          ,sum(case when datediff(day, convert(char(10), GETDATE(), 23) , impr.act_limit_ymd)  <![CDATA[<]]>  0
                                and impr.act_class_cd = 'ACL02' and impr.impr_step_cd != 'IMST5' then 1 else 0 end) as tempOverdueCnt -- 조치기한 초과
                          ,sum(case when impr.impr_step_cd = 'IMST5' then 1 else 0 end) as tempCompletCnt -- 조치완료                          
                          ,convert(float,dbo.GET_DIVIDE( sum(case when datediff(day, convert(char(10), GETDATE(), 23) , impr.act_limit_ymd)  <![CDATA[<]]>  0
                                and impr.act_class_cd = 'ACL02' and impr.impr_step_cd != 'IMST5' then 1 else 0 end) ,count(*)))  as imprActRate
                      from saf_maj_disa_insp di
                      inner join saf_impr_act impr
                      on di.maj_disa_insp_no = impr.ref_table_id
                      and impr.impr_class_cd = 'ICL40'
                      <if test="plantCd !=null and !plantCd.equals('')">
                        and di.plant_cd = #{plantCd}
                      </if>
                      
                      group by di.plant_cd, substring(convert(char(10), iif(isnull(impr.act_limit_ymd, '') = '',  impr.act_confirm_ymd, impr.act_limit_ymd), 23), 1, 7)  
                 ), imprP as(
                    select
                        plant_cd
                        ,gubun_type         
                        ,case 
                               when gubun = 'requestCnt' then '요청(건수)'
                               when gubun = 'incompletCnt' then '조치미완료(건수)'
                               when gubun = 'overdueCnt' then '조치기한 초과(건수)'
                               when gubun = 'completCnt' then '조치완료(건수)'
                               when gubun = 'imprActRate' then '개선 조치율(%)' end gubun
                        ,case 
                               when gubun = 'requestCnt' then sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} then tempRequestCnt end)
                               when gubun = 'incompletCnt' then sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} then tempIncompletCnt end)  
                               when gubun = 'overdueCnt' then sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} then tempOverdueCnt end)  
                               when gubun = 'completCnt' then sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} then tempCompletCnt end) 
                               when gubun = 'imprActRate' then 1- dbo.GET_DIVIDE(
                                sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} then tempOverdueCnt end)
                                ,sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} then tempRequestCnt end)
                               )
                         end as oldCnt
                        ,sum(case when mons = #{year}+'-01' then calSum end) as mon1
                        ,sum(case when mons = #{year}+'-02' then calSum end) as mon2
                        ,sum(case when mons = #{year}+'-03' then calSum end) as mon3
                        ,sum(case when mons = #{year}+'-04' then calSum end) as mon4
                        ,sum(case when mons = #{year}+'-05' then calSum end) as mon5
                        ,sum(case when mons = #{year}+'-06' then calSum end) as mon6
                        ,sum(case when mons = #{year}+'-07' then calSum end) as mon7
                        ,sum(case when mons = #{year}+'-08' then calSum end) as mon8
                        ,sum(case when mons = #{year}+'-09' then calSum end) as mon9
                        ,sum(case when mons = #{year}+'-10' then calSum end) as mon10
                        ,sum(case when mons = #{year}+'-11' then calSum end) as mon11
                        ,sum(case when mons = #{year}+'-12' then calSum end) as mon12    
                        ,case 
                               when gubun = 'requestCnt' then sum(case when SUBSTRING(mons,1,4) = #{year} then tempRequestCnt end)
                               when gubun = 'incompletCnt' then sum(case when SUBSTRING(mons,1,4) = #{year} then tempIncompletCnt end)  
                               when gubun = 'overdueCnt' then sum(case when SUBSTRING(mons,1,4) = #{year} then tempOverdueCnt end)  
                               when gubun = 'completCnt' then sum(case when SUBSTRING(mons,1,4) = #{year} then tempCompletCnt end) 
                               when gubun = 'imprActRate' then 1 - dbo.GET_DIVIDE(
                                sum(case when SUBSTRING(mons,1,4) = #{year} then tempOverdueCnt end)
                                ,sum(case when SUBSTRING(mons,1,4) = #{year} then tempRequestCnt end)
                               )
                         end as total
                         ,case 
                               when gubun = 'requestCnt' then sum(tempRequestCnt)
                               when gubun = 'incompletCnt' then sum(tempIncompletCnt)  
                               when gubun = 'overdueCnt' then sum(tempOverdueCnt)  
                               when gubun = 'completCnt' then sum(tempCompletCnt) 
                               when gubun = 'imprActRate' then 1 - dbo.GET_DIVIDE(
                                sum(tempOverdueCnt)
                                ,sum(tempRequestCnt)
                               )
                         end as allCnt          
                    from impr 
                    unpivot([calSum] for [gubun] in ([requestCnt],[incompletCnt],[overdueCnt],[completCnt],[imprActRate])) as unpvt  
                    group by plant_cd, gubun, gubun_type
            ), result as(    
            select  
                          plant_cd     
                           ,gubun_type
                           ,case gubun when 'plan_target_val' then '수립대상(개소)'   when 'plan_val' then '수립(개소)' when 'plan_rate' then '계획 수립율(%)'
                                when 'raw_plan_target_val' then '수립대상(개소)'  when 'raw_plan_val' then '수립(개소)' when 'raw_plan_rate' then '계획 수립율(%)'
                                when 'chk_val' then '점검실시(개소)' when 'raw_chk_rate' then '점검 실시율(%)' 
                                when 'con_act_val' then '우려사항 조치(건수)' when 'civil_dis_act_val' then '시민재해 조치(건수)' when 'civil_dis_impr_val' then '시민재해 개선(건수)' 
                           end as gubun    
                           ,
                                case when gubun = 'plan_rate' then 
                                    dbo.GET_DIVIDE(sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_plan_val end)
                                                ,sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_plan_target_val end)
                                                )
                                    when  gubun='plan_target_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_plan_target_val end)
                                    when gubun='plan_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_plan_val end) -- 안전계획:계획 수립율(%)
                                    when gubun = 'raw_plan_rate' then 
                                    dbo.GET_DIVIDE(sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_raw_plan_val end)
                                                ,sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_raw_plan_target_val end)
                                                )
                                    when  gubun='raw_plan_target_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_raw_plan_target_val end)
                                    when gubun='raw_plan_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_raw_plan_val end)  -- 법정점검:계획 수립율(%)
                                    when gubun = 'raw_chk_rate' then 
                                    dbo.GET_DIVIDE(sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_chk_val end)
                                                ,sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_raw_plan_val end)
                                                )
                                    when  gubun='chk_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_chk_val end) -- 법정점검:점검실시율(%)  
                                    when  gubun='con_act_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_con_act_val end) 
                                    when  gubun='civil_dis_act_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_civil_dis_act_val end) 
                                    when  gubun='civil_dis_impr_val' then sum(case when substring(mons,1,4) &lt;= #{preYear} then temp_civil_dis_impr_val end)                
                               end as oldCnt
                           ,sum(case when mons = #{year} + '-01' then calSum end) as mon1
                           ,sum(case when mons = #{year} + '-02' then calSum end) as mon2
                           ,sum(case when mons = #{year} + '-03' then calSum end) as mon3
                           ,sum(case when mons = #{year} + '-04' then calSum end) as mon4
                           ,sum(case when mons = #{year} + '-05' then calSum end) as mon5
                           ,sum(case when mons = #{year} + '-06' then calSum end) as mon6
                           ,sum(case when mons = #{year} + '-07' then calSum end) as mon7
                           ,sum(case when mons = #{year} + '-08' then calSum end) as mon8
                           ,sum(case when mons = #{year} + '-09' then calSum end) as mon9
                           ,sum(case when mons = #{year} + '-10' then calSum end) as mon10
                           ,sum(case when mons = #{year} + '-11' then calSum end) as mon11
                           ,sum(case when mons = #{year} + '-12' then calSum end) as mon12        
                           ,case when gubun = 'plan_rate' then 
                                    dbo.GET_DIVIDE(sum(case when substring(mons,1,4) =#{year} then temp_plan_val end)
                                                ,sum(case when substring(mons,1,4) =#{year} then temp_plan_target_val end)
                                                )
                                    when  gubun='plan_target_val' then sum(case when substring(mons,1,4) =#{year} then temp_plan_target_val end)
                                    when gubun='plan_val' then sum(case when substring(mons,1,4) =#{year} then temp_plan_val end) -- 안전계획:계획 수립율(%)
                                    when gubun = 'raw_plan_rate' then 
                                    dbo.GET_DIVIDE(sum(case when substring(mons,1,4) =#{year} then temp_raw_plan_val end)
                                                ,sum(case when substring(mons,1,4) =#{year} then temp_raw_plan_target_val end)
                                                )
                                    when  gubun='raw_plan_target_val' then sum(case when substring(mons,1,4) =#{year} then temp_raw_plan_target_val end)
                                    when gubun='raw_plan_val' then sum(case when substring(mons,1,4) =#{year} then temp_raw_plan_val end)  -- 법정점검:계획 수립율(%)
                                    when gubun = 'raw_chk_rate' then 
                                    dbo.GET_DIVIDE(sum(case when substring(mons,1,4) =#{year} then temp_chk_val end)
                                                ,sum(case when substring(mons,1,4) =#{year} then temp_raw_plan_val end)
                                                )
                                    when  gubun='chk_val' then sum(case when substring(mons,1,4) = #{year} then temp_chk_val end) -- 법정점검:점검실시율(%)    
                                    when  gubun='con_act_val' then sum(case when substring(mons,1,4) = #{year} then temp_con_act_val end) 
                                    when  gubun='civil_dis_act_val' then sum(case when substring(mons,1,4) = #{year} then temp_civil_dis_act_val end) 
                                    when  gubun='civil_dis_impr_val' then sum(case when substring(mons,1,4) = #{year} then temp_civil_dis_impr_val end)              
                               end as total 
                          ,case when gubun = 'plan_rate' then 
                                    dbo.GET_DIVIDE(sum(temp_plan_val)
                                                ,sum(temp_plan_target_val)
                                                )
                                    when  gubun='plan_target_val' then sum(temp_plan_target_val)
                                    when gubun='plan_val' then sum(temp_plan_val) -- 안전계획:계획 수립율(%)
                                    when gubun = 'raw_plan_rate' then 
                                    dbo.GET_DIVIDE(sum(temp_raw_plan_val)
                                                ,sum(temp_raw_plan_target_val)
                                                )
                                    when  gubun='raw_plan_target_val' then sum(temp_raw_plan_target_val)
                                    when gubun='raw_plan_val' then sum(temp_raw_plan_val)  -- 법정점검:계획 수립율(%)
                                    when gubun = 'raw_chk_rate' then 
                                    dbo.GET_DIVIDE(sum(temp_chk_val)
                                                ,sum(temp_raw_plan_val)
                                                )
                                    when  gubun='chk_val' then sum(temp_chk_val) -- 법정점검:점검실시율(%)  
                                    when  gubun='con_act_val' then sum(temp_con_act_val) 
                                    when  gubun='civil_dis_act_val' then sum(temp_civil_dis_act_val) 
                                    when  gubun='civil_dis_impr_val' then sum(temp_civil_dis_impr_val)                
                               end as allCnt                                   
                    from safeT
                    group by plant_cd, gubun, gubun_type
                    union all 
                    select * from imprP
            ), safeTotal as (
                select
                  '합계' as plant_cd
                  ,'합계' as plant_nm
                  ,case when gubun_type ='법정검검계획(실시율)' then '법정점검계획' else gubun_type  end as gubun_type
                  ,case gubun_type when '안전계획' then '계획 수립율(%)' when '법정점검계획' then '계획 수립율(%)' when '법정검검계획(실시율)' then '점검 실시율(%)' end as gubun 
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} and gubun = 'plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} and gubun = 'raw_plan_val' then calsum end)    
                                                    ,sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} and gubun &lt;= 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} and gubun = 'sum_chk_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,4) &lt;= #{preYear} and gubun = 'sum_raw_plan_val' then calsum end)) end *100  as oldCnt
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)= #{year}+'-01' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-01' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-01' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-01' and gubun = 'raw_plan_target_val' then calsum end))
                     when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-01' and gubun = 'sum_chk_val' then calsum end)   
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-01' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon1
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-02' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-02' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-02' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-02' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-02' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-02' and gubun = 'sum_raw_plan_val' then calsum end)) end *100  as mon2
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-03' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-03' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-03' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-03' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-03' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-03' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon3
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-04' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-04' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-04' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-04' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-04' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-04' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon4
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-05' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-05' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-05' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-05' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-05' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-05' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon5
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-06' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-06' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-06' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-06' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-06' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-06' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon6
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-07' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-07' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-07' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-07' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-07' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-07' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon7
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-08' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-08' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-08' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-08' and gubun = 'raw_plan_target_val' then calsum end)) 
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-08' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-08' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon8
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-09' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-09' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-09' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-09' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-09' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-09' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon9
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-10' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-10' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-10' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-10' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-10' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-10' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon10
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-11' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-11' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-11' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-11' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-11' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-11' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon11
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-12' and gubun = 'plan_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-12' and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-12' and gubun = 'raw_plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-12' and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,7)=#{year}+'-12' and gubun = 'sum_chk_val' then calsum end)  
                                                    ,sum(case when SUBSTRING(mons,1,7)=#{year}+'-12' and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as mon12
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,4)=#{year} and gubun = 'plan_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,4)=#{year} and gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,4)=#{year} and gubun = 'raw_plan_val' then calsum end)    
                                                    ,sum(case when SUBSTRING(mons,1,4)=#{year} and gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when SUBSTRING(mons,1,4)=#{year} and gubun = 'sum_chk_val' then calsum end) 
                                                    ,sum(case when SUBSTRING(mons,1,4)=#{year} and gubun = 'sum_raw_plan_val' then calsum end)) end *100 as total
                  ,case when gubun_type = '안전계획' then dbo.GET_DIVIDE(sum(case when gubun = 'plan_val' then calsum end) 
                                                    ,sum(case when gubun = 'plan_target_val' then calsum end))
                      when gubun_type= '법정점검계획' then dbo.GET_DIVIDE(sum(case when gubun = 'raw_plan_val' then calsum end)    
                                                    ,sum(case when gubun = 'raw_plan_target_val' then calsum end))
                      when gubun_type='법정검검계획(실시율)' then dbo.GET_DIVIDE(sum(case when gubun = 'sum_chk_val' then calsum end) 
                                                    ,sum(case when gubun = 'sum_raw_plan_val' then calsum end)) end *100 as allCnt
                 ,case gubun_type when '안전계획' then 98 when '법정점검계획' then 99 when '법정검검계획(실시율)' then 100 end as sort_order 
            from safeT
            where gubun != 'plan_rate' and gubun != 'raw_plan_rate' and gubun != 'raw_chk_rate'
            group by gubun_type
            ), safeImpr as (
                select  
                '합계' as plant_cd
                ,'합계' as plant_nm
                ,gubun_type
                ,'개선 조치율(%)' as gubun
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,oldCnt) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,oldCnt) end)) *100  as oldCnt
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon1) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon1) end)) *100  as mon1
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon2) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon2) end)) *100  as mon2
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon3) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon3) end)) *100  as mon3
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon4) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon4) end)) *100  as mon4
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon5) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon5) end)) *100  as mon5
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon6) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon6) end)) *100  as mon6
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon7) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon7) end)) *100  as mon7
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon8) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon8) end)) *100  as mon8
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon9) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon9) end)) *100  as mon9
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon10) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon10) end)) *100 as mon10
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon11) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon11) end)) *100 as mon11
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,mon12) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,mon12) end)) *100 as mon12
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric,total) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric,total) end)) *100 as total
                ,dbo.GET_DIVIDE(sum(case when gubun ='조치기한 초과(건수)' then convert(numeric, allCnt) end)
                    ,sum(case when gubun='요청(건수)' then convert(numeric, allCnt) end)) *100 as allCnt
                ,101 as sort_order
            from imprP
            group by gubun_type 
            )
            select 
                a.plantCd
                ,dbo.GET_CODE_NM_LANG('kr','com_plant_cd', a.plantCd) as plant_nm
                ,a.gubun_type
                ,a.gubun
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(round(isnull(oldCnt,0),1),'#,0') else format(round(isnull(oldCnt,0) * 100,2),'0.00') end as oldCnt
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon1,0),'#,0') else format(round(isnull(mon1,0) *100,2),'#,0.00') end as mon1   
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon2,0),'#,0') else format(round(isnull(mon2,0) *100,2),'#,0.00') end as mon2
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon3,0),'#,0') else format(round(isnull(mon3,0) *100,2),'#,0.00') end as mon3
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon4,0),'#,0') else format(round(isnull(mon4,0) *100,2),'#,0.00') end as mon4
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon5,0),'#,0') else format(round(isnull(mon5,0) *100,2),'#,0.00') end as mon5
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon6,0),'#,0') else format(round(isnull(mon6,0) *100,2),'#,0.00') end as mon6
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon7,0),'#,0') else format(round(isnull(mon7,0) *100,2),'#,0.00') end as mon7
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon8,0),'#,0') else format(round(isnull(mon8,0) *100,2),'#,0.00') end as mon8
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon9,0),'#,0') else format(round(isnull(mon9,0) *100,2),'#,0.00') end as mon9
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon10,0),'#,0') else format(round(isnull(mon10,0) *100,2),'#,0.00') end as mon10
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon11,0),'#,0') else format(round(isnull(mon11,0) *100,2),'#,0.00') end as mon11
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(isnull(mon12,0),'#,0') else format(round(isnull(mon12,0) *100,2),'#,0.00') end as mon12
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(round(isnull(total,0),1),'#,0') else format(round(isnull(total,0) * 100,2),'#,0.00') end as total
                ,case when a.gubun != '계획 수립율(%)' and  a.gubun !='점검 실시율(%)' and a.gubun != '개선 조치율(%)' then format(round(isnull(allCnt,0),1),'#,0') else format(round(isnull(allCnt,0) * 100,2),'#,0.00') end as allCnt               
                ,a.sort_order
            from gubunList a
            left join result b
            on a.plantCd = b.plant_cd and a.gubun_type = b.gubun_type and a.gubun = b.gubun
            union all
                select 
                 distinct
                 '합계'
                 ,'합계'   
                 ,list.gubun_type                 
                 ,list.gubun
                 ,format(round(isnull(st.oldCnt,0),2),'0.00') as oldCnt 
                 ,format(round(isnull(mon1,0),2) ,'#,0.00') as mon1
                 ,format(round(isnull(mon2,0),2) ,'#,0.00') as mon2
                 ,format(round(isnull(mon3,0),2) ,'#,0.00') as mon3
                 ,format(round(isnull(mon4,0),2) ,'#,0.00') as mon4
                 ,format(round(isnull(mon5,0),2) ,'#,0.00') as mon5
                 ,format(round(isnull(mon6,0),2) ,'#,0.00') as mon6
                 ,format(round(isnull(mon7,0),2) ,'#,0.00') as mon7
                 ,format(round(isnull(mon8,0),2) ,'#,0.00') as mon8
                 ,format(round(isnull(mon9,0),2) ,'#,0.00') as mon9
                 ,format(round(isnull(mon10,0),2) ,'#,0.00') as mon10
                 ,format(round(isnull(mon11,0),2) ,'#,0.00') as mon11
                 ,format(round(isnull(mon12,0),2) ,'#,0.00') as mon12
                 ,format(round(isnull(st.total,0),2) ,'#,0.00') as total
                 ,format(round(isnull(st.allCnt,0),2) ,'#,0.00') as allCnt
                 ,list.sort_order m
             from gubunList list
             left join safeTotal st       
             on list.gubun_type = st.gubun_type
             and list.gubun = st.gubun
             where list.gubun_type != '개선현황' and list.gubun != '수립(개소)' and list.gubun !='수립대상(개소)' and list.gubun != '점검실시(개소)' and list.gubun != '우려사항 조치(건수)' and list.gubun != '시민재해 조치(건수)' and list.gubun != '시민재해 개선(건수)'       
             union all
             select 
                distinct
                '합계'
                ,'합계'
                ,list.gubun_type
                ,list.gubun
                ,format(round(isnull(oldCnt,0),2),'0.00') as oldCnt
                ,format(round(isnull(mon1,0),2),'0.00') as mon1
                ,format(round(isnull(mon2,0),2),'0.00') as mon2
                ,format(round(isnull(mon3,0),2),'0.00') as mon3
                ,format(round(isnull(mon4,0),2),'0.00') as mon4
                ,format(round(isnull(mon5,0),2),'0.00') as mon5
                ,format(round(isnull(mon6,0),2),'0.00') as mon6
                ,format(round(isnull(mon7,0),2),'0.00') as mon7
                ,format(round(isnull(mon8,0),2),'0.00') as mon8
                ,format(round(isnull(mon9,0),2),'0.00') as mon9
                ,format(round(isnull(mon10,0),2),'0.00') as mon10
                ,format(round(isnull(mon11,0),2),'0.00') as mon11
                ,format(round(isnull(mon12,0),2),'0.00') as mon12
                ,format(round(isnull(total,0),2),'0.00') as total
                ,format(round(isnull(allCnt,0),2),'0.00') as allCnt
                ,list.sort_order
            from gubunList list 
            left join safeImpr si
            on list.gubun_type = si.gubun_type
            and list.gubun = si.gubun
            where list.gubun = '개선 조치율(%)'                     
            order by plantCd, sort_order
    </select>
    
</mapper>