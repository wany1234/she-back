<?xml version= "1.0" encoding= "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.she.safety.safetyhealth.mapper.InspectionSHMapper">
    <select id= "getPlanLists" resultType= "com.she.safety.model.InspectionSH">
        /* InspectionSHMapper.getPlanLists [InspectionSH.xml] */
        select
             shp.impl_chk_plan_no               --안전보건법령 이행점검 계획번호
            ,shp.plant_cd                   --사업장
            ,dbo.GET_CODE_NM(shp.plant_cd, 'COM_PLANT_CD') as plant_nm
            ,shp.year                       --대상년도
            ,shp.reg_regdem as reg_regdem_cd                --구분(정기/수시) RSA_REG_REGDEM
            ,concat(dbo.GET_CODE_NM(shp.proc_step_cd, 'COM_STEP'),' (', case when shp.step_cd = 'BAPSD' then dbo.GET_CODE_NM(shp.step_cd, 'COM_BIZ_APPR_STEP') else dbo.GET_CODE_NM(shp.state_cd, 'COM_STATE') end , ')') as stateNm
            ,dbo.GET_CODE_NM(shp.reg_regdem, 'RSA_REG_REGDEM') as reg_regdem_nm
            ,shp.chk_start_dt               --점검(계획)시작일
            ,shp.chk_end_dt                 --점검(계획)종료일
            ,shp.main_dept_cd               --주관부서
            ,dbo.GET_DEPT_NM(shp.main_dept_cd) as main_dept_nm
            ,shp.chk_nm                     --점검명
            ,shp.chk_desc                   --상세내용
            ,shp.proc_step_cd               --단계 RSA_WORK_RISK_STEP
            ,dbo.GET_CODE_NM(shp.proc_step_cd, 'RSA_WORK_RISK_STEP') as proc_step_nm
            ,shp.state_cd                   --상태 COM_STATE
            ,shp.step_cd                    --결재상태 COM_BIZ_APPR_STEP
            ,dbo.GET_CODE_NM(shp.step_cd, 'COM_BIZ_APPR_STEP') as step_nm
            ,shp.appr_rqst_no as p_appr_rqst_no --결재요청번호
            ,shp.create_user_id             --등록자ID
            ,dbo.GET_USER_NM(shp.create_user_id) as create_user_nm
            ,convert(char(10), shp.create_dt, 23) as create_dt --등록일
            ,shp.update_user_id             --수정자ID
            ,shp.update_dt                  --수정일
            ,shp.create_dept_nm             --등록자부서명
            ,shp.create_dept_cd             --등록자부서코드
            ,shp.update_dept_nm             --수정자부서명
            ,shp.update_dept_cd             --수정자부서코드
            ,shp.create_position_nm         --등록자직위명
            ,shp.create_position_cd         --등록자직위코드
            ,shp.update_position_nm         --수정자직위명
            ,shp.update_position_cd         --수정자직위코드
            ,(select count(*) from saf_heal_impl_chk_dept shd where shd.impl_chk_plan_no = shp.impl_chk_plan_no ) as deptCnt
            ,(select count(*)
                from saf_heal_impl_chk_dept shd
                where shd.impl_chk_plan_no = shp.impl_chk_plan_no
                and shd.step_cd = 'BAPSG' ) as deptYCnt
            ,(select count(*)
                from saf_heal_impl_chk_dept shd
                where shd.impl_chk_plan_no = shp.impl_chk_plan_no
                and shd.step_cd != 'BAPSG'
                and datediff(day, GETDATE() , shd.chk_end_dt) &gt;= 0)as deptNCnt
            ,(select count(*)
                from saf_heal_impl_chk_dept shd
                where shd.impl_chk_plan_no = shp.impl_chk_plan_no
                and  shd.step_cd != 'BAPSG'
                and  datediff(day, GETDATE() , shd.chk_end_dt) &lt; 0) as overDateCnt
        from saf_heal_impl_chk_plan shp
        where 1=1
        <if test= "plantCd != null and !plantCd.equals('')">
          and shp.plant_cd = #{plantCd}
        </if>
        <if test= "year != null and !year.equals('')">
          and shp.year = #{year}
        </if>
        <if test= "regRegdemCd != null and !regRegdemCd.equals('')">
          and shp.reg_regdem = #{regRegdemCd}
        </if>
        <if test= "chkNm != null and !chkNm.equals('')">
          and shp.chk_nm like '%' + #{chkNm}
        </if>
        <if test= "procStepCd != null and !procStepCd.equals('')">
          and shp.proc_step_cd = #{procStepCd}
        </if>
        <if test= "stateCd != null and !stateCd.equals('')">
          and shp.state_cd = #{stateCd}
        </if>
        <if test= 'yearChk != null and yearChk.equals("Y")'>
            and (select count(*)
               from saf_heal_impl_chk_dept shd
              where shd.impl_chk_plan_no = shp.impl_chk_plan_no
                and shd.step_cd != 'BAPSG'
                and  datediff(day, GETDATE() , shd.chk_end_dt) &lt; 0) &gt; 0
        </if>
        <if test= 'mainDeptCd != null and !mainDeptCd.equals("")'>
            <choose>
                <when test='deptSubYn != null and deptSubYn.equals("Y")'>
                    and shp.main_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{mainDeptCd}))
                </when>
                <otherwise>
                    and shp.main_dept_cd = #{mainDeptCd}
                </otherwise>
            </choose>
        </if>
        order by shp.impl_chk_plan_no desc
    </select>

    <select id= "getPlanInfo" resultType= "com.she.safety.model.InspectionSH">
        /* InspectionSHMapper.getPlanInfo [InspectionSH.xml] */
        select
             shp.impl_chk_plan_no               --안전보건법령 이행점검 계획번호
            ,shp.plant_cd                   --사업장
            ,dbo.GET_CODE_NM(shp.plant_cd, 'COM_PLANT_CD') as plant_nm
            ,shp.year                       --대상년도
            ,shp.reg_regdem as reg_regdem_cd                --구분(정기/수시) RSA_REG_REGDEM
            ,concat(dbo.GET_CODE_NM(shp.proc_step_cd, 'RSA_WORK_RISK_STEP'),' (', dbo.GET_CODE_NM(shp.step_cd, 'COM_BIZ_APPR_STEP') , ')') as stateNm
            ,dbo.GET_CODE_NM(shp.reg_regdem, 'RSA_REG_REGDEM') as reg_regdem_nm
            ,shp.chk_start_dt               --점검(계획)시작일
            ,shp.chk_end_dt                 --점검(계획)종료일
            ,shp.main_dept_cd               --주관부서
            ,dbo.GET_DEPT_NM(shp.main_dept_cd) as main_dept_nm
            ,shp.chk_nm                     --점검명
            ,shp.chk_desc                   --상세내용
            ,shp.proc_step_cd               --단계 COM_STEP
            ,dbo.GET_CODE_NM(shp.proc_step_cd, 'COM_STEP') as proc_step_nm
            ,shp.state_cd                   --상태 COM_STATE
            ,shp.step_cd                    --결재상태 COM_BIZ_APPR_STEP
            ,dbo.GET_CODE_NM(shp.step_cd, 'COM_BIZ_APPR_STEP') as step_nm
            ,shp.appr_rqst_no               --결재요청번호
            ,shp.create_user_id             --등록자ID
            ,dbo.GET_USER_NM(shp.create_user_id) as create_user_nm
            ,convert(char(10), shp.create_dt, 23) as create_dt --등록일
            ,shp.update_user_id             --수정자ID
            ,shp.update_dt                  --수정일
            ,shp.create_dept_nm             --등록자부서명
            ,shp.create_dept_cd             --등록자부서코드
            ,shp.update_dept_nm             --수정자부서명
            ,shp.update_dept_cd             --수정자부서코드
            ,shp.create_position_nm         --등록자직위명
            ,shp.create_position_cd         --등록자직위코드
            ,shp.update_position_nm         --수정자직위명
            ,shp.update_position_cd         --수정자직위코드
            ,isnull(i.code_nm, '결재요청전') as papprRqstNm
            ,isnull(h.appr_rqst_no, '0') as papprRqstNo
        from saf_heal_impl_chk_plan shp
        left outer join com_appr_rqst h on shp.appr_rqst_no = h.appr_rqst_no
          left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') i on shp.step_cd = i.code
        where 1=1
        and shp.impl_chk_plan_no = #{implChkPlanNo}
    </select>
    <select id="getPlanDeptList" resultType= "com.she.safety.model.InspectionSHDept">
        /* InspectionSHMapper.getPlanDeptList [InspectionSH.xml] */
        select
            impl_chk_dept_no
           ,impl_chk_plan_no
           ,dept_cd
           ,dbo.GET_DEPT_NM(dept_cd) as dept_nm
           ,step_cd
           ,convert(char(10), chk_start_dt, 23) as chk_start_dt
           ,convert(char(10), chk_end_dt, 23) as chk_end_dt
           ,chk_desc
           ,case when chk_finish_yn = 'N' then '미완료' else '완료' end chk_finish_yn
           ,case when isnull(chk_finish_yn, 'N') = 'N' then '미완료'
                 else '완료' end as showChkFinishYn
           ,convert(char(10), chk_finish_dt, 23) as chk_finish_dt
          from saf_heal_impl_chk_dept
         where impl_chk_plan_no = #{implChkPlanNo}
          <if test="apprFlag != null and !apprFlag.equals('')">
            <choose>
                <when test= "'deptCnt'.equals(apprFlag)">
                    -- 대상부서
                </when>
                <when test= "'deptNCnt'.equals(apprFlag)">
                    -- 평가미완료
                    and isnull(chk_finish_yn, 'N') = 'N'
                    and datediff(day, GETDATE() , chk_end_dt) &gt;= 0
                </when>
                <when test= "'overDateCnt'.equals(apprFlag)">
                    -- 평가기한초과
                    and step_cd != 'BAPSG'
                    and datediff(day, GETDATE() , chk_end_dt) &lt; 0
                </when>
                <when test= "'deptYCnt'.equals(apprFlag)">
                    -- 평가완료
                    and step_cd = 'BAPSG'
                </when>
                <otherwise>
                </otherwise>
            </choose>
        </if>
    </select>
    <insert id= "createInspection" parameterType= "com.she.safety.model.InspectionSH">
        /* InspectionSHMapper.createInspection [InspectionSH.xml] */
       <selectKey keyProperty= "implChkPlanNo" resultType= "int" order= "BEFORE">
          select next value for seq_saf_heal_impl_chk_plan as impl_chk_plan_no
        </selectKey>
        insert into saf_heal_impl_chk_plan
        (
             impl_chk_plan_no             --안전보건법령 이행점검 계획번호
            ,plant_cd                     --사업장
            ,year                         --대상년도
            ,reg_regdem                   --구분 RSA_REG_REGDEM
            ,chk_start_dt                 --점검(계획)시작일
            ,chk_end_dt                   --점검(계획)종료일
            ,main_dept_cd                 --주관부서
            ,chk_nm                       --점검명
            ,chk_desc                     --상세내용
            ,proc_step_cd                 --단계COM_STEP(CS001 : 계획)
            ,state_cd                     --상태 COM_STATE
            ,step_cd                      --결재상태 COM_BIZ_APPR_STEP
            ,create_user_id               --등록자ID
            ,create_dt                    --등록일
            ,create_dept_nm               --등록자 부서명
            ,create_dept_cd               --등록자 부서코드
            ,create_position_nm           --등록자 직위명
            ,create_position_cd           --등록자 직위코드
        )
        values
        (
             #{implChkPlanNo}
            ,#{plantCd}
            ,#{year}
            ,#{regRegdemCd}
            ,#{chkStartDt}
            ,#{chkEndDt}
            ,#{mainDeptCd}
            ,#{chkNm}
            ,#{chkDesc}
            ,'CS001'
            ,#{stateCd}
            ,#{stepCd}
            ,#{createUserId}
            ,convert(char(10), getDate(), 23)
            ,#{createDeptNm}
            ,#{createDeptCd}
            ,#{createPositionCd}
            ,#{createPositionNm}
        )
    </insert>
    <insert id= "createPlanDept" parameterType= "com.she.safety.model.InspectionSHDept">
        /* InspectionSHMapper.createPlanDept [InspectionSH.xml] */
       <selectKey keyProperty= "implChkDeptNo" resultType= "int" order= "BEFORE">
          select next value for seq_saf_heal_impl_chk_dept as impl_chk_dept_no
        </selectKey>
        insert into saf_heal_impl_chk_dept
        (
             impl_chk_dept_no
            ,impl_chk_plan_no
            ,dept_cd
            ,proc_step_cd
            ,state_cd
            ,step_cd
            ,chk_start_dt
            ,chk_end_dt
            ,chk_desc
            ,chk_finish_yn
            ,update_user_id
            ,update_dt
            ,update_dept_nm
            ,update_dept_cd
            ,update_position_nm
            ,update_position_cd
            ,dept_reader_id
        )
        values
        (
             #{implChkDeptNo}
            ,#{implChkPlanNo}
            ,#{deptCd}
            ,'CS002'
            ,'STATE1'
            ,'BAPSB'
            ,#{chkStartDt}
            ,#{chkEndDt}
            ,#{chkDesc}
            ,'N'
            ,#{updateUserId}
            ,convert(char(10), getDate(), 23)
            ,#{updateDeptNm}
            ,#{updateDeptCd}
            ,#{updatePositionNm}
            ,#{updatePositionCd}
            ,#{deptReaderId}
        )
    </insert>
    <update id= "updateInspection" parameterType= "com.she.safety.model.InspectionSH">
        /* InspectionSHMapper.updateInspection [InspectionSH.xml] */
        update saf_heal_impl_chk_plan
           set  plant_cd = #{plantCd}          -- 사업장
               ,year = #{year}           -- 대상년도
               ,reg_regdem = #{regRegdemCd}            -- 구분RSA_REG_REGDEM
               ,chk_start_dt = #{chkStartDt}       -- 점검기간 시작일
               ,chk_end_dt = #{chkEndDt}         -- 점검기간 종료일
               ,chk_nm = #{chkNm}             -- 점검명
               ,chk_desc = #{chkDesc}           -- 비고
               ,main_dept_cd = #{mainDeptCd}        -- 주관부서
               ,update_user_id = #{updateUserId}        -- 수정자ID
               ,update_dt = getDate()             -- 수정일
               ,update_dept_nm = #{updateDeptNm}        -- 수정자부서명
               ,update_dept_cd = #{updateDeptCd}        -- 수정자부서코드
               ,update_position_nm = #{updatePositionCd}    -- 수정자직위명
               ,update_position_cd = #{updatePositionNm}
          where impl_chk_plan_no = #{implChkPlanNo}
    </update>
    <update id ="updatePlanDept" parameterType= "com.she.safety.model.InspectionSHDept">
        /* InspectionSHMapper.updatePlanDept [InspectionSH.xml] */
        update saf_heal_impl_chk_dept
           set chk_start_dt = #{chkStartDt}
              ,chk_end_dt = #{chkEndDt}
              ,chk_desc = #{chkDesc}
              ,dept_reader_id =#{deptReaderId}
              ,state_cd = #{stateCd}
         where impl_chk_plan_no = #{implChkPlanNo}
           and impl_chk_dept_no = #{implChkDeptNo}
    </update>
    <delete id= "deleteInspectionDept">
        /* InspectionSHMapper.deleteInspectionDept [InspectionSH.xml] */
        delete saf_heal_impl_chk_dept
         where impl_chk_dept_no = #{implChkDeptNo}
    </delete>

    <update id="updateAppr" >
        /* InspectionSHMapper.updateAppr [InspectionSH.xml] */
        UPDATE saf_heal_impl_chk_plan
        SET  appr_rqst_no = #{apprRqstNo}
        <if test="apprStepCd != null and !apprStepCd.equals('')">
        ,step_cd = #{apprStepCd}
        </if>
        <if test='apprStepCd.equals("BAPSA")'>
            ,state_cd = 'STATE3'
        </if>
        <if test='apprStepCd.equals("BAPSG")'>
            ,state_cd = 'STATE4'
        </if>
        where impl_chk_plan_no = #{implChkPlanNo}
    </update>
    <select id= "getResultLists" resultType= "com.she.safety.model.InspectionSHDept">
        /* InspectionSHMapper.getResultLists [InspectionSH.xml] */
        select
             shd.impl_chk_plan_no
            ,(select count(*) from saf_impr_act sia where sia.ref_table_id = shd.impl_chk_dept_no
              and sia.impr_class_cd = 'ICL38') as requestCnt
            ,(select count(*)
               from saf_impr_act sia where sia.ref_table_id = shd.impl_chk_dept_no
               and sia.impr_class_cd = 'ICL38'
               and sia.impr_step_cd != 'IMST5'
               and (sia.act_class_cd = 'ACL01' or (sia.act_class_cd = 'ACL02' and datediff(day, convert(char(10), GETDATE(), 23) , sia.act_limit_ymd) &gt;= 0)
               )) as incompletCnt
            ,(select count(*)
               from saf_impr_act sia where sia.ref_table_id = shd.impl_chk_dept_no
               and datediff(day, convert(char(10), GETDATE(), 23) , sia.act_limit_ymd) &lt; 0
               and sia.act_class_cd = 'ACL02'
               and sia.impr_class_cd = 'ICL38'
               and sia.impr_step_cd != 'IMST5'
               ) as overdueCnt
            ,(select count(*) from saf_impr_act sia where sia.ref_table_id = shd.impl_chk_dept_no
               and sia.impr_class_cd = 'ICL38'
               and sia.impr_step_cd = 'IMST5'
               ) as completCnt
            ,shd.impl_chk_dept_no
            ,shp.plant_cd
            ,shd.proc_step_cd -- 단계 RSA_WORK_RISK_STEP
            ,shd.state_cd -- 상태 COM_STATE
            ,dbo.GET_CODE_NM(shd.proc_step_cd, 'COM_STEP') + '('+ case when shd.step_cd = 'BAPSD' then dbo.GET_CODE_NM(shd.step_cd, 'COM_BIZ_APPR_STEP') else dbo.GET_CODE_NM(shd.state_cd, 'COM_STATE') end + ')' as stateNm
            ,shd.step_cd
            ,dbo.GET_CODE_NM(shp.plant_cd, 'COM_PLANT_CD') as plantNm
            ,dbo.GET_DEPT_NM(shd.dept_cd) as deptNm
            ,shp.chk_nm
            ,shp.reg_regdem       --구분(정기/수시) RSA_REG_REGDEM
            ,dbo.GET_CODE_NM(shp.reg_regdem, 'RSA_REG_REGDEM') as reg_regdem_nm
            ,shp.year      --대상년도
            ,convert(char(10), shd.chk_start_dt, 23) + ' ~ ' + convert(char(10), shd.chk_end_dt, 23) as chkDt
            ,isnull(i.code_nm, '결재요청전') as rApprRqstNm
            ,isnull(h.appr_rqst_no, '0') as rApprRqstNo
            ,dbo.GET_USER_NM(shp.create_user_id) as createUserNm
            ,convert(char(10), shp.create_dt, 23) as create_dt
            ,convert(char(10), shd.chk_finish_dt, 23) as chk_finish_dt
            ,shp.main_dept_cd
            ,dbo.GET_DEPT_NM(shp.main_dept_cd) as mainDeptNm
          from saf_heal_impl_chk_dept shd
          left join saf_heal_impl_chk_plan shp on shd.impl_chk_plan_no = shp.impl_chk_plan_no
          left outer join com_appr_rqst h on shd.appr_rqst_no = h.appr_rqst_no
          left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') i on shd.step_cd = i.code
          where shp.step_cd = 'BAPSG'
          <if test= 'plantCd != null and !plantCd.equals("") and !plantCd.equals("합계")'>
            and shp.plant_cd = #{plantCd}
          </if>
          <if test="year != null and !year.equals('')">            
              <if test= "monFlag != null and monFlag > 0  and monFlag == 200">
                  and shp.year &lt; #{year}
              </if>
              <if test= "monFlag != null and monFlag > 0  and monFlag == 300">
                  and shp.year &lt;= #{year}
              </if>   
              <if test= "monFlag != null and monFlag > 0  and monFlag != 200 and monFlag != 300">
                  and shp.year = #{year}
              </if>      
          </if>
          <if test= "regRegdemCd != null and !regRegdemCd.equals('')">
            and shp.reg_regdem = #{regRegdemCd}
          </if>
          <if test= "chkNm != null and !chkNm.equals('')">
            and shp.chk_nm like '%' + #{chkNm}
          </if>
          <if test= "stateCd != null and !stateCd.equals('')">
             and shd.state_cd = #{stateCd}
          </if>
          <if test= 'yearChk != null and yearChk.equals("Y")'>
            and  datediff(day, GETDATE() , shd.chk_end_dt) &lt; 0
          </if>
          <if test= "monFlag != null and monFlag != 0 and monFlag != 100 and monFlag != 200 and monFlag != 300">
            and substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = #{monFlag}
          </if>
          <if test= "gubun != null and !gubun.equals('')">
            <choose>
                <when test= "'계획(조직수)'.equals(gubun)">
                </when>
                <when test= "'실시(조직수)'.equals(gubun)">
                  and shd.step_cd = 'BAPSG'
                </when>
                <otherwise>
                  and shd.step_cd = 'BAPSG'
                </otherwise>
            </choose>
          </if>
          <if test= 'imprChk != null and imprChk.equals("Y")'>
            and (
                select count(*)
                  from saf_impr_act sia
                 where sia.impr_class_cd = 'ICL38'
                   and sia.ref_table_id = shd.impl_chk_dept_no
                   and datediff(day, GETDATE() , sia.act_limit_ymd) &lt; 0) != 0
          </if>
           <if test= 'deptCd != null and !deptCd.equals("")'>
              <choose>
                  <when test='deptSubYn != null and deptSubYn.equals("Y")'>
                      and shd.dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{deptCd}))
                  </when>
                  <otherwise>
                      and shd.dept_cd = #{deptCd}
                  </otherwise>
              </choose>
          </if>
          <if test= 'mainDeptCd != null and !mainDeptCd.equals("")'>
              <choose>
                  <when test='mainDeptSubYn != null and mainDeptSubYn.equals("Y")'>
                      and shp.main_dept_cd in (select dept_cd from dbo.GET_UNDER_DEPTS(#{mainDeptCd}))
                  </when>
                  <otherwise>
                      and shp.main_dept_cd = #{mainDeptCd}
                  </otherwise>
              </choose>
          </if>
          order by shp.impl_chk_plan_no desc
    </select>
    <select id= "getResultInfo" resultType= "com.she.safety.model.InspectionSHDept">
        /* InspectionSHMapper.getResultInfo [InspectionSH.xml] */
        select
             shd.impl_chk_plan_no
            ,shd.impl_chk_dept_no
            ,shp.plant_cd
            ,dbo.GET_CODE_NM(shp.plant_cd, 'COM_PLANT_CD') as plantNm
            ,shd.dept_cd
            ,shd.dept_reader_id
            ,dbo.GET_USER_NM(shd.dept_reader_id) as deptReaderNm
            ,dbo.GET_DEPT_NM(shd.dept_cd) as deptNm
            ,(select dept_cd from com_user where user_id = shd.dept_reader_id) as readerDeptCd
            ,(select dept_nm from com_dept where dept_cd in (select dept_cd from com_user where user_id = shd.dept_reader_id)) as readerDeptNm 
            ,shp.chk_nm
            ,shp.reg_regdem as reg_regdem_cd       --구분(정기/수시) RSA_REG_REGDEM
            ,dbo.GET_CODE_NM(shp.reg_regdem, 'RSA_REG_REGDEM') as reg_regdem_nm
            ,shp.year      --대상년도
            ,shp.chk_desc
            ,convert(char(10), shd.chk_start_dt, 23) as chk_start_dt
            ,convert(char(10), shd.chk_end_dt, 23) as chk_end_dt
            ,isnull(i.code_nm, '결재요청전') as rApprRqstNm
            ,isnull(h.appr_rqst_no, '0') as rApprRqstNo
            ,dbo.GET_USER_NM(shp.create_user_id) as createUserNm
            ,convert(char(10), shp.create_dt, 23) as create_dt
            ,rr.impl_chk_rslt_no
            ,rr.impr_case_cnt
            ,rr.eval_dt
            ,rr.rslt_desc
            ,shp.main_dept_cd
            ,dbo.GET_DEPT_NM(shp.main_dept_cd) as mainDeptNm
          from saf_heal_impl_chk_dept shd
          left join saf_heal_impl_chk_plan shp on shd.impl_chk_plan_no = shp.impl_chk_plan_no
          left join saf_heal_impl_chk_rslt rr on shd.impl_chk_dept_no = rr.impl_chk_dept_no
          left outer join com_appr_rqst h on shd.appr_rqst_no = h.appr_rqst_no
          left join dbo.LANG_CODE_MASTER(#{defaultParam.lang}, 'COM_BIZ_APPR_STEP') i on shd.step_cd = i.code
          where 1=1
            and shd.impl_chk_dept_no = #{implChkDeptNo}
    </select>
    <select id= "getEstimatorIn" resultType= "com.she.rsa.model.ResultEstimator">
        /* InspectionSHMapper.getEstimatorIn [InspectionSH.xml] */
        select
             impl_chk_in_rater_no
             ,impl_chk_dept_no
             ,dept_cd
             ,dept_nm
             ,position_cd
             ,position_nm
             ,user_id
             ,user_nm
             ,rater_desc
         from saf_heal_impl_chk_in_rater
        where impl_chk_dept_no = #{implChkDeptNo}
    </select>
    <select id= "getEstimatorOut" resultType= "com.she.rsa.model.ResultEstimator">
        /* InspectionSHMapper.getEstimatorOut [InspectionSH.xml] */
        select
           impl_chk_ex_rater_no
           ,impl_chk_dept_no
           ,company_nm
           ,position_nm
           ,user_nm
           ,rater_desc
          from saf_heal_impl_chk_ex_rater
         where impl_chk_dept_no = #{implChkDeptNo}
    </select>
    <insert id="createResultRslt" parameterType="com.she.safety.model.InspectionSHDept">
        /* InspectionSHMapper.createResultRslt [InspectionSH.xml] */
        <selectKey keyProperty= "implChkRsltNo" resultType= "int" order= "BEFORE">
          select next value for seq_saf_heal_impl_chk_rslt as impl_chk_rslt_no
        </selectKey>
        insert into saf_heal_impl_chk_rslt
               (
                    impl_chk_rslt_no
                   ,impl_chk_dept_no
                   ,impr_case_cnt
                   ,eval_dt
                   ,rslt_desc

               )
               values
               (
                    #{implChkRsltNo}
                   ,#{implChkDeptNo}
                   ,#{imprCaseCnt}
                   ,#{evalDt}
                   ,#{rsltDesc}
               )
    </insert>
    <update id= "updateResultRslt" parameterType="com.she.rsa.model.PlanmgmtDeptList">
        /* InspectionSHMapper.updateResultRslt [InspectionSH.xml] */
        update saf_heal_impl_chk_rslt
           set impr_case_cnt = #{imprCaseCnt}
              ,eval_dt = #{evalDt}
              ,rslt_desc = #{rsltDesc}
         where impl_chk_rslt_no = #{implChkRsltNo}
    </update>
    <delete id="deleteEstimator">
        /* InspectionSHMapper.deleteEstimator [InspectionSH.xml] */
        delete saf_heal_impl_chk_in_rater where impl_chk_dept_no = #{implChkDeptNo}
        delete saf_heal_impl_chk_ex_rater where impl_chk_dept_no = #{implChkDeptNo}
    </delete>
    <insert id="createInEstimator" parameterType="com.she.rsa.model.ResultEstimator">
        /* InspectionSHMapper.createInEstimator [InspectionSH.xml] */
        <selectKey keyProperty="implChkInRaterNo" resultType= "int" order= "BEFORE">
            select next value for seq_saf_heal_impl_chk_in_rater as impl_chk_in_rater_no
        </selectKey>
            insert into saf_heal_impl_chk_in_rater
            (
                impl_chk_in_rater_no
               ,impl_chk_dept_no
               ,dept_cd
               ,dept_nm
               ,position_cd
               ,position_nm
               ,user_id
               ,user_nm
               ,rater_desc

            )
            values
            (
                #{implChkInRaterNo}
               ,#{implChkDeptNo}
               ,#{deptCd}
               ,#{deptNm}
               ,#{positionCd}
               ,#{positionNm}
               ,#{userId}
               ,#{userNm}
               ,#{raterDesc}
            )
    </insert>
    <insert id="createOutEstimator" parameterType="com.she.rsa.model.ResultEstimator">
        /* InspectionSHMapper.createOutEstimator [InspectionSH.xml] */
        <selectKey keyProperty="implChkExRaterNo" resultType="int" order="BEFORE">
            select next value for seq_saf_heal_impl_chk_ex_rater as impl_chk_ex_rater_no
        </selectKey>
            insert into saf_heal_impl_chk_ex_rater
            (
                impl_chk_ex_rater_no
               ,impl_chk_dept_no
               ,company_nm
               ,position_nm
               ,user_nm
               ,rater_desc
            )
            values
            (
                #{implChkExRaterNo}
               ,#{implChkDeptNo}
               ,#{companyNm}
               ,#{positionNm}
               ,#{userNm}
               ,#{raterDesc}
            )
    </insert>
    <update id="resultUpdateAppr" >
        /* InspectionSHMapper.resultUpdateAppr [InspectionSH.xml] */
        UPDATE saf_heal_impl_chk_dept
        SET  appr_rqst_no = #{apprRqstNo}
        <if test="apprStepCd != null and !apprStepCd.equals('')">

        ,step_cd = #{apprStepCd}
            <if test='apprStepCd.equals("BAPSG")'>
                ,state_cd = 'STATE4'
                ,chk_finish_yn = 'Y'
                ,chk_finish_dt = convert(char(10), getDate(), 23)
            </if>
            <if test='apprStepCd.equals("BAPSA")'>
                ,state_cd = 'STATE3'
            </if>
        </if>
        where impl_chk_dept_no = #{implChkDeptNo}
    </update>
    <select id="getResultstatusList" resultType="hashMap">
        /* InspectionSHMapper.getResultstatusList [InspectionSH.xml] */
         with plant as (
             select code as plantCd
             from com_code_master
             where code_group_cd = 'COM_PLANT_CD'
             and code != '0000'
         ),
         gubunList as (
             select p.plantCd
                     ,g.gubun_type
                     ,g.gubun
                     ,g.sort_order
             from plant p
             inner join (
                 select 'assess' as gubun_type
                         ,'계획(조직수)' as gubun
                         ,1 as sort_order
                 union
                 select 'assess' as gubun_type
                         ,'실시(조직수)' as gubun
                         ,2 as sort_order
                 union
                 select 'assess' as gubun_type
                         ,'점검 실시율(%)' as gubun
                         ,3 as sort_order
                 union
                 select 'impr' as gubun_type
                         ,'요청(건수)' as gubun
                         ,4 as sort_order
                 union
                 select 'impr' as gubun_type
                         ,'조치미완료(건수)' as gubun
                         ,5 as sort_order
                 union
                 select 'impr' as gubun_type
                         ,'기한초과(건수)' as gubun
                         ,6 as sort_order
                 union
                 select 'impr' as gubun_type
                         ,'조치완료(건수)' as gubun
                         ,7 as sort_order
                 union
                 select 'impr' as gubun_type
                         ,'개선 조치율(%)' as gubun
                         ,8 as sort_order
             ) g on 1=1
         ),
         riskList as (
             select
                     shp.plant_cd as plantCd
                     ,dbo.GET_CODE_NM(shp.plant_cd, 'COM_PLANT_CD') as plant_nm
                     ,iif(shd.step_cd = 'BAPSG', '실시(조직수)', '계획(조직수)') AS gubun
                     ,convert(numeric(10),sum(case when shp.year &lt; #{year} then 1 else 0 end)) as oldCnt
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 1 and  shp.year = #{year}  then 1 else 0 end)) as mon1
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 2 and  shp.year = #{year}  then 1 else 0 end)) as mon2
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 3 and  shp.year = #{year}  then 1 else 0 end)) as mon3
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 4 and  shp.year = #{year}  then 1 else 0 end)) as mon4
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 5 and  shp.year = #{year}  then 1 else 0 end)) as mon5
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 6 and  shp.year = #{year}  then 1 else 0 end)) as mon6
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 7 and  shp.year = #{year}  then 1 else 0 end)) as mon7
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 8 and  shp.year = #{year}  then 1 else 0 end)) as mon8
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 9 and  shp.year = #{year}  then 1 else 0 end)) as mon9
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 10 and  shp.year = #{year}  then 1 else 0 end)) as mon10
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 11 and  shp.year = #{year}  then 1 else 0 end)) as mon11
                     ,convert(numeric(10),sum(case when substring(convert(char(10), shd.chk_end_dt, 23), 6, 2) = 12 and  shp.year = #{year}  then 1 else 0 end)) as mon12
                     ,convert(numeric(10),sum(case when shp.year = #{year} then 1 else 0 end)) as total
                     ,convert(numeric(10),sum(case when shp.year &lt;= #{year} then 1 else 0 end)) as allCnt 
             from saf_heal_impl_chk_dept shd
             inner join saf_heal_impl_chk_plan shp on shp.impl_chk_plan_no = shd.impl_chk_plan_no
             where 1=1
               and shp.step_cd = 'BAPSG'
               <if test="regRegdemCd != null and !regRegdemCd.equals('')">
                 and shp.reg_regdem = #{regRegdemCd}
               </if>     
             group by shp.plant_cd, iif(shd.step_cd = 'BAPSG', '실시(조직수)', '계획(조직수)')
         ),
         impr as (
             select
                     shp.plant_cd as plantCd
                     ,dbo.GET_CODE_NM(shp.plant_cd, 'COM_PLANT_CD') as plant_nm
                     ,iif(sia.impr_step_cd = 'IMST5', '조치완료(건수)', iif(datediff(dd, sia.act_limit_ymd, getdate()) > 0 , '기한초과(건수)','조치미완료(건수)')) AS gubun
                     ,convert(numeric(10),sum(case when left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) &lt; #{year} then 1 else 0 end)) as oldCnt
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 1 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon1
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 2 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon2
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 3 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon3
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 4 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon4
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 5 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon5
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 6 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon6
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 7 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon7
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 8 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon8
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 9 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon9
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 10 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon10
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 11 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon11
                     ,convert(numeric(10),sum(case when substring(convert(char(10), iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 23), 6, 2) = 12 and left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year}  then 1 else 0 end)) as mon12
                     ,convert(numeric(10),sum(case when left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) = #{year} then 1 else 0 end)) as total
                     ,convert(numeric(10),sum(case when left(iif(isnull(sia.act_limit_ymd, '') = '', sia.act_confirm_ymd, sia.act_limit_ymd), 4) &lt;= #{year} then 1 else 0 end)) as allCnt
             from saf_heal_impl_chk_dept shd
             inner join saf_heal_impl_chk_plan shp on shp.impl_chk_plan_no = shd.impl_chk_plan_no
             inner join saf_impr_act sia on sia.ref_table_id = shd.impl_chk_dept_no and sia.impr_class_cd = 'ICL38'
             where 1=1   
                <if test="regRegdemCd != null and !regRegdemCd.equals('')">
                  and shp.reg_regdem = #{regRegdemCd}
                </if>
             group by shp.plant_cd, iif(sia.impr_step_cd = 'IMST5', '조치완료(건수)', iif(datediff(dd, sia.act_limit_ymd, getdate()) > 0 , '기한초과(건수)','조치미완료(건수)'))
         )
         select  g.plantCd
                 ,dbo.GET_CODE_NM_LANG('kr', 'COM_PLANT_CD', g.plantCd) as plant_nm
                 ,'점검현황' as rsa_result
                 ,g.gubun
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.oldCnt else iif(g.gubun = r.gubun, r.oldCnt, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.oldCnt, 0)), sum(r.oldCnt)) * 100, 2), '0.00')) end as oldCnt
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon1 else iif(g.gubun = r.gubun, r.mon1, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon1, 0)), sum(r.mon1)) * 100, 2), '0.00')) end as mon1
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon2 else iif(g.gubun = r.gubun, r.mon2, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon2, 0)), sum(r.mon2)) * 100, 2), '0.00')) end as mon2
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon3 else iif(g.gubun = r.gubun, r.mon3, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon3, 0)), sum(r.mon3)) * 100, 2), '0.00')) end as mon3
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon4 else iif(g.gubun = r.gubun, r.mon4, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon4, 0)), sum(r.mon4)) * 100, 2), '0.00')) end as mon4
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon5 else iif(g.gubun = r.gubun, r.mon5, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon5, 0)), sum(r.mon5)) * 100, 2), '0.00')) end as mon5
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon6 else iif(g.gubun = r.gubun, r.mon6, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon6, 0)), sum(r.mon6)) * 100, 2), '0.00')) end as mon6
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon7 else iif(g.gubun = r.gubun, r.mon7, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon7, 0)), sum(r.mon7)) * 100, 2), '0.00')) end as mon7
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon8 else iif(g.gubun = r.gubun, r.mon8, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon8, 0)), sum(r.mon8)) * 100, 2), '0.00')) end as mon8
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon9 else iif(g.gubun = r.gubun, r.mon9, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon9, 0)), sum(r.mon9)) * 100, 2), '0.00')) end as mon9
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon10 else iif(g.gubun = r.gubun, r.mon10, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon10, 0)), sum(r.mon10)) * 100, 2), '0.00')) end as mon10
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon11 else iif(g.gubun = r.gubun, r.mon11, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon11, 0)), sum(r.mon11)) * 100, 2), '0.00')) end as mon11
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon12 else iif(g.gubun = r.gubun, r.mon12, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon12, 0)), sum(r.mon12)) * 100, 2), '0.00')) end as mon12
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.total else iif(g.gubun = r.gubun, r.total, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.total, 0)), sum(r.total)) * 100, 2), '0.00')) end as total
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.allCnt else iif(g.gubun = r.gubun, r.allCnt, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.allCnt, 0)), sum(r.allCnt)) * 100, 2), '0.00')) end as allCnt
                 ,max(g.sort_order)
         from gubunList g
         left outer join riskList r on r.plantCd = g.plantCd
         where 1=1
         and g.gubun_type = 'assess'
         <if test= "plantCd != null and !plantCd.equals('')">
           and g.plantCd = #{plantCd}
         </if>
         group by g.plantCd, g.gubun
         union all
         select  g.plantCd
                 ,dbo.GET_CODE_NM_LANG('kr', 'COM_PLANT_CD', g.plantCd) as plant_nm
                 ,'개선현황' as rsa_result
                 ,g.gubun
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.oldCnt else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.oldCnt, 0) else iif(g.gubun = r.gubun, r.oldCnt, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.oldCnt, 0)), sum(r.oldCnt)) * 100, 2), '0.00')) end as oldCnt
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon1 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon1, 0) else iif(g.gubun = r.gubun, r.mon1, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon1, 0)), sum(r.mon1)) * 100, 2), '0.00')) end as mon1
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon2 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon2, 0) else iif(g.gubun = r.gubun, r.mon2, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon2, 0)), sum(r.mon2)) * 100, 2), '0.00')) end as mon2
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon3 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon3, 0) else iif(g.gubun = r.gubun, r.mon3, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon3, 0)), sum(r.mon3)) * 100, 2), '0.00')) end as mon3
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon4 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon4, 0) else iif(g.gubun = r.gubun, r.mon4, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon4, 0)), sum(r.mon4)) * 100, 2), '0.00')) end as mon4
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon5 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon5, 0) else iif(g.gubun = r.gubun, r.mon5, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon5, 0)), sum(r.mon5)) * 100, 2), '0.00')) end as mon5
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon6 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon6, 0) else iif(g.gubun = r.gubun, r.mon6, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon6, 0)), sum(r.mon6)) * 100, 2), '0.00')) end as mon6
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon7 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon7, 0) else iif(g.gubun = r.gubun, r.mon7, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon7, 0)), sum(r.mon7)) * 100, 2), '0.00')) end as mon7
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon8 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon8, 0) else iif(g.gubun = r.gubun, r.mon8, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon8, 0)), sum(r.mon8)) * 100, 2), '0.00')) end as mon8
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon9 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon9, 0) else iif(g.gubun = r.gubun, r.mon9, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon9, 0)), sum(r.mon9)) * 100, 2), '0.00')) end as mon9
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon10 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon10, 0) else iif(g.gubun = r.gubun, r.mon10, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon10, 0)), sum(r.mon10)) * 100, 2), '0.00')) end as mon10
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon11 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon11, 0) else iif(g.gubun = r.gubun, r.mon11, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon11, 0)), sum(r.mon11)) * 100, 2), '0.00')) end as mon11
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon12 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon12, 0) else iif(g.gubun = r.gubun, r.mon12, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon12, 0)), sum(r.mon12)) * 100, 2), '0.00')) end as mon12
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.total else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.total, 0) else iif(g.gubun = r.gubun, r.total, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.total, 0)), sum(r.total)) * 100, 2), '0.00')) end as total
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.allCnt else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.allCnt, 0) else iif(g.gubun = r.gubun, r.allCnt, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.allCnt, 0)), sum(r.allCnt)) * 100, 2), '0.00')) end as allCnt
                 ,max(g.sort_order)
         from gubunList g
         left outer join impr r on r.plantCd = g.plantCd
         where 1=1
         and g.gubun_type = 'impr'
         <if test= "plantCd != null and !plantCd.equals('')">
           and g.plantCd = #{plantCd}
         </if>
         group by g.plantCd, g.gubun
         <!-- 전체일 경우 합계 데이터 조회 -->
         <if test='!totalFlag != null and totalFlag.equals("Y")'>
         union all
         select  '합계'
                 ,'합계'
                 ,'점검현황' as rsa_result
                 ,g.gubun
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.oldCnt else iif(g.gubun = r.gubun, r.oldCnt, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.oldCnt, 0)), sum(r.oldCnt)) * 100, 2), '0.00')) end as oldCnt
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon1 else iif(g.gubun = r.gubun, r.mon1, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon1, 0)), sum(r.mon1)) * 100, 2), '0.00')) end as mon1
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon2 else iif(g.gubun = r.gubun, r.mon2, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon2, 0)), sum(r.mon2)) * 100, 2), '0.00')) end as mon2
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon3 else iif(g.gubun = r.gubun, r.mon3, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon3, 0)), sum(r.mon3)) * 100, 2), '0.00')) end as mon3
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon4 else iif(g.gubun = r.gubun, r.mon4, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon4, 0)), sum(r.mon4)) * 100, 2), '0.00')) end as mon4
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon5 else iif(g.gubun = r.gubun, r.mon5, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon5, 0)), sum(r.mon5)) * 100, 2), '0.00')) end as mon5
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon6 else iif(g.gubun = r.gubun, r.mon6, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon6, 0)), sum(r.mon6)) * 100, 2), '0.00')) end as mon6
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon7 else iif(g.gubun = r.gubun, r.mon7, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon7, 0)), sum(r.mon7)) * 100, 2), '0.00')) end as mon7
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon8 else iif(g.gubun = r.gubun, r.mon8, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon8, 0)), sum(r.mon8)) * 100, 2), '0.00')) end as mon8
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon9 else iif(g.gubun = r.gubun, r.mon9, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon9, 0)), sum(r.mon9)) * 100, 2), '0.00')) end as mon9
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon10 else iif(g.gubun = r.gubun, r.mon10, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon10, 0)), sum(r.mon10)) * 100, 2), '0.00')) end as mon10
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon11 else iif(g.gubun = r.gubun, r.mon11, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon11, 0)), sum(r.mon11)) * 100, 2), '0.00')) end as mon11
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.mon12 else iif(g.gubun = r.gubun, r.mon12, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.mon12, 0)), sum(r.mon12)) * 100, 2), '0.00')) end as mon12
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.total else iif(g.gubun = r.gubun, r.total, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.total, 0)), sum(r.total)) * 100, 2), '0.00')) end as total
                 ,case when g.gubun != '점검 실시율(%)' then convert(varchar, isnull(sum(case when g.gubun = '계획(조직수)' then r.allCnt else iif(g.gubun = r.gubun, r.allCnt, 0) end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '실시(조직수)', r.allCnt, 0)), sum(r.allCnt)) * 100, 2), '0.00')) end as allCnt
                 ,max(g.sort_order)
         from gubunList g
         left outer join riskList r on r.plantCd = g.plantCd
         where 1=1
         and g.gubun_type = 'assess'
         group by g.gubun

         union all
         select  '합계'
                 ,'합계'
                 ,'개선현황' as rsa_result
                 ,g.gubun
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.oldCnt else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.oldCnt, 0) else iif(g.gubun = r.gubun, r.oldCnt, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.oldCnt, 0)), sum(r.oldCnt)) * 100, 2), '0.00')) end as oldCnt
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon1 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon1, 0) else iif(g.gubun = r.gubun, r.mon1, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon1, 0)), sum(r.mon1)) * 100, 2), '0.00')) end as mon1
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon2 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon2, 0) else iif(g.gubun = r.gubun, r.mon2, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon2, 0)), sum(r.mon2)) * 100, 2), '0.00')) end as mon2
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon3 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon3, 0) else iif(g.gubun = r.gubun, r.mon3, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon3, 0)), sum(r.mon3)) * 100, 2), '0.00')) end as mon3
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon4 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon4, 0) else iif(g.gubun = r.gubun, r.mon4, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon4, 0)), sum(r.mon4)) * 100, 2), '0.00')) end as mon4
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon5 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon5, 0) else iif(g.gubun = r.gubun, r.mon5, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon5, 0)), sum(r.mon5)) * 100, 2), '0.00')) end as mon5
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon6 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon6, 0) else iif(g.gubun = r.gubun, r.mon6, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon6, 0)), sum(r.mon6)) * 100, 2), '0.00')) end as mon6
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon7 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon7, 0) else iif(g.gubun = r.gubun, r.mon7, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon7, 0)), sum(r.mon7)) * 100, 2), '0.00')) end as mon7
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon8 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon8, 0) else iif(g.gubun = r.gubun, r.mon8, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon8, 0)), sum(r.mon8)) * 100, 2), '0.00')) end as mon8
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon9 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon9, 0) else iif(g.gubun = r.gubun, r.mon9, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon9, 0)), sum(r.mon9)) * 100, 2), '0.00')) end as mon9
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon10 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon10, 0) else iif(g.gubun = r.gubun, r.mon10, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon10, 0)), sum(r.mon10)) * 100, 2), '0.00')) end as mon10
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon11 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon11, 0) else iif(g.gubun = r.gubun, r.mon11, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon11, 0)), sum(r.mon11)) * 100, 2), '0.00')) end as mon11
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.mon12 else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.mon12, 0) else iif(g.gubun = r.gubun, r.mon12, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.mon12, 0)), sum(r.mon12)) * 100, 2), '0.00')) end as mon12
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.total else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.total, 0) else iif(g.gubun = r.gubun, r.total, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.total, 0)), sum(r.total)) * 100, 2), '0.00')) end as total
                 ,case when g.gubun != '개선 조치율(%)' then convert(varchar, isnull(sum(case when g.gubun = '요청(건수)' then r.allCnt else case when g.gubun = '조치미완료(건수)' then iif(g.gubun = r.gubun or r.gubun = '기한초과(건수)', r.allCnt, 0) else iif(g.gubun = r.gubun, r.allCnt, 0) end end), 0))
                     else convert(varchar, format(round(dbo.GET_DIVIDE(sum(iif(r.gubun = '조치완료(건수)', r.allCnt, 0)), sum(r.allCnt)) * 100, 2), '0.00')) end as allCnt
                 ,max(g.sort_order)
         from gubunList g
         left outer join impr r on r.plantCd = g.plantCd
         where 1=1
         and g.gubun_type = 'impr'

         group by g.gubun
         </if>
         <!-- 전체일 경우 합계 데이터 조회 -->
         order by g.plantCd, max(g.sort_order)
    </select>
    <select id ="getResultImprStatus" resultType="int">
        /* InspectionSHMapper.getResultImprStatus [InspectionSH.xml] */
        select count(*)
         from saf_impr_act sia
         left outer join com_appr_rqst car
         on sia.appr_rqst_no = car.appr_rqst_no
         left outer join dbo.LANG_CODE_MASTER('kr', 'COM_BIZ_APPR_STEP') bizAppr
         on car.biz_appr_step_cd = bizAppr.code

         where 1=1
         and del_yn != 'Y'
            and sia.impr_class_cd = 'ICL38'
            and (sia.impr_step_cd = 'IMST5'
            or (sia.impr_step_cd != 'IMST5' and datediff(day, convert(char(10), GETDATE(), 23) , sia.act_limit_ymd) >= 0 and sia.act_class_cd =  'ACL02'))
            and sia.ref_table_id = #{implChkDeptNo}

    </select>
    <delete id="deleteInspection">
        /* InspectionSHMapper.deleteInspection [InspectionSH.xml] */
        delete saf_heal_impl_chk_plan where impl_chk_plan_no = #{implChkPlanNo}
        delete saf_heal_impl_chk_dept where impl_chk_plan_no = #{implChkPlanNo}
    </delete>
    <delete id= "deleteUpdateResultDept">
        /* InspectionSHMapper.deleteUpdateResultDept [InspectionSH.xml] */
        update saf_heal_impl_chk_dept set
            state_cd = 'STATE1'
           ,step_cd = 'BAPSB'
           ,dept_reader_id = null
           ,chk_finish_yn = 'N'
           ,chk_finish_dt = null
         where impl_chk_dept_no = #{implChkDeptNo}
         delete saf_heal_impl_chk_in_rater where impl_chk_dept_no = #{implChkDeptNo}
         delete saf_heal_impl_chk_ex_rater where impl_chk_dept_no = #{implChkDeptNo}
         delete saf_heal_impl_chk_rslt where impl_chk_dept_no = #{implChkDeptNo}
         delete saf_impr_act where ref_table_id = #{implChkDeptNo}
    </delete>
</mapper>